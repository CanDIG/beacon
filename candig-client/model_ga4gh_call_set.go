/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client
import (
	"encoding/json"
)

// A CallSet is a collection of calls that were generated by the same analysis of the same sample.
type Ga4ghCallSet struct {
	// The call set ID.
	Id *string `json:"id,omitempty"`

	// The call set name.
	Name *string `json:"name,omitempty"`

	// The Biosample the call set data was generated from.
	BiosampleId *string `json:"biosample_id,omitempty"`

	// The IDs of the variant sets this call set has calls in.
	VariantSetIds *[]string `json:"variant_set_ids,omitempty"`

	// The date this call set was created in milliseconds from the epoch.
	Created *string `json:"created,omitempty"`

	// The time at which this call set was last updated in milliseconds from the epoch.
	Updated *string `json:"updated,omitempty"`

	Attributes *Ga4ghAttributes `json:"attributes,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *Ga4ghCallSet) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghCallSet) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Ga4ghCallSet) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Ga4ghCallSet) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *Ga4ghCallSet) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghCallSet) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ga4ghCallSet) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ga4ghCallSet) SetName(v string) {
	o.Name = &v
}

// GetBiosampleId returns the BiosampleId field if non-nil, zero value otherwise.
func (o *Ga4ghCallSet) GetBiosampleId() string {
	if o == nil || o.BiosampleId == nil {
		var ret string
		return ret
	}
	return *o.BiosampleId
}

// GetBiosampleIdOk returns a tuple with the BiosampleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghCallSet) GetBiosampleIdOk() (string, bool) {
	if o == nil || o.BiosampleId == nil {
		var ret string
		return ret, false
	}
	return *o.BiosampleId, true
}

// HasBiosampleId returns a boolean if a field has been set.
func (o *Ga4ghCallSet) HasBiosampleId() bool {
	if o != nil && o.BiosampleId != nil {
		return true
	}

	return false
}

// SetBiosampleId gets a reference to the given string and assigns it to the BiosampleId field.
func (o *Ga4ghCallSet) SetBiosampleId(v string) {
	o.BiosampleId = &v
}

// GetVariantSetIds returns the VariantSetIds field if non-nil, zero value otherwise.
func (o *Ga4ghCallSet) GetVariantSetIds() []string {
	if o == nil || o.VariantSetIds == nil {
		var ret []string
		return ret
	}
	return *o.VariantSetIds
}

// GetVariantSetIdsOk returns a tuple with the VariantSetIds field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghCallSet) GetVariantSetIdsOk() ([]string, bool) {
	if o == nil || o.VariantSetIds == nil {
		var ret []string
		return ret, false
	}
	return *o.VariantSetIds, true
}

// HasVariantSetIds returns a boolean if a field has been set.
func (o *Ga4ghCallSet) HasVariantSetIds() bool {
	if o != nil && o.VariantSetIds != nil {
		return true
	}

	return false
}

// SetVariantSetIds gets a reference to the given []string and assigns it to the VariantSetIds field.
func (o *Ga4ghCallSet) SetVariantSetIds(v []string) {
	o.VariantSetIds = &v
}

// GetCreated returns the Created field if non-nil, zero value otherwise.
func (o *Ga4ghCallSet) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghCallSet) GetCreatedOk() (string, bool) {
	if o == nil || o.Created == nil {
		var ret string
		return ret, false
	}
	return *o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Ga4ghCallSet) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *Ga4ghCallSet) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field if non-nil, zero value otherwise.
func (o *Ga4ghCallSet) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghCallSet) GetUpdatedOk() (string, bool) {
	if o == nil || o.Updated == nil {
		var ret string
		return ret, false
	}
	return *o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *Ga4ghCallSet) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *Ga4ghCallSet) SetUpdated(v string) {
	o.Updated = &v
}

// GetAttributes returns the Attributes field if non-nil, zero value otherwise.
func (o *Ga4ghCallSet) GetAttributes() Ga4ghAttributes {
	if o == nil || o.Attributes == nil {
		var ret Ga4ghAttributes
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghCallSet) GetAttributesOk() (Ga4ghAttributes, bool) {
	if o == nil || o.Attributes == nil {
		var ret Ga4ghAttributes
		return ret, false
	}
	return *o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *Ga4ghCallSet) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given Ga4ghAttributes and assigns it to the Attributes field.
func (o *Ga4ghCallSet) SetAttributes(v Ga4ghAttributes) {
	o.Attributes = &v
}


func (o Ga4ghCallSet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.BiosampleId != nil {
		toSerialize["biosample_id"] = o.BiosampleId
	}
	if o.VariantSetIds != nil {
		toSerialize["variant_set_ids"] = o.VariantSetIds
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	return json.Marshal(toSerialize)
}


