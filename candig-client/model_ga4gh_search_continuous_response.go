/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client

import (
	"encoding/json"
)

// Ga4ghSearchContinuousResponse This is the response from `POST /continuous/search` expressed as JSON.
type Ga4ghSearchContinuousResponse struct {
	// The list of matching continuous values, sorted by start position. All sampled values within the query range are returned. Unsampled values are assigned 'NaN' value. The values returned do not necessarily cover the same range as the query as all unsampled values might not be returned or if the query range extends beyond the reference range.
	Continuous *[]Ga4ghContinuous `json:"continuous,omitempty"`

	// The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results. This field will be empty if there aren't any additional results.
	NextPageToken *string `json:"next_page_token,omitempty"`
}

// GetContinuous returns the Continuous field if non-nil, zero value otherwise.
func (o *Ga4ghSearchContinuousResponse) GetContinuous() []Ga4ghContinuous {
	if o == nil || o.Continuous == nil {
		var ret []Ga4ghContinuous
		return ret
	}
	return *o.Continuous
}

// GetContinuousOk returns a tuple with the Continuous field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchContinuousResponse) GetContinuousOk() ([]Ga4ghContinuous, bool) {
	if o == nil || o.Continuous == nil {
		var ret []Ga4ghContinuous
		return ret, false
	}
	return *o.Continuous, true
}

// HasContinuous returns a boolean if a field has been set.
func (o *Ga4ghSearchContinuousResponse) HasContinuous() bool {
	if o != nil && o.Continuous != nil {
		return true
	}

	return false
}

// SetContinuous gets a reference to the given []Ga4ghContinuous and assigns it to the Continuous field.
func (o *Ga4ghSearchContinuousResponse) SetContinuous(v []Ga4ghContinuous) {
	o.Continuous = &v
}

// GetNextPageToken returns the NextPageToken field if non-nil, zero value otherwise.
func (o *Ga4ghSearchContinuousResponse) GetNextPageToken() string {
	if o == nil || o.NextPageToken == nil {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchContinuousResponse) GetNextPageTokenOk() (string, bool) {
	if o == nil || o.NextPageToken == nil {
		var ret string
		return ret, false
	}
	return *o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *Ga4ghSearchContinuousResponse) HasNextPageToken() bool {
	if o != nil && o.NextPageToken != nil {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *Ga4ghSearchContinuousResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o Ga4ghSearchContinuousResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Continuous != nil {
		toSerialize["continuous"] = o.Continuous
	}
	if o.NextPageToken != nil {
		toSerialize["next_page_token"] = o.NextPageToken
	}
	return json.Marshal(toSerialize)
}
