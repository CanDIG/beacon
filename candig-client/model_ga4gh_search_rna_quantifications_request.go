/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client

import (
	"encoding/json"
)

// Ga4ghSearchRnaQuantificationsRequest This request maps to the body of 'POST /rnaquantifications/search' as JSON.
type Ga4ghSearchRnaQuantificationsRequest struct {
	// Return only Rna Quantifications which belong to this set. Must be specified.
	RnaQuantificationSetId *string `json:"rna_quantification_set_id,omitempty"`

	// Return only RNA quantifications regarding the specified biosample. Optional.
	BiosampleId *string `json:"biosampleId,omitempty"`

	// Specifies the maximum number of results to return in a single page. If unspecified, a system default will be used.
	PageSize *int32 `json:"page_size,omitempty"`

	// The continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of 'nextPageToken' from the previous response.
	PageToken *string `json:"page_token,omitempty"`

	// Return only RNA quantifications related to the specified sampleId.
	SampleId *string `json:"sampleId,omitempty"`

	// Return only RNA quantifications related to the specified patientId.
	PatientId *string `json:"patientId,omitempty"`
}

// GetRnaQuantificationSetId returns the RnaQuantificationSetId field if non-nil, zero value otherwise.
func (o *Ga4ghSearchRnaQuantificationsRequest) GetRnaQuantificationSetId() string {
	if o == nil || o.RnaQuantificationSetId == nil {
		var ret string
		return ret
	}
	return *o.RnaQuantificationSetId
}

// GetRnaQuantificationSetIdOk returns a tuple with the RnaQuantificationSetId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchRnaQuantificationsRequest) GetRnaQuantificationSetIdOk() (string, bool) {
	if o == nil || o.RnaQuantificationSetId == nil {
		var ret string
		return ret, false
	}
	return *o.RnaQuantificationSetId, true
}

// HasRnaQuantificationSetId returns a boolean if a field has been set.
func (o *Ga4ghSearchRnaQuantificationsRequest) HasRnaQuantificationSetId() bool {
	if o != nil && o.RnaQuantificationSetId != nil {
		return true
	}

	return false
}

// SetRnaQuantificationSetId gets a reference to the given string and assigns it to the RnaQuantificationSetId field.
func (o *Ga4ghSearchRnaQuantificationsRequest) SetRnaQuantificationSetId(v string) {
	o.RnaQuantificationSetId = &v
}

// GetBiosampleId returns the BiosampleId field if non-nil, zero value otherwise.
func (o *Ga4ghSearchRnaQuantificationsRequest) GetBiosampleId() string {
	if o == nil || o.BiosampleId == nil {
		var ret string
		return ret
	}
	return *o.BiosampleId
}

// GetBiosampleIdOk returns a tuple with the BiosampleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchRnaQuantificationsRequest) GetBiosampleIdOk() (string, bool) {
	if o == nil || o.BiosampleId == nil {
		var ret string
		return ret, false
	}
	return *o.BiosampleId, true
}

// HasBiosampleId returns a boolean if a field has been set.
func (o *Ga4ghSearchRnaQuantificationsRequest) HasBiosampleId() bool {
	if o != nil && o.BiosampleId != nil {
		return true
	}

	return false
}

// SetBiosampleId gets a reference to the given string and assigns it to the BiosampleId field.
func (o *Ga4ghSearchRnaQuantificationsRequest) SetBiosampleId(v string) {
	o.BiosampleId = &v
}

// GetPageSize returns the PageSize field if non-nil, zero value otherwise.
func (o *Ga4ghSearchRnaQuantificationsRequest) GetPageSize() int32 {
	if o == nil || o.PageSize == nil {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchRnaQuantificationsRequest) GetPageSizeOk() (int32, bool) {
	if o == nil || o.PageSize == nil {
		var ret int32
		return ret, false
	}
	return *o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *Ga4ghSearchRnaQuantificationsRequest) HasPageSize() bool {
	if o != nil && o.PageSize != nil {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *Ga4ghSearchRnaQuantificationsRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetPageToken returns the PageToken field if non-nil, zero value otherwise.
func (o *Ga4ghSearchRnaQuantificationsRequest) GetPageToken() string {
	if o == nil || o.PageToken == nil {
		var ret string
		return ret
	}
	return *o.PageToken
}

// GetPageTokenOk returns a tuple with the PageToken field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchRnaQuantificationsRequest) GetPageTokenOk() (string, bool) {
	if o == nil || o.PageToken == nil {
		var ret string
		return ret, false
	}
	return *o.PageToken, true
}

// HasPageToken returns a boolean if a field has been set.
func (o *Ga4ghSearchRnaQuantificationsRequest) HasPageToken() bool {
	if o != nil && o.PageToken != nil {
		return true
	}

	return false
}

// SetPageToken gets a reference to the given string and assigns it to the PageToken field.
func (o *Ga4ghSearchRnaQuantificationsRequest) SetPageToken(v string) {
	o.PageToken = &v
}

// GetSampleId returns the SampleId field if non-nil, zero value otherwise.
func (o *Ga4ghSearchRnaQuantificationsRequest) GetSampleId() string {
	if o == nil || o.SampleId == nil {
		var ret string
		return ret
	}
	return *o.SampleId
}

// GetSampleIdOk returns a tuple with the SampleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchRnaQuantificationsRequest) GetSampleIdOk() (string, bool) {
	if o == nil || o.SampleId == nil {
		var ret string
		return ret, false
	}
	return *o.SampleId, true
}

// HasSampleId returns a boolean if a field has been set.
func (o *Ga4ghSearchRnaQuantificationsRequest) HasSampleId() bool {
	if o != nil && o.SampleId != nil {
		return true
	}

	return false
}

// SetSampleId gets a reference to the given string and assigns it to the SampleId field.
func (o *Ga4ghSearchRnaQuantificationsRequest) SetSampleId(v string) {
	o.SampleId = &v
}

// GetPatientId returns the PatientId field if non-nil, zero value otherwise.
func (o *Ga4ghSearchRnaQuantificationsRequest) GetPatientId() string {
	if o == nil || o.PatientId == nil {
		var ret string
		return ret
	}
	return *o.PatientId
}

// GetPatientIdOk returns a tuple with the PatientId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchRnaQuantificationsRequest) GetPatientIdOk() (string, bool) {
	if o == nil || o.PatientId == nil {
		var ret string
		return ret, false
	}
	return *o.PatientId, true
}

// HasPatientId returns a boolean if a field has been set.
func (o *Ga4ghSearchRnaQuantificationsRequest) HasPatientId() bool {
	if o != nil && o.PatientId != nil {
		return true
	}

	return false
}

// SetPatientId gets a reference to the given string and assigns it to the PatientId field.
func (o *Ga4ghSearchRnaQuantificationsRequest) SetPatientId(v string) {
	o.PatientId = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o Ga4ghSearchRnaQuantificationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RnaQuantificationSetId != nil {
		toSerialize["rna_quantification_set_id"] = o.RnaQuantificationSetId
	}
	if o.BiosampleId != nil {
		toSerialize["biosampleId"] = o.BiosampleId
	}
	if o.PageSize != nil {
		toSerialize["page_size"] = o.PageSize
	}
	if o.PageToken != nil {
		toSerialize["page_token"] = o.PageToken
	}
	if o.SampleId != nil {
		toSerialize["sampleId"] = o.SampleId
	}
	if o.PatientId != nil {
		toSerialize["patientId"] = o.PatientId
	}
	return json.Marshal(toSerialize)
}
