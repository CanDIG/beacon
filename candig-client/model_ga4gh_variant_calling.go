/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client

import (
	"encoding/json"
)

// Ga4ghVariantCalling struct for Ga4ghVariantCalling
type Ga4ghVariantCalling struct {
	// This is unique in the context of the server instance.
	Id *string `json:"id,omitempty"`

	// The ID of the dataset this object belongs to.
	DatasetId *string `json:"datasetId,omitempty"`

	// This is a label or symbolic identifier for this object.
	Name *string `json:"name,omitempty"`

	// This attribute contains human readable text.
	Description *string `json:"description,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was created.
	Created *string `json:"created,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated.
	Updated *string `json:"updated,omitempty"`

	SampleId *string `json:"sampleId,omitempty"`

	InHousePipeline *string `json:"inHousePipeline,omitempty"`

	VariantCaller *string `json:"variantCaller,omitempty"`

	Tabulate *string `json:"tabulate,omitempty"`

	Annotation *string `json:"annotation,omitempty"`

	MergeTool *string `json:"mergeTool,omitempty"`

	RdaToTab *string `json:"rdaToTab,omitempty"`

	Delly *string `json:"delly,omitempty"`

	PostFilter *string `json:"postFilter,omitempty"`

	ClipFilter *string `json:"clipFilter,omitempty"`

	Cosmic *string `json:"cosmic,omitempty"`

	DbSnp *string `json:"dbSnp,omitempty"`

	VariantCallingId *string `json:"variantCallingId,omitempty"`

	AlignmentId *string `json:"alignmentId,omitempty"`

	Site *string `json:"site,omitempty"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Ga4ghVariantCalling) SetId(v string) {
	o.Id = &v
}

// GetDatasetId returns the DatasetId field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetDatasetId() string {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret
	}
	return *o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetDatasetIdOk() (string, bool) {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret, false
	}
	return *o.DatasetId, true
}

// HasDatasetId returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasDatasetId() bool {
	if o != nil && o.DatasetId != nil {
		return true
	}

	return false
}

// SetDatasetId gets a reference to the given string and assigns it to the DatasetId field.
func (o *Ga4ghVariantCalling) SetDatasetId(v string) {
	o.DatasetId = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ga4ghVariantCalling) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Ga4ghVariantCalling) SetDescription(v string) {
	o.Description = &v
}

// GetCreated returns the Created field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetCreatedOk() (string, bool) {
	if o == nil || o.Created == nil {
		var ret string
		return ret, false
	}
	return *o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *Ga4ghVariantCalling) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetUpdatedOk() (string, bool) {
	if o == nil || o.Updated == nil {
		var ret string
		return ret, false
	}
	return *o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *Ga4ghVariantCalling) SetUpdated(v string) {
	o.Updated = &v
}

// GetSampleId returns the SampleId field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetSampleId() string {
	if o == nil || o.SampleId == nil {
		var ret string
		return ret
	}
	return *o.SampleId
}

// GetSampleIdOk returns a tuple with the SampleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetSampleIdOk() (string, bool) {
	if o == nil || o.SampleId == nil {
		var ret string
		return ret, false
	}
	return *o.SampleId, true
}

// HasSampleId returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasSampleId() bool {
	if o != nil && o.SampleId != nil {
		return true
	}

	return false
}

// SetSampleId gets a reference to the given string and assigns it to the SampleId field.
func (o *Ga4ghVariantCalling) SetSampleId(v string) {
	o.SampleId = &v
}

// GetInHousePipeline returns the InHousePipeline field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetInHousePipeline() string {
	if o == nil || o.InHousePipeline == nil {
		var ret string
		return ret
	}
	return *o.InHousePipeline
}

// GetInHousePipelineOk returns a tuple with the InHousePipeline field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetInHousePipelineOk() (string, bool) {
	if o == nil || o.InHousePipeline == nil {
		var ret string
		return ret, false
	}
	return *o.InHousePipeline, true
}

// HasInHousePipeline returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasInHousePipeline() bool {
	if o != nil && o.InHousePipeline != nil {
		return true
	}

	return false
}

// SetInHousePipeline gets a reference to the given string and assigns it to the InHousePipeline field.
func (o *Ga4ghVariantCalling) SetInHousePipeline(v string) {
	o.InHousePipeline = &v
}

// GetVariantCaller returns the VariantCaller field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetVariantCaller() string {
	if o == nil || o.VariantCaller == nil {
		var ret string
		return ret
	}
	return *o.VariantCaller
}

// GetVariantCallerOk returns a tuple with the VariantCaller field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetVariantCallerOk() (string, bool) {
	if o == nil || o.VariantCaller == nil {
		var ret string
		return ret, false
	}
	return *o.VariantCaller, true
}

// HasVariantCaller returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasVariantCaller() bool {
	if o != nil && o.VariantCaller != nil {
		return true
	}

	return false
}

// SetVariantCaller gets a reference to the given string and assigns it to the VariantCaller field.
func (o *Ga4ghVariantCalling) SetVariantCaller(v string) {
	o.VariantCaller = &v
}

// GetTabulate returns the Tabulate field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetTabulate() string {
	if o == nil || o.Tabulate == nil {
		var ret string
		return ret
	}
	return *o.Tabulate
}

// GetTabulateOk returns a tuple with the Tabulate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetTabulateOk() (string, bool) {
	if o == nil || o.Tabulate == nil {
		var ret string
		return ret, false
	}
	return *o.Tabulate, true
}

// HasTabulate returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasTabulate() bool {
	if o != nil && o.Tabulate != nil {
		return true
	}

	return false
}

// SetTabulate gets a reference to the given string and assigns it to the Tabulate field.
func (o *Ga4ghVariantCalling) SetTabulate(v string) {
	o.Tabulate = &v
}

// GetAnnotation returns the Annotation field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetAnnotation() string {
	if o == nil || o.Annotation == nil {
		var ret string
		return ret
	}
	return *o.Annotation
}

// GetAnnotationOk returns a tuple with the Annotation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetAnnotationOk() (string, bool) {
	if o == nil || o.Annotation == nil {
		var ret string
		return ret, false
	}
	return *o.Annotation, true
}

// HasAnnotation returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasAnnotation() bool {
	if o != nil && o.Annotation != nil {
		return true
	}

	return false
}

// SetAnnotation gets a reference to the given string and assigns it to the Annotation field.
func (o *Ga4ghVariantCalling) SetAnnotation(v string) {
	o.Annotation = &v
}

// GetMergeTool returns the MergeTool field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetMergeTool() string {
	if o == nil || o.MergeTool == nil {
		var ret string
		return ret
	}
	return *o.MergeTool
}

// GetMergeToolOk returns a tuple with the MergeTool field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetMergeToolOk() (string, bool) {
	if o == nil || o.MergeTool == nil {
		var ret string
		return ret, false
	}
	return *o.MergeTool, true
}

// HasMergeTool returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasMergeTool() bool {
	if o != nil && o.MergeTool != nil {
		return true
	}

	return false
}

// SetMergeTool gets a reference to the given string and assigns it to the MergeTool field.
func (o *Ga4ghVariantCalling) SetMergeTool(v string) {
	o.MergeTool = &v
}

// GetRdaToTab returns the RdaToTab field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetRdaToTab() string {
	if o == nil || o.RdaToTab == nil {
		var ret string
		return ret
	}
	return *o.RdaToTab
}

// GetRdaToTabOk returns a tuple with the RdaToTab field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetRdaToTabOk() (string, bool) {
	if o == nil || o.RdaToTab == nil {
		var ret string
		return ret, false
	}
	return *o.RdaToTab, true
}

// HasRdaToTab returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasRdaToTab() bool {
	if o != nil && o.RdaToTab != nil {
		return true
	}

	return false
}

// SetRdaToTab gets a reference to the given string and assigns it to the RdaToTab field.
func (o *Ga4ghVariantCalling) SetRdaToTab(v string) {
	o.RdaToTab = &v
}

// GetDelly returns the Delly field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetDelly() string {
	if o == nil || o.Delly == nil {
		var ret string
		return ret
	}
	return *o.Delly
}

// GetDellyOk returns a tuple with the Delly field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetDellyOk() (string, bool) {
	if o == nil || o.Delly == nil {
		var ret string
		return ret, false
	}
	return *o.Delly, true
}

// HasDelly returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasDelly() bool {
	if o != nil && o.Delly != nil {
		return true
	}

	return false
}

// SetDelly gets a reference to the given string and assigns it to the Delly field.
func (o *Ga4ghVariantCalling) SetDelly(v string) {
	o.Delly = &v
}

// GetPostFilter returns the PostFilter field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetPostFilter() string {
	if o == nil || o.PostFilter == nil {
		var ret string
		return ret
	}
	return *o.PostFilter
}

// GetPostFilterOk returns a tuple with the PostFilter field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetPostFilterOk() (string, bool) {
	if o == nil || o.PostFilter == nil {
		var ret string
		return ret, false
	}
	return *o.PostFilter, true
}

// HasPostFilter returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasPostFilter() bool {
	if o != nil && o.PostFilter != nil {
		return true
	}

	return false
}

// SetPostFilter gets a reference to the given string and assigns it to the PostFilter field.
func (o *Ga4ghVariantCalling) SetPostFilter(v string) {
	o.PostFilter = &v
}

// GetClipFilter returns the ClipFilter field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetClipFilter() string {
	if o == nil || o.ClipFilter == nil {
		var ret string
		return ret
	}
	return *o.ClipFilter
}

// GetClipFilterOk returns a tuple with the ClipFilter field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetClipFilterOk() (string, bool) {
	if o == nil || o.ClipFilter == nil {
		var ret string
		return ret, false
	}
	return *o.ClipFilter, true
}

// HasClipFilter returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasClipFilter() bool {
	if o != nil && o.ClipFilter != nil {
		return true
	}

	return false
}

// SetClipFilter gets a reference to the given string and assigns it to the ClipFilter field.
func (o *Ga4ghVariantCalling) SetClipFilter(v string) {
	o.ClipFilter = &v
}

// GetCosmic returns the Cosmic field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetCosmic() string {
	if o == nil || o.Cosmic == nil {
		var ret string
		return ret
	}
	return *o.Cosmic
}

// GetCosmicOk returns a tuple with the Cosmic field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetCosmicOk() (string, bool) {
	if o == nil || o.Cosmic == nil {
		var ret string
		return ret, false
	}
	return *o.Cosmic, true
}

// HasCosmic returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasCosmic() bool {
	if o != nil && o.Cosmic != nil {
		return true
	}

	return false
}

// SetCosmic gets a reference to the given string and assigns it to the Cosmic field.
func (o *Ga4ghVariantCalling) SetCosmic(v string) {
	o.Cosmic = &v
}

// GetDbSnp returns the DbSnp field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetDbSnp() string {
	if o == nil || o.DbSnp == nil {
		var ret string
		return ret
	}
	return *o.DbSnp
}

// GetDbSnpOk returns a tuple with the DbSnp field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetDbSnpOk() (string, bool) {
	if o == nil || o.DbSnp == nil {
		var ret string
		return ret, false
	}
	return *o.DbSnp, true
}

// HasDbSnp returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasDbSnp() bool {
	if o != nil && o.DbSnp != nil {
		return true
	}

	return false
}

// SetDbSnp gets a reference to the given string and assigns it to the DbSnp field.
func (o *Ga4ghVariantCalling) SetDbSnp(v string) {
	o.DbSnp = &v
}

// GetVariantCallingId returns the VariantCallingId field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetVariantCallingId() string {
	if o == nil || o.VariantCallingId == nil {
		var ret string
		return ret
	}
	return *o.VariantCallingId
}

// GetVariantCallingIdOk returns a tuple with the VariantCallingId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetVariantCallingIdOk() (string, bool) {
	if o == nil || o.VariantCallingId == nil {
		var ret string
		return ret, false
	}
	return *o.VariantCallingId, true
}

// HasVariantCallingId returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasVariantCallingId() bool {
	if o != nil && o.VariantCallingId != nil {
		return true
	}

	return false
}

// SetVariantCallingId gets a reference to the given string and assigns it to the VariantCallingId field.
func (o *Ga4ghVariantCalling) SetVariantCallingId(v string) {
	o.VariantCallingId = &v
}

// GetAlignmentId returns the AlignmentId field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetAlignmentId() string {
	if o == nil || o.AlignmentId == nil {
		var ret string
		return ret
	}
	return *o.AlignmentId
}

// GetAlignmentIdOk returns a tuple with the AlignmentId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetAlignmentIdOk() (string, bool) {
	if o == nil || o.AlignmentId == nil {
		var ret string
		return ret, false
	}
	return *o.AlignmentId, true
}

// HasAlignmentId returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasAlignmentId() bool {
	if o != nil && o.AlignmentId != nil {
		return true
	}

	return false
}

// SetAlignmentId gets a reference to the given string and assigns it to the AlignmentId field.
func (o *Ga4ghVariantCalling) SetAlignmentId(v string) {
	o.AlignmentId = &v
}

// GetSite returns the Site field if non-nil, zero value otherwise.
func (o *Ga4ghVariantCalling) GetSite() string {
	if o == nil || o.Site == nil {
		var ret string
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghVariantCalling) GetSiteOk() (string, bool) {
	if o == nil || o.Site == nil {
		var ret string
		return ret, false
	}
	return *o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *Ga4ghVariantCalling) HasSite() bool {
	if o != nil && o.Site != nil {
		return true
	}

	return false
}

// SetSite gets a reference to the given string and assigns it to the Site field.
func (o *Ga4ghVariantCalling) SetSite(v string) {
	o.Site = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o Ga4ghVariantCalling) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DatasetId != nil {
		toSerialize["datasetId"] = o.DatasetId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.SampleId != nil {
		toSerialize["sampleId"] = o.SampleId
	}
	if o.InHousePipeline != nil {
		toSerialize["inHousePipeline"] = o.InHousePipeline
	}
	if o.VariantCaller != nil {
		toSerialize["variantCaller"] = o.VariantCaller
	}
	if o.Tabulate != nil {
		toSerialize["tabulate"] = o.Tabulate
	}
	if o.Annotation != nil {
		toSerialize["annotation"] = o.Annotation
	}
	if o.MergeTool != nil {
		toSerialize["mergeTool"] = o.MergeTool
	}
	if o.RdaToTab != nil {
		toSerialize["rdaToTab"] = o.RdaToTab
	}
	if o.Delly != nil {
		toSerialize["delly"] = o.Delly
	}
	if o.PostFilter != nil {
		toSerialize["postFilter"] = o.PostFilter
	}
	if o.ClipFilter != nil {
		toSerialize["clipFilter"] = o.ClipFilter
	}
	if o.Cosmic != nil {
		toSerialize["cosmic"] = o.Cosmic
	}
	if o.DbSnp != nil {
		toSerialize["dbSnp"] = o.DbSnp
	}
	if o.VariantCallingId != nil {
		toSerialize["variantCallingId"] = o.VariantCallingId
	}
	if o.AlignmentId != nil {
		toSerialize["alignmentId"] = o.AlignmentId
	}
	if o.Site != nil {
		toSerialize["site"] = o.Site
	}
	return json.Marshal(toSerialize)
}
