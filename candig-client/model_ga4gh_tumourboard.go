/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client

import (
	"encoding/json"
)

// Ga4ghTumourboard struct for Ga4ghTumourboard
type Ga4ghTumourboard struct {
	// This is unique in the context of the server instance.
	Id *string `json:"id,omitempty"`

	// The ID of the dataset this object belongs to.
	DatasetId *string `json:"datasetId,omitempty"`

	// This is a label or symbolic identifier for this object.
	Name *string `json:"name,omitempty"`

	// This attribute contains human readable text.
	Description *string `json:"description,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was created.
	Created *string `json:"created,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated.
	Updated *string `json:"updated,omitempty"`

	PatientId *string `json:"patientId,omitempty"`

	DateOfMolecularTumorBoard *string `json:"dateOfMolecularTumorBoard,omitempty"`

	TypeOfSampleAnalyzed *string `json:"typeOfSampleAnalyzed,omitempty"`

	TypeOfTumourSampleAnalyzed *string `json:"typeOfTumourSampleAnalyzed,omitempty"`

	AnalysesDiscussed *string `json:"analysesDiscussed,omitempty"`

	SomaticSampleType *string `json:"somaticSampleType,omitempty"`

	NormalExpressionComparator *string `json:"normalExpressionComparator,omitempty"`

	DiseaseExpressionComparator *string `json:"diseaseExpressionComparator,omitempty"`

	HasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer *string `json:"hasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer,omitempty"`

	ActionableTargetFound *string `json:"actionableTargetFound,omitempty"`

	MolecularTumorBoardRecommendation *string `json:"molecularTumorBoardRecommendation,omitempty"`

	GermlineDnaSampleId *string `json:"germlineDnaSampleId,omitempty"`

	TumorDnaSampleId *string `json:"tumorDnaSampleId,omitempty"`

	TumorRnaSampleId *string `json:"tumorRnaSampleId,omitempty"`

	GermlineSnvDiscussed *string `json:"germlineSnvDiscussed,omitempty"`

	SomaticSnvDiscussed *string `json:"somaticSnvDiscussed,omitempty"`

	CnvsDiscussed *string `json:"cnvsDiscussed,omitempty"`

	StructuralVariantDiscussed *string `json:"structuralVariantDiscussed,omitempty"`

	ClassificationOfVariants *string `json:"classificationOfVariants,omitempty"`

	ClinicalValidationProgress *string `json:"clinicalValidationProgress,omitempty"`

	TypeOfValidation *string `json:"typeOfValidation,omitempty"`

	AgentOrDrugClass *string `json:"agentOrDrugClass,omitempty"`

	LevelOfEvidenceForExpressionTargetAgentMatch *string `json:"levelOfEvidenceForExpressionTargetAgentMatch,omitempty"`

	DidTreatmentPlanChangeBasedOnProfilingResult *string `json:"didTreatmentPlanChangeBasedOnProfilingResult,omitempty"`

	HowTreatmentHasAlteredBasedOnProfiling *string `json:"howTreatmentHasAlteredBasedOnProfiling,omitempty"`

	ReasonTreatmentPlanDidNotChangeBasedOnProfiling *string `json:"reasonTreatmentPlanDidNotChangeBasedOnProfiling,omitempty"`

	DetailsOfTreatmentPlanImpact *string `json:"detailsOfTreatmentPlanImpact,omitempty"`

	PatientOrFamilyInformedOfGermlineVariant *string `json:"patientOrFamilyInformedOfGermlineVariant,omitempty"`

	PatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling *string `json:"patientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling,omitempty"`

	SummaryReport *string `json:"summaryReport,omitempty"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Ga4ghTumourboard) SetId(v string) {
	o.Id = &v
}

// GetDatasetId returns the DatasetId field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetDatasetId() string {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret
	}
	return *o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetDatasetIdOk() (string, bool) {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret, false
	}
	return *o.DatasetId, true
}

// HasDatasetId returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasDatasetId() bool {
	if o != nil && o.DatasetId != nil {
		return true
	}

	return false
}

// SetDatasetId gets a reference to the given string and assigns it to the DatasetId field.
func (o *Ga4ghTumourboard) SetDatasetId(v string) {
	o.DatasetId = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ga4ghTumourboard) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Ga4ghTumourboard) SetDescription(v string) {
	o.Description = &v
}

// GetCreated returns the Created field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetCreatedOk() (string, bool) {
	if o == nil || o.Created == nil {
		var ret string
		return ret, false
	}
	return *o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *Ga4ghTumourboard) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetUpdatedOk() (string, bool) {
	if o == nil || o.Updated == nil {
		var ret string
		return ret, false
	}
	return *o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *Ga4ghTumourboard) SetUpdated(v string) {
	o.Updated = &v
}

// GetPatientId returns the PatientId field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetPatientId() string {
	if o == nil || o.PatientId == nil {
		var ret string
		return ret
	}
	return *o.PatientId
}

// GetPatientIdOk returns a tuple with the PatientId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetPatientIdOk() (string, bool) {
	if o == nil || o.PatientId == nil {
		var ret string
		return ret, false
	}
	return *o.PatientId, true
}

// HasPatientId returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasPatientId() bool {
	if o != nil && o.PatientId != nil {
		return true
	}

	return false
}

// SetPatientId gets a reference to the given string and assigns it to the PatientId field.
func (o *Ga4ghTumourboard) SetPatientId(v string) {
	o.PatientId = &v
}

// GetDateOfMolecularTumorBoard returns the DateOfMolecularTumorBoard field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetDateOfMolecularTumorBoard() string {
	if o == nil || o.DateOfMolecularTumorBoard == nil {
		var ret string
		return ret
	}
	return *o.DateOfMolecularTumorBoard
}

// GetDateOfMolecularTumorBoardOk returns a tuple with the DateOfMolecularTumorBoard field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetDateOfMolecularTumorBoardOk() (string, bool) {
	if o == nil || o.DateOfMolecularTumorBoard == nil {
		var ret string
		return ret, false
	}
	return *o.DateOfMolecularTumorBoard, true
}

// HasDateOfMolecularTumorBoard returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasDateOfMolecularTumorBoard() bool {
	if o != nil && o.DateOfMolecularTumorBoard != nil {
		return true
	}

	return false
}

// SetDateOfMolecularTumorBoard gets a reference to the given string and assigns it to the DateOfMolecularTumorBoard field.
func (o *Ga4ghTumourboard) SetDateOfMolecularTumorBoard(v string) {
	o.DateOfMolecularTumorBoard = &v
}

// GetTypeOfSampleAnalyzed returns the TypeOfSampleAnalyzed field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetTypeOfSampleAnalyzed() string {
	if o == nil || o.TypeOfSampleAnalyzed == nil {
		var ret string
		return ret
	}
	return *o.TypeOfSampleAnalyzed
}

// GetTypeOfSampleAnalyzedOk returns a tuple with the TypeOfSampleAnalyzed field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetTypeOfSampleAnalyzedOk() (string, bool) {
	if o == nil || o.TypeOfSampleAnalyzed == nil {
		var ret string
		return ret, false
	}
	return *o.TypeOfSampleAnalyzed, true
}

// HasTypeOfSampleAnalyzed returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasTypeOfSampleAnalyzed() bool {
	if o != nil && o.TypeOfSampleAnalyzed != nil {
		return true
	}

	return false
}

// SetTypeOfSampleAnalyzed gets a reference to the given string and assigns it to the TypeOfSampleAnalyzed field.
func (o *Ga4ghTumourboard) SetTypeOfSampleAnalyzed(v string) {
	o.TypeOfSampleAnalyzed = &v
}

// GetTypeOfTumourSampleAnalyzed returns the TypeOfTumourSampleAnalyzed field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetTypeOfTumourSampleAnalyzed() string {
	if o == nil || o.TypeOfTumourSampleAnalyzed == nil {
		var ret string
		return ret
	}
	return *o.TypeOfTumourSampleAnalyzed
}

// GetTypeOfTumourSampleAnalyzedOk returns a tuple with the TypeOfTumourSampleAnalyzed field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetTypeOfTumourSampleAnalyzedOk() (string, bool) {
	if o == nil || o.TypeOfTumourSampleAnalyzed == nil {
		var ret string
		return ret, false
	}
	return *o.TypeOfTumourSampleAnalyzed, true
}

// HasTypeOfTumourSampleAnalyzed returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasTypeOfTumourSampleAnalyzed() bool {
	if o != nil && o.TypeOfTumourSampleAnalyzed != nil {
		return true
	}

	return false
}

// SetTypeOfTumourSampleAnalyzed gets a reference to the given string and assigns it to the TypeOfTumourSampleAnalyzed field.
func (o *Ga4ghTumourboard) SetTypeOfTumourSampleAnalyzed(v string) {
	o.TypeOfTumourSampleAnalyzed = &v
}

// GetAnalysesDiscussed returns the AnalysesDiscussed field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetAnalysesDiscussed() string {
	if o == nil || o.AnalysesDiscussed == nil {
		var ret string
		return ret
	}
	return *o.AnalysesDiscussed
}

// GetAnalysesDiscussedOk returns a tuple with the AnalysesDiscussed field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetAnalysesDiscussedOk() (string, bool) {
	if o == nil || o.AnalysesDiscussed == nil {
		var ret string
		return ret, false
	}
	return *o.AnalysesDiscussed, true
}

// HasAnalysesDiscussed returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasAnalysesDiscussed() bool {
	if o != nil && o.AnalysesDiscussed != nil {
		return true
	}

	return false
}

// SetAnalysesDiscussed gets a reference to the given string and assigns it to the AnalysesDiscussed field.
func (o *Ga4ghTumourboard) SetAnalysesDiscussed(v string) {
	o.AnalysesDiscussed = &v
}

// GetSomaticSampleType returns the SomaticSampleType field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetSomaticSampleType() string {
	if o == nil || o.SomaticSampleType == nil {
		var ret string
		return ret
	}
	return *o.SomaticSampleType
}

// GetSomaticSampleTypeOk returns a tuple with the SomaticSampleType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetSomaticSampleTypeOk() (string, bool) {
	if o == nil || o.SomaticSampleType == nil {
		var ret string
		return ret, false
	}
	return *o.SomaticSampleType, true
}

// HasSomaticSampleType returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasSomaticSampleType() bool {
	if o != nil && o.SomaticSampleType != nil {
		return true
	}

	return false
}

// SetSomaticSampleType gets a reference to the given string and assigns it to the SomaticSampleType field.
func (o *Ga4ghTumourboard) SetSomaticSampleType(v string) {
	o.SomaticSampleType = &v
}

// GetNormalExpressionComparator returns the NormalExpressionComparator field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetNormalExpressionComparator() string {
	if o == nil || o.NormalExpressionComparator == nil {
		var ret string
		return ret
	}
	return *o.NormalExpressionComparator
}

// GetNormalExpressionComparatorOk returns a tuple with the NormalExpressionComparator field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetNormalExpressionComparatorOk() (string, bool) {
	if o == nil || o.NormalExpressionComparator == nil {
		var ret string
		return ret, false
	}
	return *o.NormalExpressionComparator, true
}

// HasNormalExpressionComparator returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasNormalExpressionComparator() bool {
	if o != nil && o.NormalExpressionComparator != nil {
		return true
	}

	return false
}

// SetNormalExpressionComparator gets a reference to the given string and assigns it to the NormalExpressionComparator field.
func (o *Ga4ghTumourboard) SetNormalExpressionComparator(v string) {
	o.NormalExpressionComparator = &v
}

// GetDiseaseExpressionComparator returns the DiseaseExpressionComparator field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetDiseaseExpressionComparator() string {
	if o == nil || o.DiseaseExpressionComparator == nil {
		var ret string
		return ret
	}
	return *o.DiseaseExpressionComparator
}

// GetDiseaseExpressionComparatorOk returns a tuple with the DiseaseExpressionComparator field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetDiseaseExpressionComparatorOk() (string, bool) {
	if o == nil || o.DiseaseExpressionComparator == nil {
		var ret string
		return ret, false
	}
	return *o.DiseaseExpressionComparator, true
}

// HasDiseaseExpressionComparator returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasDiseaseExpressionComparator() bool {
	if o != nil && o.DiseaseExpressionComparator != nil {
		return true
	}

	return false
}

// SetDiseaseExpressionComparator gets a reference to the given string and assigns it to the DiseaseExpressionComparator field.
func (o *Ga4ghTumourboard) SetDiseaseExpressionComparator(v string) {
	o.DiseaseExpressionComparator = &v
}

// GetHasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer returns the HasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetHasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer() string {
	if o == nil || o.HasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer == nil {
		var ret string
		return ret
	}
	return *o.HasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer
}

// GetHasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancerOk returns a tuple with the HasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetHasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancerOk() (string, bool) {
	if o == nil || o.HasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer == nil {
		var ret string
		return ret, false
	}
	return *o.HasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer, true
}

// HasHasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasHasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer() bool {
	if o != nil && o.HasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer != nil {
		return true
	}

	return false
}

// SetHasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer gets a reference to the given string and assigns it to the HasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer field.
func (o *Ga4ghTumourboard) SetHasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer(v string) {
	o.HasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer = &v
}

// GetActionableTargetFound returns the ActionableTargetFound field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetActionableTargetFound() string {
	if o == nil || o.ActionableTargetFound == nil {
		var ret string
		return ret
	}
	return *o.ActionableTargetFound
}

// GetActionableTargetFoundOk returns a tuple with the ActionableTargetFound field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetActionableTargetFoundOk() (string, bool) {
	if o == nil || o.ActionableTargetFound == nil {
		var ret string
		return ret, false
	}
	return *o.ActionableTargetFound, true
}

// HasActionableTargetFound returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasActionableTargetFound() bool {
	if o != nil && o.ActionableTargetFound != nil {
		return true
	}

	return false
}

// SetActionableTargetFound gets a reference to the given string and assigns it to the ActionableTargetFound field.
func (o *Ga4ghTumourboard) SetActionableTargetFound(v string) {
	o.ActionableTargetFound = &v
}

// GetMolecularTumorBoardRecommendation returns the MolecularTumorBoardRecommendation field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetMolecularTumorBoardRecommendation() string {
	if o == nil || o.MolecularTumorBoardRecommendation == nil {
		var ret string
		return ret
	}
	return *o.MolecularTumorBoardRecommendation
}

// GetMolecularTumorBoardRecommendationOk returns a tuple with the MolecularTumorBoardRecommendation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetMolecularTumorBoardRecommendationOk() (string, bool) {
	if o == nil || o.MolecularTumorBoardRecommendation == nil {
		var ret string
		return ret, false
	}
	return *o.MolecularTumorBoardRecommendation, true
}

// HasMolecularTumorBoardRecommendation returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasMolecularTumorBoardRecommendation() bool {
	if o != nil && o.MolecularTumorBoardRecommendation != nil {
		return true
	}

	return false
}

// SetMolecularTumorBoardRecommendation gets a reference to the given string and assigns it to the MolecularTumorBoardRecommendation field.
func (o *Ga4ghTumourboard) SetMolecularTumorBoardRecommendation(v string) {
	o.MolecularTumorBoardRecommendation = &v
}

// GetGermlineDnaSampleId returns the GermlineDnaSampleId field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetGermlineDnaSampleId() string {
	if o == nil || o.GermlineDnaSampleId == nil {
		var ret string
		return ret
	}
	return *o.GermlineDnaSampleId
}

// GetGermlineDnaSampleIdOk returns a tuple with the GermlineDnaSampleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetGermlineDnaSampleIdOk() (string, bool) {
	if o == nil || o.GermlineDnaSampleId == nil {
		var ret string
		return ret, false
	}
	return *o.GermlineDnaSampleId, true
}

// HasGermlineDnaSampleId returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasGermlineDnaSampleId() bool {
	if o != nil && o.GermlineDnaSampleId != nil {
		return true
	}

	return false
}

// SetGermlineDnaSampleId gets a reference to the given string and assigns it to the GermlineDnaSampleId field.
func (o *Ga4ghTumourboard) SetGermlineDnaSampleId(v string) {
	o.GermlineDnaSampleId = &v
}

// GetTumorDnaSampleId returns the TumorDnaSampleId field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetTumorDnaSampleId() string {
	if o == nil || o.TumorDnaSampleId == nil {
		var ret string
		return ret
	}
	return *o.TumorDnaSampleId
}

// GetTumorDnaSampleIdOk returns a tuple with the TumorDnaSampleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetTumorDnaSampleIdOk() (string, bool) {
	if o == nil || o.TumorDnaSampleId == nil {
		var ret string
		return ret, false
	}
	return *o.TumorDnaSampleId, true
}

// HasTumorDnaSampleId returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasTumorDnaSampleId() bool {
	if o != nil && o.TumorDnaSampleId != nil {
		return true
	}

	return false
}

// SetTumorDnaSampleId gets a reference to the given string and assigns it to the TumorDnaSampleId field.
func (o *Ga4ghTumourboard) SetTumorDnaSampleId(v string) {
	o.TumorDnaSampleId = &v
}

// GetTumorRnaSampleId returns the TumorRnaSampleId field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetTumorRnaSampleId() string {
	if o == nil || o.TumorRnaSampleId == nil {
		var ret string
		return ret
	}
	return *o.TumorRnaSampleId
}

// GetTumorRnaSampleIdOk returns a tuple with the TumorRnaSampleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetTumorRnaSampleIdOk() (string, bool) {
	if o == nil || o.TumorRnaSampleId == nil {
		var ret string
		return ret, false
	}
	return *o.TumorRnaSampleId, true
}

// HasTumorRnaSampleId returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasTumorRnaSampleId() bool {
	if o != nil && o.TumorRnaSampleId != nil {
		return true
	}

	return false
}

// SetTumorRnaSampleId gets a reference to the given string and assigns it to the TumorRnaSampleId field.
func (o *Ga4ghTumourboard) SetTumorRnaSampleId(v string) {
	o.TumorRnaSampleId = &v
}

// GetGermlineSnvDiscussed returns the GermlineSnvDiscussed field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetGermlineSnvDiscussed() string {
	if o == nil || o.GermlineSnvDiscussed == nil {
		var ret string
		return ret
	}
	return *o.GermlineSnvDiscussed
}

// GetGermlineSnvDiscussedOk returns a tuple with the GermlineSnvDiscussed field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetGermlineSnvDiscussedOk() (string, bool) {
	if o == nil || o.GermlineSnvDiscussed == nil {
		var ret string
		return ret, false
	}
	return *o.GermlineSnvDiscussed, true
}

// HasGermlineSnvDiscussed returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasGermlineSnvDiscussed() bool {
	if o != nil && o.GermlineSnvDiscussed != nil {
		return true
	}

	return false
}

// SetGermlineSnvDiscussed gets a reference to the given string and assigns it to the GermlineSnvDiscussed field.
func (o *Ga4ghTumourboard) SetGermlineSnvDiscussed(v string) {
	o.GermlineSnvDiscussed = &v
}

// GetSomaticSnvDiscussed returns the SomaticSnvDiscussed field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetSomaticSnvDiscussed() string {
	if o == nil || o.SomaticSnvDiscussed == nil {
		var ret string
		return ret
	}
	return *o.SomaticSnvDiscussed
}

// GetSomaticSnvDiscussedOk returns a tuple with the SomaticSnvDiscussed field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetSomaticSnvDiscussedOk() (string, bool) {
	if o == nil || o.SomaticSnvDiscussed == nil {
		var ret string
		return ret, false
	}
	return *o.SomaticSnvDiscussed, true
}

// HasSomaticSnvDiscussed returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasSomaticSnvDiscussed() bool {
	if o != nil && o.SomaticSnvDiscussed != nil {
		return true
	}

	return false
}

// SetSomaticSnvDiscussed gets a reference to the given string and assigns it to the SomaticSnvDiscussed field.
func (o *Ga4ghTumourboard) SetSomaticSnvDiscussed(v string) {
	o.SomaticSnvDiscussed = &v
}

// GetCnvsDiscussed returns the CnvsDiscussed field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetCnvsDiscussed() string {
	if o == nil || o.CnvsDiscussed == nil {
		var ret string
		return ret
	}
	return *o.CnvsDiscussed
}

// GetCnvsDiscussedOk returns a tuple with the CnvsDiscussed field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetCnvsDiscussedOk() (string, bool) {
	if o == nil || o.CnvsDiscussed == nil {
		var ret string
		return ret, false
	}
	return *o.CnvsDiscussed, true
}

// HasCnvsDiscussed returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasCnvsDiscussed() bool {
	if o != nil && o.CnvsDiscussed != nil {
		return true
	}

	return false
}

// SetCnvsDiscussed gets a reference to the given string and assigns it to the CnvsDiscussed field.
func (o *Ga4ghTumourboard) SetCnvsDiscussed(v string) {
	o.CnvsDiscussed = &v
}

// GetStructuralVariantDiscussed returns the StructuralVariantDiscussed field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetStructuralVariantDiscussed() string {
	if o == nil || o.StructuralVariantDiscussed == nil {
		var ret string
		return ret
	}
	return *o.StructuralVariantDiscussed
}

// GetStructuralVariantDiscussedOk returns a tuple with the StructuralVariantDiscussed field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetStructuralVariantDiscussedOk() (string, bool) {
	if o == nil || o.StructuralVariantDiscussed == nil {
		var ret string
		return ret, false
	}
	return *o.StructuralVariantDiscussed, true
}

// HasStructuralVariantDiscussed returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasStructuralVariantDiscussed() bool {
	if o != nil && o.StructuralVariantDiscussed != nil {
		return true
	}

	return false
}

// SetStructuralVariantDiscussed gets a reference to the given string and assigns it to the StructuralVariantDiscussed field.
func (o *Ga4ghTumourboard) SetStructuralVariantDiscussed(v string) {
	o.StructuralVariantDiscussed = &v
}

// GetClassificationOfVariants returns the ClassificationOfVariants field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetClassificationOfVariants() string {
	if o == nil || o.ClassificationOfVariants == nil {
		var ret string
		return ret
	}
	return *o.ClassificationOfVariants
}

// GetClassificationOfVariantsOk returns a tuple with the ClassificationOfVariants field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetClassificationOfVariantsOk() (string, bool) {
	if o == nil || o.ClassificationOfVariants == nil {
		var ret string
		return ret, false
	}
	return *o.ClassificationOfVariants, true
}

// HasClassificationOfVariants returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasClassificationOfVariants() bool {
	if o != nil && o.ClassificationOfVariants != nil {
		return true
	}

	return false
}

// SetClassificationOfVariants gets a reference to the given string and assigns it to the ClassificationOfVariants field.
func (o *Ga4ghTumourboard) SetClassificationOfVariants(v string) {
	o.ClassificationOfVariants = &v
}

// GetClinicalValidationProgress returns the ClinicalValidationProgress field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetClinicalValidationProgress() string {
	if o == nil || o.ClinicalValidationProgress == nil {
		var ret string
		return ret
	}
	return *o.ClinicalValidationProgress
}

// GetClinicalValidationProgressOk returns a tuple with the ClinicalValidationProgress field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetClinicalValidationProgressOk() (string, bool) {
	if o == nil || o.ClinicalValidationProgress == nil {
		var ret string
		return ret, false
	}
	return *o.ClinicalValidationProgress, true
}

// HasClinicalValidationProgress returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasClinicalValidationProgress() bool {
	if o != nil && o.ClinicalValidationProgress != nil {
		return true
	}

	return false
}

// SetClinicalValidationProgress gets a reference to the given string and assigns it to the ClinicalValidationProgress field.
func (o *Ga4ghTumourboard) SetClinicalValidationProgress(v string) {
	o.ClinicalValidationProgress = &v
}

// GetTypeOfValidation returns the TypeOfValidation field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetTypeOfValidation() string {
	if o == nil || o.TypeOfValidation == nil {
		var ret string
		return ret
	}
	return *o.TypeOfValidation
}

// GetTypeOfValidationOk returns a tuple with the TypeOfValidation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetTypeOfValidationOk() (string, bool) {
	if o == nil || o.TypeOfValidation == nil {
		var ret string
		return ret, false
	}
	return *o.TypeOfValidation, true
}

// HasTypeOfValidation returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasTypeOfValidation() bool {
	if o != nil && o.TypeOfValidation != nil {
		return true
	}

	return false
}

// SetTypeOfValidation gets a reference to the given string and assigns it to the TypeOfValidation field.
func (o *Ga4ghTumourboard) SetTypeOfValidation(v string) {
	o.TypeOfValidation = &v
}

// GetAgentOrDrugClass returns the AgentOrDrugClass field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetAgentOrDrugClass() string {
	if o == nil || o.AgentOrDrugClass == nil {
		var ret string
		return ret
	}
	return *o.AgentOrDrugClass
}

// GetAgentOrDrugClassOk returns a tuple with the AgentOrDrugClass field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetAgentOrDrugClassOk() (string, bool) {
	if o == nil || o.AgentOrDrugClass == nil {
		var ret string
		return ret, false
	}
	return *o.AgentOrDrugClass, true
}

// HasAgentOrDrugClass returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasAgentOrDrugClass() bool {
	if o != nil && o.AgentOrDrugClass != nil {
		return true
	}

	return false
}

// SetAgentOrDrugClass gets a reference to the given string and assigns it to the AgentOrDrugClass field.
func (o *Ga4ghTumourboard) SetAgentOrDrugClass(v string) {
	o.AgentOrDrugClass = &v
}

// GetLevelOfEvidenceForExpressionTargetAgentMatch returns the LevelOfEvidenceForExpressionTargetAgentMatch field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetLevelOfEvidenceForExpressionTargetAgentMatch() string {
	if o == nil || o.LevelOfEvidenceForExpressionTargetAgentMatch == nil {
		var ret string
		return ret
	}
	return *o.LevelOfEvidenceForExpressionTargetAgentMatch
}

// GetLevelOfEvidenceForExpressionTargetAgentMatchOk returns a tuple with the LevelOfEvidenceForExpressionTargetAgentMatch field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetLevelOfEvidenceForExpressionTargetAgentMatchOk() (string, bool) {
	if o == nil || o.LevelOfEvidenceForExpressionTargetAgentMatch == nil {
		var ret string
		return ret, false
	}
	return *o.LevelOfEvidenceForExpressionTargetAgentMatch, true
}

// HasLevelOfEvidenceForExpressionTargetAgentMatch returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasLevelOfEvidenceForExpressionTargetAgentMatch() bool {
	if o != nil && o.LevelOfEvidenceForExpressionTargetAgentMatch != nil {
		return true
	}

	return false
}

// SetLevelOfEvidenceForExpressionTargetAgentMatch gets a reference to the given string and assigns it to the LevelOfEvidenceForExpressionTargetAgentMatch field.
func (o *Ga4ghTumourboard) SetLevelOfEvidenceForExpressionTargetAgentMatch(v string) {
	o.LevelOfEvidenceForExpressionTargetAgentMatch = &v
}

// GetDidTreatmentPlanChangeBasedOnProfilingResult returns the DidTreatmentPlanChangeBasedOnProfilingResult field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetDidTreatmentPlanChangeBasedOnProfilingResult() string {
	if o == nil || o.DidTreatmentPlanChangeBasedOnProfilingResult == nil {
		var ret string
		return ret
	}
	return *o.DidTreatmentPlanChangeBasedOnProfilingResult
}

// GetDidTreatmentPlanChangeBasedOnProfilingResultOk returns a tuple with the DidTreatmentPlanChangeBasedOnProfilingResult field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetDidTreatmentPlanChangeBasedOnProfilingResultOk() (string, bool) {
	if o == nil || o.DidTreatmentPlanChangeBasedOnProfilingResult == nil {
		var ret string
		return ret, false
	}
	return *o.DidTreatmentPlanChangeBasedOnProfilingResult, true
}

// HasDidTreatmentPlanChangeBasedOnProfilingResult returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasDidTreatmentPlanChangeBasedOnProfilingResult() bool {
	if o != nil && o.DidTreatmentPlanChangeBasedOnProfilingResult != nil {
		return true
	}

	return false
}

// SetDidTreatmentPlanChangeBasedOnProfilingResult gets a reference to the given string and assigns it to the DidTreatmentPlanChangeBasedOnProfilingResult field.
func (o *Ga4ghTumourboard) SetDidTreatmentPlanChangeBasedOnProfilingResult(v string) {
	o.DidTreatmentPlanChangeBasedOnProfilingResult = &v
}

// GetHowTreatmentHasAlteredBasedOnProfiling returns the HowTreatmentHasAlteredBasedOnProfiling field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetHowTreatmentHasAlteredBasedOnProfiling() string {
	if o == nil || o.HowTreatmentHasAlteredBasedOnProfiling == nil {
		var ret string
		return ret
	}
	return *o.HowTreatmentHasAlteredBasedOnProfiling
}

// GetHowTreatmentHasAlteredBasedOnProfilingOk returns a tuple with the HowTreatmentHasAlteredBasedOnProfiling field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetHowTreatmentHasAlteredBasedOnProfilingOk() (string, bool) {
	if o == nil || o.HowTreatmentHasAlteredBasedOnProfiling == nil {
		var ret string
		return ret, false
	}
	return *o.HowTreatmentHasAlteredBasedOnProfiling, true
}

// HasHowTreatmentHasAlteredBasedOnProfiling returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasHowTreatmentHasAlteredBasedOnProfiling() bool {
	if o != nil && o.HowTreatmentHasAlteredBasedOnProfiling != nil {
		return true
	}

	return false
}

// SetHowTreatmentHasAlteredBasedOnProfiling gets a reference to the given string and assigns it to the HowTreatmentHasAlteredBasedOnProfiling field.
func (o *Ga4ghTumourboard) SetHowTreatmentHasAlteredBasedOnProfiling(v string) {
	o.HowTreatmentHasAlteredBasedOnProfiling = &v
}

// GetReasonTreatmentPlanDidNotChangeBasedOnProfiling returns the ReasonTreatmentPlanDidNotChangeBasedOnProfiling field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetReasonTreatmentPlanDidNotChangeBasedOnProfiling() string {
	if o == nil || o.ReasonTreatmentPlanDidNotChangeBasedOnProfiling == nil {
		var ret string
		return ret
	}
	return *o.ReasonTreatmentPlanDidNotChangeBasedOnProfiling
}

// GetReasonTreatmentPlanDidNotChangeBasedOnProfilingOk returns a tuple with the ReasonTreatmentPlanDidNotChangeBasedOnProfiling field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetReasonTreatmentPlanDidNotChangeBasedOnProfilingOk() (string, bool) {
	if o == nil || o.ReasonTreatmentPlanDidNotChangeBasedOnProfiling == nil {
		var ret string
		return ret, false
	}
	return *o.ReasonTreatmentPlanDidNotChangeBasedOnProfiling, true
}

// HasReasonTreatmentPlanDidNotChangeBasedOnProfiling returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasReasonTreatmentPlanDidNotChangeBasedOnProfiling() bool {
	if o != nil && o.ReasonTreatmentPlanDidNotChangeBasedOnProfiling != nil {
		return true
	}

	return false
}

// SetReasonTreatmentPlanDidNotChangeBasedOnProfiling gets a reference to the given string and assigns it to the ReasonTreatmentPlanDidNotChangeBasedOnProfiling field.
func (o *Ga4ghTumourboard) SetReasonTreatmentPlanDidNotChangeBasedOnProfiling(v string) {
	o.ReasonTreatmentPlanDidNotChangeBasedOnProfiling = &v
}

// GetDetailsOfTreatmentPlanImpact returns the DetailsOfTreatmentPlanImpact field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetDetailsOfTreatmentPlanImpact() string {
	if o == nil || o.DetailsOfTreatmentPlanImpact == nil {
		var ret string
		return ret
	}
	return *o.DetailsOfTreatmentPlanImpact
}

// GetDetailsOfTreatmentPlanImpactOk returns a tuple with the DetailsOfTreatmentPlanImpact field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetDetailsOfTreatmentPlanImpactOk() (string, bool) {
	if o == nil || o.DetailsOfTreatmentPlanImpact == nil {
		var ret string
		return ret, false
	}
	return *o.DetailsOfTreatmentPlanImpact, true
}

// HasDetailsOfTreatmentPlanImpact returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasDetailsOfTreatmentPlanImpact() bool {
	if o != nil && o.DetailsOfTreatmentPlanImpact != nil {
		return true
	}

	return false
}

// SetDetailsOfTreatmentPlanImpact gets a reference to the given string and assigns it to the DetailsOfTreatmentPlanImpact field.
func (o *Ga4ghTumourboard) SetDetailsOfTreatmentPlanImpact(v string) {
	o.DetailsOfTreatmentPlanImpact = &v
}

// GetPatientOrFamilyInformedOfGermlineVariant returns the PatientOrFamilyInformedOfGermlineVariant field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetPatientOrFamilyInformedOfGermlineVariant() string {
	if o == nil || o.PatientOrFamilyInformedOfGermlineVariant == nil {
		var ret string
		return ret
	}
	return *o.PatientOrFamilyInformedOfGermlineVariant
}

// GetPatientOrFamilyInformedOfGermlineVariantOk returns a tuple with the PatientOrFamilyInformedOfGermlineVariant field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetPatientOrFamilyInformedOfGermlineVariantOk() (string, bool) {
	if o == nil || o.PatientOrFamilyInformedOfGermlineVariant == nil {
		var ret string
		return ret, false
	}
	return *o.PatientOrFamilyInformedOfGermlineVariant, true
}

// HasPatientOrFamilyInformedOfGermlineVariant returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasPatientOrFamilyInformedOfGermlineVariant() bool {
	if o != nil && o.PatientOrFamilyInformedOfGermlineVariant != nil {
		return true
	}

	return false
}

// SetPatientOrFamilyInformedOfGermlineVariant gets a reference to the given string and assigns it to the PatientOrFamilyInformedOfGermlineVariant field.
func (o *Ga4ghTumourboard) SetPatientOrFamilyInformedOfGermlineVariant(v string) {
	o.PatientOrFamilyInformedOfGermlineVariant = &v
}

// GetPatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling returns the PatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetPatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling() string {
	if o == nil || o.PatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling == nil {
		var ret string
		return ret
	}
	return *o.PatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling
}

// GetPatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfilingOk returns a tuple with the PatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetPatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfilingOk() (string, bool) {
	if o == nil || o.PatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling == nil {
		var ret string
		return ret, false
	}
	return *o.PatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling, true
}

// HasPatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasPatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling() bool {
	if o != nil && o.PatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling != nil {
		return true
	}

	return false
}

// SetPatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling gets a reference to the given string and assigns it to the PatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling field.
func (o *Ga4ghTumourboard) SetPatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling(v string) {
	o.PatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling = &v
}

// GetSummaryReport returns the SummaryReport field if non-nil, zero value otherwise.
func (o *Ga4ghTumourboard) GetSummaryReport() string {
	if o == nil || o.SummaryReport == nil {
		var ret string
		return ret
	}
	return *o.SummaryReport
}

// GetSummaryReportOk returns a tuple with the SummaryReport field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTumourboard) GetSummaryReportOk() (string, bool) {
	if o == nil || o.SummaryReport == nil {
		var ret string
		return ret, false
	}
	return *o.SummaryReport, true
}

// HasSummaryReport returns a boolean if a field has been set.
func (o *Ga4ghTumourboard) HasSummaryReport() bool {
	if o != nil && o.SummaryReport != nil {
		return true
	}

	return false
}

// SetSummaryReport gets a reference to the given string and assigns it to the SummaryReport field.
func (o *Ga4ghTumourboard) SetSummaryReport(v string) {
	o.SummaryReport = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o Ga4ghTumourboard) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DatasetId != nil {
		toSerialize["datasetId"] = o.DatasetId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.PatientId != nil {
		toSerialize["patientId"] = o.PatientId
	}
	if o.DateOfMolecularTumorBoard != nil {
		toSerialize["dateOfMolecularTumorBoard"] = o.DateOfMolecularTumorBoard
	}
	if o.TypeOfSampleAnalyzed != nil {
		toSerialize["typeOfSampleAnalyzed"] = o.TypeOfSampleAnalyzed
	}
	if o.TypeOfTumourSampleAnalyzed != nil {
		toSerialize["typeOfTumourSampleAnalyzed"] = o.TypeOfTumourSampleAnalyzed
	}
	if o.AnalysesDiscussed != nil {
		toSerialize["analysesDiscussed"] = o.AnalysesDiscussed
	}
	if o.SomaticSampleType != nil {
		toSerialize["somaticSampleType"] = o.SomaticSampleType
	}
	if o.NormalExpressionComparator != nil {
		toSerialize["normalExpressionComparator"] = o.NormalExpressionComparator
	}
	if o.DiseaseExpressionComparator != nil {
		toSerialize["diseaseExpressionComparator"] = o.DiseaseExpressionComparator
	}
	if o.HasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer != nil {
		toSerialize["hasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer"] = o.HasAGermlineVariantBeenIdentifiedByProfilingThatMayPredisposeToCancer
	}
	if o.ActionableTargetFound != nil {
		toSerialize["actionableTargetFound"] = o.ActionableTargetFound
	}
	if o.MolecularTumorBoardRecommendation != nil {
		toSerialize["molecularTumorBoardRecommendation"] = o.MolecularTumorBoardRecommendation
	}
	if o.GermlineDnaSampleId != nil {
		toSerialize["germlineDnaSampleId"] = o.GermlineDnaSampleId
	}
	if o.TumorDnaSampleId != nil {
		toSerialize["tumorDnaSampleId"] = o.TumorDnaSampleId
	}
	if o.TumorRnaSampleId != nil {
		toSerialize["tumorRnaSampleId"] = o.TumorRnaSampleId
	}
	if o.GermlineSnvDiscussed != nil {
		toSerialize["germlineSnvDiscussed"] = o.GermlineSnvDiscussed
	}
	if o.SomaticSnvDiscussed != nil {
		toSerialize["somaticSnvDiscussed"] = o.SomaticSnvDiscussed
	}
	if o.CnvsDiscussed != nil {
		toSerialize["cnvsDiscussed"] = o.CnvsDiscussed
	}
	if o.StructuralVariantDiscussed != nil {
		toSerialize["structuralVariantDiscussed"] = o.StructuralVariantDiscussed
	}
	if o.ClassificationOfVariants != nil {
		toSerialize["classificationOfVariants"] = o.ClassificationOfVariants
	}
	if o.ClinicalValidationProgress != nil {
		toSerialize["clinicalValidationProgress"] = o.ClinicalValidationProgress
	}
	if o.TypeOfValidation != nil {
		toSerialize["typeOfValidation"] = o.TypeOfValidation
	}
	if o.AgentOrDrugClass != nil {
		toSerialize["agentOrDrugClass"] = o.AgentOrDrugClass
	}
	if o.LevelOfEvidenceForExpressionTargetAgentMatch != nil {
		toSerialize["levelOfEvidenceForExpressionTargetAgentMatch"] = o.LevelOfEvidenceForExpressionTargetAgentMatch
	}
	if o.DidTreatmentPlanChangeBasedOnProfilingResult != nil {
		toSerialize["didTreatmentPlanChangeBasedOnProfilingResult"] = o.DidTreatmentPlanChangeBasedOnProfilingResult
	}
	if o.HowTreatmentHasAlteredBasedOnProfiling != nil {
		toSerialize["howTreatmentHasAlteredBasedOnProfiling"] = o.HowTreatmentHasAlteredBasedOnProfiling
	}
	if o.ReasonTreatmentPlanDidNotChangeBasedOnProfiling != nil {
		toSerialize["reasonTreatmentPlanDidNotChangeBasedOnProfiling"] = o.ReasonTreatmentPlanDidNotChangeBasedOnProfiling
	}
	if o.DetailsOfTreatmentPlanImpact != nil {
		toSerialize["detailsOfTreatmentPlanImpact"] = o.DetailsOfTreatmentPlanImpact
	}
	if o.PatientOrFamilyInformedOfGermlineVariant != nil {
		toSerialize["patientOrFamilyInformedOfGermlineVariant"] = o.PatientOrFamilyInformedOfGermlineVariant
	}
	if o.PatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling != nil {
		toSerialize["patientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling"] = o.PatientHasBeenReferredToAHereditaryCancerProgramBasedOnThisMolecularProfiling
	}
	if o.SummaryReport != nil {
		toSerialize["summaryReport"] = o.SummaryReport
	}
	return json.Marshal(toSerialize)
}
