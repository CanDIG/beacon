/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client
import (
	"encoding/json"
)

type Ga4ghComplication struct {
	// This is unique in the context of the server instance.
	Id *string `json:"id,omitempty"`

	// The ID of the dataset this object belongs to.
	DatasetId *string `json:"dataset_id,omitempty"`

	// This is a label or symbolic identifier for this object.
	Name *string `json:"name,omitempty"`

	// This attribute contains human readable text.
	Description *string `json:"description,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was created.
	Created *string `json:"created,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated.
	Updated *string `json:"updated,omitempty"`

	PatientId *string `json:"patientId,omitempty"`

	Date *string `json:"date,omitempty"`

	LateComplicationOfTherapyDeveloped *string `json:"lateComplicationOfTherapyDeveloped,omitempty"`

	LateToxicityDetail *string `json:"lateToxicityDetail,omitempty"`

	SuspectedTreatmentInducedNeoplasmDeveloped *string `json:"suspectedTreatmentInducedNeoplasmDeveloped,omitempty"`

	TreatmentInducedNeoplasmDetails *string `json:"treatmentInducedNeoplasmDetails,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *Ga4ghComplication) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghComplication) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Ga4ghComplication) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Ga4ghComplication) SetId(v string) {
	o.Id = &v
}

// GetDatasetId returns the DatasetId field if non-nil, zero value otherwise.
func (o *Ga4ghComplication) GetDatasetId() string {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret
	}
	return *o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghComplication) GetDatasetIdOk() (string, bool) {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret, false
	}
	return *o.DatasetId, true
}

// HasDatasetId returns a boolean if a field has been set.
func (o *Ga4ghComplication) HasDatasetId() bool {
	if o != nil && o.DatasetId != nil {
		return true
	}

	return false
}

// SetDatasetId gets a reference to the given string and assigns it to the DatasetId field.
func (o *Ga4ghComplication) SetDatasetId(v string) {
	o.DatasetId = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *Ga4ghComplication) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghComplication) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ga4ghComplication) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ga4ghComplication) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *Ga4ghComplication) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghComplication) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Ga4ghComplication) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Ga4ghComplication) SetDescription(v string) {
	o.Description = &v
}

// GetCreated returns the Created field if non-nil, zero value otherwise.
func (o *Ga4ghComplication) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghComplication) GetCreatedOk() (string, bool) {
	if o == nil || o.Created == nil {
		var ret string
		return ret, false
	}
	return *o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Ga4ghComplication) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *Ga4ghComplication) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field if non-nil, zero value otherwise.
func (o *Ga4ghComplication) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghComplication) GetUpdatedOk() (string, bool) {
	if o == nil || o.Updated == nil {
		var ret string
		return ret, false
	}
	return *o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *Ga4ghComplication) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *Ga4ghComplication) SetUpdated(v string) {
	o.Updated = &v
}

// GetPatientId returns the PatientId field if non-nil, zero value otherwise.
func (o *Ga4ghComplication) GetPatientId() string {
	if o == nil || o.PatientId == nil {
		var ret string
		return ret
	}
	return *o.PatientId
}

// GetPatientIdOk returns a tuple with the PatientId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghComplication) GetPatientIdOk() (string, bool) {
	if o == nil || o.PatientId == nil {
		var ret string
		return ret, false
	}
	return *o.PatientId, true
}

// HasPatientId returns a boolean if a field has been set.
func (o *Ga4ghComplication) HasPatientId() bool {
	if o != nil && o.PatientId != nil {
		return true
	}

	return false
}

// SetPatientId gets a reference to the given string and assigns it to the PatientId field.
func (o *Ga4ghComplication) SetPatientId(v string) {
	o.PatientId = &v
}

// GetDate returns the Date field if non-nil, zero value otherwise.
func (o *Ga4ghComplication) GetDate() string {
	if o == nil || o.Date == nil {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghComplication) GetDateOk() (string, bool) {
	if o == nil || o.Date == nil {
		var ret string
		return ret, false
	}
	return *o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *Ga4ghComplication) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *Ga4ghComplication) SetDate(v string) {
	o.Date = &v
}

// GetLateComplicationOfTherapyDeveloped returns the LateComplicationOfTherapyDeveloped field if non-nil, zero value otherwise.
func (o *Ga4ghComplication) GetLateComplicationOfTherapyDeveloped() string {
	if o == nil || o.LateComplicationOfTherapyDeveloped == nil {
		var ret string
		return ret
	}
	return *o.LateComplicationOfTherapyDeveloped
}

// GetLateComplicationOfTherapyDevelopedOk returns a tuple with the LateComplicationOfTherapyDeveloped field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghComplication) GetLateComplicationOfTherapyDevelopedOk() (string, bool) {
	if o == nil || o.LateComplicationOfTherapyDeveloped == nil {
		var ret string
		return ret, false
	}
	return *o.LateComplicationOfTherapyDeveloped, true
}

// HasLateComplicationOfTherapyDeveloped returns a boolean if a field has been set.
func (o *Ga4ghComplication) HasLateComplicationOfTherapyDeveloped() bool {
	if o != nil && o.LateComplicationOfTherapyDeveloped != nil {
		return true
	}

	return false
}

// SetLateComplicationOfTherapyDeveloped gets a reference to the given string and assigns it to the LateComplicationOfTherapyDeveloped field.
func (o *Ga4ghComplication) SetLateComplicationOfTherapyDeveloped(v string) {
	o.LateComplicationOfTherapyDeveloped = &v
}

// GetLateToxicityDetail returns the LateToxicityDetail field if non-nil, zero value otherwise.
func (o *Ga4ghComplication) GetLateToxicityDetail() string {
	if o == nil || o.LateToxicityDetail == nil {
		var ret string
		return ret
	}
	return *o.LateToxicityDetail
}

// GetLateToxicityDetailOk returns a tuple with the LateToxicityDetail field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghComplication) GetLateToxicityDetailOk() (string, bool) {
	if o == nil || o.LateToxicityDetail == nil {
		var ret string
		return ret, false
	}
	return *o.LateToxicityDetail, true
}

// HasLateToxicityDetail returns a boolean if a field has been set.
func (o *Ga4ghComplication) HasLateToxicityDetail() bool {
	if o != nil && o.LateToxicityDetail != nil {
		return true
	}

	return false
}

// SetLateToxicityDetail gets a reference to the given string and assigns it to the LateToxicityDetail field.
func (o *Ga4ghComplication) SetLateToxicityDetail(v string) {
	o.LateToxicityDetail = &v
}

// GetSuspectedTreatmentInducedNeoplasmDeveloped returns the SuspectedTreatmentInducedNeoplasmDeveloped field if non-nil, zero value otherwise.
func (o *Ga4ghComplication) GetSuspectedTreatmentInducedNeoplasmDeveloped() string {
	if o == nil || o.SuspectedTreatmentInducedNeoplasmDeveloped == nil {
		var ret string
		return ret
	}
	return *o.SuspectedTreatmentInducedNeoplasmDeveloped
}

// GetSuspectedTreatmentInducedNeoplasmDevelopedOk returns a tuple with the SuspectedTreatmentInducedNeoplasmDeveloped field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghComplication) GetSuspectedTreatmentInducedNeoplasmDevelopedOk() (string, bool) {
	if o == nil || o.SuspectedTreatmentInducedNeoplasmDeveloped == nil {
		var ret string
		return ret, false
	}
	return *o.SuspectedTreatmentInducedNeoplasmDeveloped, true
}

// HasSuspectedTreatmentInducedNeoplasmDeveloped returns a boolean if a field has been set.
func (o *Ga4ghComplication) HasSuspectedTreatmentInducedNeoplasmDeveloped() bool {
	if o != nil && o.SuspectedTreatmentInducedNeoplasmDeveloped != nil {
		return true
	}

	return false
}

// SetSuspectedTreatmentInducedNeoplasmDeveloped gets a reference to the given string and assigns it to the SuspectedTreatmentInducedNeoplasmDeveloped field.
func (o *Ga4ghComplication) SetSuspectedTreatmentInducedNeoplasmDeveloped(v string) {
	o.SuspectedTreatmentInducedNeoplasmDeveloped = &v
}

// GetTreatmentInducedNeoplasmDetails returns the TreatmentInducedNeoplasmDetails field if non-nil, zero value otherwise.
func (o *Ga4ghComplication) GetTreatmentInducedNeoplasmDetails() string {
	if o == nil || o.TreatmentInducedNeoplasmDetails == nil {
		var ret string
		return ret
	}
	return *o.TreatmentInducedNeoplasmDetails
}

// GetTreatmentInducedNeoplasmDetailsOk returns a tuple with the TreatmentInducedNeoplasmDetails field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghComplication) GetTreatmentInducedNeoplasmDetailsOk() (string, bool) {
	if o == nil || o.TreatmentInducedNeoplasmDetails == nil {
		var ret string
		return ret, false
	}
	return *o.TreatmentInducedNeoplasmDetails, true
}

// HasTreatmentInducedNeoplasmDetails returns a boolean if a field has been set.
func (o *Ga4ghComplication) HasTreatmentInducedNeoplasmDetails() bool {
	if o != nil && o.TreatmentInducedNeoplasmDetails != nil {
		return true
	}

	return false
}

// SetTreatmentInducedNeoplasmDetails gets a reference to the given string and assigns it to the TreatmentInducedNeoplasmDetails field.
func (o *Ga4ghComplication) SetTreatmentInducedNeoplasmDetails(v string) {
	o.TreatmentInducedNeoplasmDetails = &v
}


func (o Ga4ghComplication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DatasetId != nil {
		toSerialize["dataset_id"] = o.DatasetId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.PatientId != nil {
		toSerialize["patientId"] = o.PatientId
	}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	if o.LateComplicationOfTherapyDeveloped != nil {
		toSerialize["lateComplicationOfTherapyDeveloped"] = o.LateComplicationOfTherapyDeveloped
	}
	if o.LateToxicityDetail != nil {
		toSerialize["lateToxicityDetail"] = o.LateToxicityDetail
	}
	if o.SuspectedTreatmentInducedNeoplasmDeveloped != nil {
		toSerialize["suspectedTreatmentInducedNeoplasmDeveloped"] = o.SuspectedTreatmentInducedNeoplasmDeveloped
	}
	if o.TreatmentInducedNeoplasmDetails != nil {
		toSerialize["treatmentInducedNeoplasmDetails"] = o.TreatmentInducedNeoplasmDetails
	}
	return json.Marshal(toSerialize)
}


