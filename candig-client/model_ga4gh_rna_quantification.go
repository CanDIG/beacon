/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client

import (
	"encoding/json"
)

// Ga4ghRnaQuantification struct for Ga4ghRnaQuantification
type Ga4ghRnaQuantification struct {
	// The unique ID assigned to the results of running the described programs on the specified reads and assignment to the listed annotation.
	Id *string `json:"id,omitempty"`

	Name *string `json:"name,omitempty"`

	BiosampleId *string `json:"biosampleId,omitempty"`

	Description *string `json:"description,omitempty"`

	// ID(s) of the ReadGroup(s) providing the reads for the analysis.
	ReadGroupIds *[]string `json:"read_group_ids,omitempty"`

	// Programs can be used to track the provenance of how read data was quantified.
	Programs *[]Ga4ghProgram `json:"programs,omitempty"`

	// List of annotation sets used.
	FeatureSetIds *[]string `json:"feature_set_ids,omitempty"`

	// ID of the containing RnaQuantificationSet.
	RnaQuantificationSetId *string `json:"rna_quantification_set_id,omitempty"`

	SampleId *string `json:"sampleId,omitempty"`

	PatientId *string `json:"patientId,omitempty"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *Ga4ghRnaQuantification) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghRnaQuantification) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Ga4ghRnaQuantification) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Ga4ghRnaQuantification) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *Ga4ghRnaQuantification) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghRnaQuantification) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ga4ghRnaQuantification) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ga4ghRnaQuantification) SetName(v string) {
	o.Name = &v
}

// GetBiosampleId returns the BiosampleId field if non-nil, zero value otherwise.
func (o *Ga4ghRnaQuantification) GetBiosampleId() string {
	if o == nil || o.BiosampleId == nil {
		var ret string
		return ret
	}
	return *o.BiosampleId
}

// GetBiosampleIdOk returns a tuple with the BiosampleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghRnaQuantification) GetBiosampleIdOk() (string, bool) {
	if o == nil || o.BiosampleId == nil {
		var ret string
		return ret, false
	}
	return *o.BiosampleId, true
}

// HasBiosampleId returns a boolean if a field has been set.
func (o *Ga4ghRnaQuantification) HasBiosampleId() bool {
	if o != nil && o.BiosampleId != nil {
		return true
	}

	return false
}

// SetBiosampleId gets a reference to the given string and assigns it to the BiosampleId field.
func (o *Ga4ghRnaQuantification) SetBiosampleId(v string) {
	o.BiosampleId = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *Ga4ghRnaQuantification) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghRnaQuantification) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Ga4ghRnaQuantification) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Ga4ghRnaQuantification) SetDescription(v string) {
	o.Description = &v
}

// GetReadGroupIds returns the ReadGroupIds field if non-nil, zero value otherwise.
func (o *Ga4ghRnaQuantification) GetReadGroupIds() []string {
	if o == nil || o.ReadGroupIds == nil {
		var ret []string
		return ret
	}
	return *o.ReadGroupIds
}

// GetReadGroupIdsOk returns a tuple with the ReadGroupIds field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghRnaQuantification) GetReadGroupIdsOk() ([]string, bool) {
	if o == nil || o.ReadGroupIds == nil {
		var ret []string
		return ret, false
	}
	return *o.ReadGroupIds, true
}

// HasReadGroupIds returns a boolean if a field has been set.
func (o *Ga4ghRnaQuantification) HasReadGroupIds() bool {
	if o != nil && o.ReadGroupIds != nil {
		return true
	}

	return false
}

// SetReadGroupIds gets a reference to the given []string and assigns it to the ReadGroupIds field.
func (o *Ga4ghRnaQuantification) SetReadGroupIds(v []string) {
	o.ReadGroupIds = &v
}

// GetPrograms returns the Programs field if non-nil, zero value otherwise.
func (o *Ga4ghRnaQuantification) GetPrograms() []Ga4ghProgram {
	if o == nil || o.Programs == nil {
		var ret []Ga4ghProgram
		return ret
	}
	return *o.Programs
}

// GetProgramsOk returns a tuple with the Programs field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghRnaQuantification) GetProgramsOk() ([]Ga4ghProgram, bool) {
	if o == nil || o.Programs == nil {
		var ret []Ga4ghProgram
		return ret, false
	}
	return *o.Programs, true
}

// HasPrograms returns a boolean if a field has been set.
func (o *Ga4ghRnaQuantification) HasPrograms() bool {
	if o != nil && o.Programs != nil {
		return true
	}

	return false
}

// SetPrograms gets a reference to the given []Ga4ghProgram and assigns it to the Programs field.
func (o *Ga4ghRnaQuantification) SetPrograms(v []Ga4ghProgram) {
	o.Programs = &v
}

// GetFeatureSetIds returns the FeatureSetIds field if non-nil, zero value otherwise.
func (o *Ga4ghRnaQuantification) GetFeatureSetIds() []string {
	if o == nil || o.FeatureSetIds == nil {
		var ret []string
		return ret
	}
	return *o.FeatureSetIds
}

// GetFeatureSetIdsOk returns a tuple with the FeatureSetIds field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghRnaQuantification) GetFeatureSetIdsOk() ([]string, bool) {
	if o == nil || o.FeatureSetIds == nil {
		var ret []string
		return ret, false
	}
	return *o.FeatureSetIds, true
}

// HasFeatureSetIds returns a boolean if a field has been set.
func (o *Ga4ghRnaQuantification) HasFeatureSetIds() bool {
	if o != nil && o.FeatureSetIds != nil {
		return true
	}

	return false
}

// SetFeatureSetIds gets a reference to the given []string and assigns it to the FeatureSetIds field.
func (o *Ga4ghRnaQuantification) SetFeatureSetIds(v []string) {
	o.FeatureSetIds = &v
}

// GetRnaQuantificationSetId returns the RnaQuantificationSetId field if non-nil, zero value otherwise.
func (o *Ga4ghRnaQuantification) GetRnaQuantificationSetId() string {
	if o == nil || o.RnaQuantificationSetId == nil {
		var ret string
		return ret
	}
	return *o.RnaQuantificationSetId
}

// GetRnaQuantificationSetIdOk returns a tuple with the RnaQuantificationSetId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghRnaQuantification) GetRnaQuantificationSetIdOk() (string, bool) {
	if o == nil || o.RnaQuantificationSetId == nil {
		var ret string
		return ret, false
	}
	return *o.RnaQuantificationSetId, true
}

// HasRnaQuantificationSetId returns a boolean if a field has been set.
func (o *Ga4ghRnaQuantification) HasRnaQuantificationSetId() bool {
	if o != nil && o.RnaQuantificationSetId != nil {
		return true
	}

	return false
}

// SetRnaQuantificationSetId gets a reference to the given string and assigns it to the RnaQuantificationSetId field.
func (o *Ga4ghRnaQuantification) SetRnaQuantificationSetId(v string) {
	o.RnaQuantificationSetId = &v
}

// GetSampleId returns the SampleId field if non-nil, zero value otherwise.
func (o *Ga4ghRnaQuantification) GetSampleId() string {
	if o == nil || o.SampleId == nil {
		var ret string
		return ret
	}
	return *o.SampleId
}

// GetSampleIdOk returns a tuple with the SampleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghRnaQuantification) GetSampleIdOk() (string, bool) {
	if o == nil || o.SampleId == nil {
		var ret string
		return ret, false
	}
	return *o.SampleId, true
}

// HasSampleId returns a boolean if a field has been set.
func (o *Ga4ghRnaQuantification) HasSampleId() bool {
	if o != nil && o.SampleId != nil {
		return true
	}

	return false
}

// SetSampleId gets a reference to the given string and assigns it to the SampleId field.
func (o *Ga4ghRnaQuantification) SetSampleId(v string) {
	o.SampleId = &v
}

// GetPatientId returns the PatientId field if non-nil, zero value otherwise.
func (o *Ga4ghRnaQuantification) GetPatientId() string {
	if o == nil || o.PatientId == nil {
		var ret string
		return ret
	}
	return *o.PatientId
}

// GetPatientIdOk returns a tuple with the PatientId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghRnaQuantification) GetPatientIdOk() (string, bool) {
	if o == nil || o.PatientId == nil {
		var ret string
		return ret, false
	}
	return *o.PatientId, true
}

// HasPatientId returns a boolean if a field has been set.
func (o *Ga4ghRnaQuantification) HasPatientId() bool {
	if o != nil && o.PatientId != nil {
		return true
	}

	return false
}

// SetPatientId gets a reference to the given string and assigns it to the PatientId field.
func (o *Ga4ghRnaQuantification) SetPatientId(v string) {
	o.PatientId = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o Ga4ghRnaQuantification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.BiosampleId != nil {
		toSerialize["biosampleId"] = o.BiosampleId
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ReadGroupIds != nil {
		toSerialize["read_group_ids"] = o.ReadGroupIds
	}
	if o.Programs != nil {
		toSerialize["programs"] = o.Programs
	}
	if o.FeatureSetIds != nil {
		toSerialize["feature_set_ids"] = o.FeatureSetIds
	}
	if o.RnaQuantificationSetId != nil {
		toSerialize["rna_quantification_set_id"] = o.RnaQuantificationSetId
	}
	if o.SampleId != nil {
		toSerialize["sampleId"] = o.SampleId
	}
	if o.PatientId != nil {
		toSerialize["patientId"] = o.PatientId
	}
	return json.Marshal(toSerialize)
}
