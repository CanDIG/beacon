/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client

import (
	"encoding/json"
)

// Ga4ghSequencing struct for Ga4ghSequencing
type Ga4ghSequencing struct {
	// This is unique in the context of the server instance.
	Id *string `json:"id,omitempty"`

	// The ID of the dataset this object belongs to.
	DatasetId *string `json:"datasetId,omitempty"`

	// This is a label or symbolic identifier for this object.
	Name *string `json:"name,omitempty"`

	// This attribute contains human readable text.
	Description *string `json:"description,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was created.
	Created *string `json:"created,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated.
	Updated *string `json:"updated,omitempty"`

	SampleId *string `json:"sampleId,omitempty"`

	DnaLibraryKit *string `json:"dnaLibraryKit,omitempty"`

	DnaSeqPlatform *string `json:"dnaSeqPlatform,omitempty"`

	DnaReadLength *string `json:"dnaReadLength,omitempty"`

	RnaLibraryKit *string `json:"rnaLibraryKit,omitempty"`

	RnaSeqPlatform *string `json:"rnaSeqPlatform,omitempty"`

	RnaReadLength *string `json:"rnaReadLength,omitempty"`

	PcrCycles *string `json:"pcrCycles,omitempty"`

	SequencingId *string `json:"sequencingId,omitempty"`

	ExtractionId *string `json:"extractionId,omitempty"`

	Site *string `json:"site,omitempty"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Ga4ghSequencing) SetId(v string) {
	o.Id = &v
}

// GetDatasetId returns the DatasetId field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetDatasetId() string {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret
	}
	return *o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetDatasetIdOk() (string, bool) {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret, false
	}
	return *o.DatasetId, true
}

// HasDatasetId returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasDatasetId() bool {
	if o != nil && o.DatasetId != nil {
		return true
	}

	return false
}

// SetDatasetId gets a reference to the given string and assigns it to the DatasetId field.
func (o *Ga4ghSequencing) SetDatasetId(v string) {
	o.DatasetId = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ga4ghSequencing) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Ga4ghSequencing) SetDescription(v string) {
	o.Description = &v
}

// GetCreated returns the Created field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetCreatedOk() (string, bool) {
	if o == nil || o.Created == nil {
		var ret string
		return ret, false
	}
	return *o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *Ga4ghSequencing) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetUpdatedOk() (string, bool) {
	if o == nil || o.Updated == nil {
		var ret string
		return ret, false
	}
	return *o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *Ga4ghSequencing) SetUpdated(v string) {
	o.Updated = &v
}

// GetSampleId returns the SampleId field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetSampleId() string {
	if o == nil || o.SampleId == nil {
		var ret string
		return ret
	}
	return *o.SampleId
}

// GetSampleIdOk returns a tuple with the SampleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetSampleIdOk() (string, bool) {
	if o == nil || o.SampleId == nil {
		var ret string
		return ret, false
	}
	return *o.SampleId, true
}

// HasSampleId returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasSampleId() bool {
	if o != nil && o.SampleId != nil {
		return true
	}

	return false
}

// SetSampleId gets a reference to the given string and assigns it to the SampleId field.
func (o *Ga4ghSequencing) SetSampleId(v string) {
	o.SampleId = &v
}

// GetDnaLibraryKit returns the DnaLibraryKit field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetDnaLibraryKit() string {
	if o == nil || o.DnaLibraryKit == nil {
		var ret string
		return ret
	}
	return *o.DnaLibraryKit
}

// GetDnaLibraryKitOk returns a tuple with the DnaLibraryKit field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetDnaLibraryKitOk() (string, bool) {
	if o == nil || o.DnaLibraryKit == nil {
		var ret string
		return ret, false
	}
	return *o.DnaLibraryKit, true
}

// HasDnaLibraryKit returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasDnaLibraryKit() bool {
	if o != nil && o.DnaLibraryKit != nil {
		return true
	}

	return false
}

// SetDnaLibraryKit gets a reference to the given string and assigns it to the DnaLibraryKit field.
func (o *Ga4ghSequencing) SetDnaLibraryKit(v string) {
	o.DnaLibraryKit = &v
}

// GetDnaSeqPlatform returns the DnaSeqPlatform field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetDnaSeqPlatform() string {
	if o == nil || o.DnaSeqPlatform == nil {
		var ret string
		return ret
	}
	return *o.DnaSeqPlatform
}

// GetDnaSeqPlatformOk returns a tuple with the DnaSeqPlatform field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetDnaSeqPlatformOk() (string, bool) {
	if o == nil || o.DnaSeqPlatform == nil {
		var ret string
		return ret, false
	}
	return *o.DnaSeqPlatform, true
}

// HasDnaSeqPlatform returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasDnaSeqPlatform() bool {
	if o != nil && o.DnaSeqPlatform != nil {
		return true
	}

	return false
}

// SetDnaSeqPlatform gets a reference to the given string and assigns it to the DnaSeqPlatform field.
func (o *Ga4ghSequencing) SetDnaSeqPlatform(v string) {
	o.DnaSeqPlatform = &v
}

// GetDnaReadLength returns the DnaReadLength field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetDnaReadLength() string {
	if o == nil || o.DnaReadLength == nil {
		var ret string
		return ret
	}
	return *o.DnaReadLength
}

// GetDnaReadLengthOk returns a tuple with the DnaReadLength field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetDnaReadLengthOk() (string, bool) {
	if o == nil || o.DnaReadLength == nil {
		var ret string
		return ret, false
	}
	return *o.DnaReadLength, true
}

// HasDnaReadLength returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasDnaReadLength() bool {
	if o != nil && o.DnaReadLength != nil {
		return true
	}

	return false
}

// SetDnaReadLength gets a reference to the given string and assigns it to the DnaReadLength field.
func (o *Ga4ghSequencing) SetDnaReadLength(v string) {
	o.DnaReadLength = &v
}

// GetRnaLibraryKit returns the RnaLibraryKit field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetRnaLibraryKit() string {
	if o == nil || o.RnaLibraryKit == nil {
		var ret string
		return ret
	}
	return *o.RnaLibraryKit
}

// GetRnaLibraryKitOk returns a tuple with the RnaLibraryKit field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetRnaLibraryKitOk() (string, bool) {
	if o == nil || o.RnaLibraryKit == nil {
		var ret string
		return ret, false
	}
	return *o.RnaLibraryKit, true
}

// HasRnaLibraryKit returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasRnaLibraryKit() bool {
	if o != nil && o.RnaLibraryKit != nil {
		return true
	}

	return false
}

// SetRnaLibraryKit gets a reference to the given string and assigns it to the RnaLibraryKit field.
func (o *Ga4ghSequencing) SetRnaLibraryKit(v string) {
	o.RnaLibraryKit = &v
}

// GetRnaSeqPlatform returns the RnaSeqPlatform field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetRnaSeqPlatform() string {
	if o == nil || o.RnaSeqPlatform == nil {
		var ret string
		return ret
	}
	return *o.RnaSeqPlatform
}

// GetRnaSeqPlatformOk returns a tuple with the RnaSeqPlatform field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetRnaSeqPlatformOk() (string, bool) {
	if o == nil || o.RnaSeqPlatform == nil {
		var ret string
		return ret, false
	}
	return *o.RnaSeqPlatform, true
}

// HasRnaSeqPlatform returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasRnaSeqPlatform() bool {
	if o != nil && o.RnaSeqPlatform != nil {
		return true
	}

	return false
}

// SetRnaSeqPlatform gets a reference to the given string and assigns it to the RnaSeqPlatform field.
func (o *Ga4ghSequencing) SetRnaSeqPlatform(v string) {
	o.RnaSeqPlatform = &v
}

// GetRnaReadLength returns the RnaReadLength field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetRnaReadLength() string {
	if o == nil || o.RnaReadLength == nil {
		var ret string
		return ret
	}
	return *o.RnaReadLength
}

// GetRnaReadLengthOk returns a tuple with the RnaReadLength field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetRnaReadLengthOk() (string, bool) {
	if o == nil || o.RnaReadLength == nil {
		var ret string
		return ret, false
	}
	return *o.RnaReadLength, true
}

// HasRnaReadLength returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasRnaReadLength() bool {
	if o != nil && o.RnaReadLength != nil {
		return true
	}

	return false
}

// SetRnaReadLength gets a reference to the given string and assigns it to the RnaReadLength field.
func (o *Ga4ghSequencing) SetRnaReadLength(v string) {
	o.RnaReadLength = &v
}

// GetPcrCycles returns the PcrCycles field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetPcrCycles() string {
	if o == nil || o.PcrCycles == nil {
		var ret string
		return ret
	}
	return *o.PcrCycles
}

// GetPcrCyclesOk returns a tuple with the PcrCycles field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetPcrCyclesOk() (string, bool) {
	if o == nil || o.PcrCycles == nil {
		var ret string
		return ret, false
	}
	return *o.PcrCycles, true
}

// HasPcrCycles returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasPcrCycles() bool {
	if o != nil && o.PcrCycles != nil {
		return true
	}

	return false
}

// SetPcrCycles gets a reference to the given string and assigns it to the PcrCycles field.
func (o *Ga4ghSequencing) SetPcrCycles(v string) {
	o.PcrCycles = &v
}

// GetSequencingId returns the SequencingId field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetSequencingId() string {
	if o == nil || o.SequencingId == nil {
		var ret string
		return ret
	}
	return *o.SequencingId
}

// GetSequencingIdOk returns a tuple with the SequencingId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetSequencingIdOk() (string, bool) {
	if o == nil || o.SequencingId == nil {
		var ret string
		return ret, false
	}
	return *o.SequencingId, true
}

// HasSequencingId returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasSequencingId() bool {
	if o != nil && o.SequencingId != nil {
		return true
	}

	return false
}

// SetSequencingId gets a reference to the given string and assigns it to the SequencingId field.
func (o *Ga4ghSequencing) SetSequencingId(v string) {
	o.SequencingId = &v
}

// GetExtractionId returns the ExtractionId field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetExtractionId() string {
	if o == nil || o.ExtractionId == nil {
		var ret string
		return ret
	}
	return *o.ExtractionId
}

// GetExtractionIdOk returns a tuple with the ExtractionId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetExtractionIdOk() (string, bool) {
	if o == nil || o.ExtractionId == nil {
		var ret string
		return ret, false
	}
	return *o.ExtractionId, true
}

// HasExtractionId returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasExtractionId() bool {
	if o != nil && o.ExtractionId != nil {
		return true
	}

	return false
}

// SetExtractionId gets a reference to the given string and assigns it to the ExtractionId field.
func (o *Ga4ghSequencing) SetExtractionId(v string) {
	o.ExtractionId = &v
}

// GetSite returns the Site field if non-nil, zero value otherwise.
func (o *Ga4ghSequencing) GetSite() string {
	if o == nil || o.Site == nil {
		var ret string
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSequencing) GetSiteOk() (string, bool) {
	if o == nil || o.Site == nil {
		var ret string
		return ret, false
	}
	return *o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *Ga4ghSequencing) HasSite() bool {
	if o != nil && o.Site != nil {
		return true
	}

	return false
}

// SetSite gets a reference to the given string and assigns it to the Site field.
func (o *Ga4ghSequencing) SetSite(v string) {
	o.Site = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o Ga4ghSequencing) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DatasetId != nil {
		toSerialize["datasetId"] = o.DatasetId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.SampleId != nil {
		toSerialize["sampleId"] = o.SampleId
	}
	if o.DnaLibraryKit != nil {
		toSerialize["dnaLibraryKit"] = o.DnaLibraryKit
	}
	if o.DnaSeqPlatform != nil {
		toSerialize["dnaSeqPlatform"] = o.DnaSeqPlatform
	}
	if o.DnaReadLength != nil {
		toSerialize["dnaReadLength"] = o.DnaReadLength
	}
	if o.RnaLibraryKit != nil {
		toSerialize["rnaLibraryKit"] = o.RnaLibraryKit
	}
	if o.RnaSeqPlatform != nil {
		toSerialize["rnaSeqPlatform"] = o.RnaSeqPlatform
	}
	if o.RnaReadLength != nil {
		toSerialize["rnaReadLength"] = o.RnaReadLength
	}
	if o.PcrCycles != nil {
		toSerialize["pcrCycles"] = o.PcrCycles
	}
	if o.SequencingId != nil {
		toSerialize["sequencingId"] = o.SequencingId
	}
	if o.ExtractionId != nil {
		toSerialize["extractionId"] = o.ExtractionId
	}
	if o.Site != nil {
		toSerialize["site"] = o.Site
	}
	return json.Marshal(toSerialize)
}
