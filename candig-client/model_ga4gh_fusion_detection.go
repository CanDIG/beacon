/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client
import (
	"encoding/json"
)

type Ga4ghFusionDetection struct {
	// This is unique in the context of the server instance.
	Id *string `json:"id,omitempty"`

	// The ID of the dataset this object belongs to.
	DatasetId *string `json:"dataset_id,omitempty"`

	// This is a label or symbolic identifier for this object.
	Name *string `json:"name,omitempty"`

	// This attribute contains human readable text.
	Description *string `json:"description,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was created.
	Created *string `json:"created,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated.
	Updated *string `json:"updated,omitempty"`

	SampleId *string `json:"sampleId,omitempty"`

	InHousePipeline *string `json:"inHousePipeline,omitempty"`

	SvDetection *string `json:"svDetection,omitempty"`

	FusionDetection *string `json:"fusionDetection,omitempty"`

	Realignment *string `json:"realignment,omitempty"`

	Annotation *string `json:"annotation,omitempty"`

	GenomeReference *string `json:"genomeReference,omitempty"`

	GeneModels *string `json:"geneModels,omitempty"`

	FusionDetectionId *string `json:"fusionDetectionId,omitempty"`

	AlignmentId *string `json:"alignmentId,omitempty"`

	Site *string `json:"site,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Ga4ghFusionDetection) SetId(v string) {
	o.Id = &v
}

// GetDatasetId returns the DatasetId field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetDatasetId() string {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret
	}
	return *o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetDatasetIdOk() (string, bool) {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret, false
	}
	return *o.DatasetId, true
}

// HasDatasetId returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasDatasetId() bool {
	if o != nil && o.DatasetId != nil {
		return true
	}

	return false
}

// SetDatasetId gets a reference to the given string and assigns it to the DatasetId field.
func (o *Ga4ghFusionDetection) SetDatasetId(v string) {
	o.DatasetId = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ga4ghFusionDetection) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Ga4ghFusionDetection) SetDescription(v string) {
	o.Description = &v
}

// GetCreated returns the Created field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetCreatedOk() (string, bool) {
	if o == nil || o.Created == nil {
		var ret string
		return ret, false
	}
	return *o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *Ga4ghFusionDetection) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetUpdatedOk() (string, bool) {
	if o == nil || o.Updated == nil {
		var ret string
		return ret, false
	}
	return *o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *Ga4ghFusionDetection) SetUpdated(v string) {
	o.Updated = &v
}

// GetSampleId returns the SampleId field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetSampleId() string {
	if o == nil || o.SampleId == nil {
		var ret string
		return ret
	}
	return *o.SampleId
}

// GetSampleIdOk returns a tuple with the SampleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetSampleIdOk() (string, bool) {
	if o == nil || o.SampleId == nil {
		var ret string
		return ret, false
	}
	return *o.SampleId, true
}

// HasSampleId returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasSampleId() bool {
	if o != nil && o.SampleId != nil {
		return true
	}

	return false
}

// SetSampleId gets a reference to the given string and assigns it to the SampleId field.
func (o *Ga4ghFusionDetection) SetSampleId(v string) {
	o.SampleId = &v
}

// GetInHousePipeline returns the InHousePipeline field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetInHousePipeline() string {
	if o == nil || o.InHousePipeline == nil {
		var ret string
		return ret
	}
	return *o.InHousePipeline
}

// GetInHousePipelineOk returns a tuple with the InHousePipeline field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetInHousePipelineOk() (string, bool) {
	if o == nil || o.InHousePipeline == nil {
		var ret string
		return ret, false
	}
	return *o.InHousePipeline, true
}

// HasInHousePipeline returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasInHousePipeline() bool {
	if o != nil && o.InHousePipeline != nil {
		return true
	}

	return false
}

// SetInHousePipeline gets a reference to the given string and assigns it to the InHousePipeline field.
func (o *Ga4ghFusionDetection) SetInHousePipeline(v string) {
	o.InHousePipeline = &v
}

// GetSvDetection returns the SvDetection field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetSvDetection() string {
	if o == nil || o.SvDetection == nil {
		var ret string
		return ret
	}
	return *o.SvDetection
}

// GetSvDetectionOk returns a tuple with the SvDetection field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetSvDetectionOk() (string, bool) {
	if o == nil || o.SvDetection == nil {
		var ret string
		return ret, false
	}
	return *o.SvDetection, true
}

// HasSvDetection returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasSvDetection() bool {
	if o != nil && o.SvDetection != nil {
		return true
	}

	return false
}

// SetSvDetection gets a reference to the given string and assigns it to the SvDetection field.
func (o *Ga4ghFusionDetection) SetSvDetection(v string) {
	o.SvDetection = &v
}

// GetFusionDetection returns the FusionDetection field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetFusionDetection() string {
	if o == nil || o.FusionDetection == nil {
		var ret string
		return ret
	}
	return *o.FusionDetection
}

// GetFusionDetectionOk returns a tuple with the FusionDetection field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetFusionDetectionOk() (string, bool) {
	if o == nil || o.FusionDetection == nil {
		var ret string
		return ret, false
	}
	return *o.FusionDetection, true
}

// HasFusionDetection returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasFusionDetection() bool {
	if o != nil && o.FusionDetection != nil {
		return true
	}

	return false
}

// SetFusionDetection gets a reference to the given string and assigns it to the FusionDetection field.
func (o *Ga4ghFusionDetection) SetFusionDetection(v string) {
	o.FusionDetection = &v
}

// GetRealignment returns the Realignment field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetRealignment() string {
	if o == nil || o.Realignment == nil {
		var ret string
		return ret
	}
	return *o.Realignment
}

// GetRealignmentOk returns a tuple with the Realignment field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetRealignmentOk() (string, bool) {
	if o == nil || o.Realignment == nil {
		var ret string
		return ret, false
	}
	return *o.Realignment, true
}

// HasRealignment returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasRealignment() bool {
	if o != nil && o.Realignment != nil {
		return true
	}

	return false
}

// SetRealignment gets a reference to the given string and assigns it to the Realignment field.
func (o *Ga4ghFusionDetection) SetRealignment(v string) {
	o.Realignment = &v
}

// GetAnnotation returns the Annotation field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetAnnotation() string {
	if o == nil || o.Annotation == nil {
		var ret string
		return ret
	}
	return *o.Annotation
}

// GetAnnotationOk returns a tuple with the Annotation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetAnnotationOk() (string, bool) {
	if o == nil || o.Annotation == nil {
		var ret string
		return ret, false
	}
	return *o.Annotation, true
}

// HasAnnotation returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasAnnotation() bool {
	if o != nil && o.Annotation != nil {
		return true
	}

	return false
}

// SetAnnotation gets a reference to the given string and assigns it to the Annotation field.
func (o *Ga4ghFusionDetection) SetAnnotation(v string) {
	o.Annotation = &v
}

// GetGenomeReference returns the GenomeReference field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetGenomeReference() string {
	if o == nil || o.GenomeReference == nil {
		var ret string
		return ret
	}
	return *o.GenomeReference
}

// GetGenomeReferenceOk returns a tuple with the GenomeReference field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetGenomeReferenceOk() (string, bool) {
	if o == nil || o.GenomeReference == nil {
		var ret string
		return ret, false
	}
	return *o.GenomeReference, true
}

// HasGenomeReference returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasGenomeReference() bool {
	if o != nil && o.GenomeReference != nil {
		return true
	}

	return false
}

// SetGenomeReference gets a reference to the given string and assigns it to the GenomeReference field.
func (o *Ga4ghFusionDetection) SetGenomeReference(v string) {
	o.GenomeReference = &v
}

// GetGeneModels returns the GeneModels field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetGeneModels() string {
	if o == nil || o.GeneModels == nil {
		var ret string
		return ret
	}
	return *o.GeneModels
}

// GetGeneModelsOk returns a tuple with the GeneModels field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetGeneModelsOk() (string, bool) {
	if o == nil || o.GeneModels == nil {
		var ret string
		return ret, false
	}
	return *o.GeneModels, true
}

// HasGeneModels returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasGeneModels() bool {
	if o != nil && o.GeneModels != nil {
		return true
	}

	return false
}

// SetGeneModels gets a reference to the given string and assigns it to the GeneModels field.
func (o *Ga4ghFusionDetection) SetGeneModels(v string) {
	o.GeneModels = &v
}

// GetFusionDetectionId returns the FusionDetectionId field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetFusionDetectionId() string {
	if o == nil || o.FusionDetectionId == nil {
		var ret string
		return ret
	}
	return *o.FusionDetectionId
}

// GetFusionDetectionIdOk returns a tuple with the FusionDetectionId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetFusionDetectionIdOk() (string, bool) {
	if o == nil || o.FusionDetectionId == nil {
		var ret string
		return ret, false
	}
	return *o.FusionDetectionId, true
}

// HasFusionDetectionId returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasFusionDetectionId() bool {
	if o != nil && o.FusionDetectionId != nil {
		return true
	}

	return false
}

// SetFusionDetectionId gets a reference to the given string and assigns it to the FusionDetectionId field.
func (o *Ga4ghFusionDetection) SetFusionDetectionId(v string) {
	o.FusionDetectionId = &v
}

// GetAlignmentId returns the AlignmentId field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetAlignmentId() string {
	if o == nil || o.AlignmentId == nil {
		var ret string
		return ret
	}
	return *o.AlignmentId
}

// GetAlignmentIdOk returns a tuple with the AlignmentId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetAlignmentIdOk() (string, bool) {
	if o == nil || o.AlignmentId == nil {
		var ret string
		return ret, false
	}
	return *o.AlignmentId, true
}

// HasAlignmentId returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasAlignmentId() bool {
	if o != nil && o.AlignmentId != nil {
		return true
	}

	return false
}

// SetAlignmentId gets a reference to the given string and assigns it to the AlignmentId field.
func (o *Ga4ghFusionDetection) SetAlignmentId(v string) {
	o.AlignmentId = &v
}

// GetSite returns the Site field if non-nil, zero value otherwise.
func (o *Ga4ghFusionDetection) GetSite() string {
	if o == nil || o.Site == nil {
		var ret string
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghFusionDetection) GetSiteOk() (string, bool) {
	if o == nil || o.Site == nil {
		var ret string
		return ret, false
	}
	return *o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *Ga4ghFusionDetection) HasSite() bool {
	if o != nil && o.Site != nil {
		return true
	}

	return false
}

// SetSite gets a reference to the given string and assigns it to the Site field.
func (o *Ga4ghFusionDetection) SetSite(v string) {
	o.Site = &v
}


func (o Ga4ghFusionDetection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DatasetId != nil {
		toSerialize["dataset_id"] = o.DatasetId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.SampleId != nil {
		toSerialize["sampleId"] = o.SampleId
	}
	if o.InHousePipeline != nil {
		toSerialize["inHousePipeline"] = o.InHousePipeline
	}
	if o.SvDetection != nil {
		toSerialize["svDetection"] = o.SvDetection
	}
	if o.FusionDetection != nil {
		toSerialize["fusionDetection"] = o.FusionDetection
	}
	if o.Realignment != nil {
		toSerialize["realignment"] = o.Realignment
	}
	if o.Annotation != nil {
		toSerialize["annotation"] = o.Annotation
	}
	if o.GenomeReference != nil {
		toSerialize["genomeReference"] = o.GenomeReference
	}
	if o.GeneModels != nil {
		toSerialize["geneModels"] = o.GeneModels
	}
	if o.FusionDetectionId != nil {
		toSerialize["fusionDetectionId"] = o.FusionDetectionId
	}
	if o.AlignmentId != nil {
		toSerialize["alignmentId"] = o.AlignmentId
	}
	if o.Site != nil {
		toSerialize["site"] = o.Site
	}
	return json.Marshal(toSerialize)
}


