/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client

import (
	"encoding/json"
)

// Ga4ghPatient struct for Ga4ghPatient
type Ga4ghPatient struct {
	// This is unique in the context of the server instance.
	Id *string `json:"id,omitempty"`

	// The ID of the dataset this object belongs to.
	DatasetId *string `json:"datasetId,omitempty"`

	// This is a label or symbolic identifier for this object.
	Name *string `json:"name,omitempty"`

	// This attribute contains human readable text.
	Description *string `json:"description,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was created.
	Created *string `json:"created,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated.
	Updated *string `json:"updated,omitempty"`

	PatientId *string `json:"patientId,omitempty"`

	OtherIds *string `json:"otherIds,omitempty"`

	DateOfBirth *string `json:"dateOfBirth,omitempty"`

	Gender *string `json:"gender,omitempty"`

	Ethnicity *string `json:"ethnicity,omitempty"`

	Race *string `json:"race,omitempty"`

	ProvinceOfResidence *string `json:"provinceOfResidence,omitempty"`

	DateOfDeath *string `json:"dateOfDeath,omitempty"`

	CauseOfDeath *string `json:"causeOfDeath,omitempty"`

	AutopsyTissueForResearch *string `json:"autopsyTissueForResearch,omitempty"`

	PriorMalignancy *string `json:"priorMalignancy,omitempty"`

	DateOfPriorMalignancy *string `json:"dateOfPriorMalignancy,omitempty"`

	FamilyHistoryAndRiskFactors *string `json:"familyHistoryAndRiskFactors,omitempty"`

	FamilyHistoryOfPredispositionSyndrome *string `json:"familyHistoryOfPredispositionSyndrome,omitempty"`

	DetailsOfPredispositionSyndrome *string `json:"detailsOfPredispositionSyndrome,omitempty"`

	GeneticCancerSyndrome *string `json:"geneticCancerSyndrome,omitempty"`

	OtherGeneticConditionOrSignificantComorbidity *string `json:"otherGeneticConditionOrSignificantComorbidity,omitempty"`

	OccupationalOrEnvironmentalExposure *string `json:"occupationalOrEnvironmentalExposure,omitempty"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Ga4ghPatient) SetId(v string) {
	o.Id = &v
}

// GetDatasetId returns the DatasetId field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetDatasetId() string {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret
	}
	return *o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetDatasetIdOk() (string, bool) {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret, false
	}
	return *o.DatasetId, true
}

// HasDatasetId returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasDatasetId() bool {
	if o != nil && o.DatasetId != nil {
		return true
	}

	return false
}

// SetDatasetId gets a reference to the given string and assigns it to the DatasetId field.
func (o *Ga4ghPatient) SetDatasetId(v string) {
	o.DatasetId = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ga4ghPatient) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Ga4ghPatient) SetDescription(v string) {
	o.Description = &v
}

// GetCreated returns the Created field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetCreatedOk() (string, bool) {
	if o == nil || o.Created == nil {
		var ret string
		return ret, false
	}
	return *o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *Ga4ghPatient) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetUpdatedOk() (string, bool) {
	if o == nil || o.Updated == nil {
		var ret string
		return ret, false
	}
	return *o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *Ga4ghPatient) SetUpdated(v string) {
	o.Updated = &v
}

// GetPatientId returns the PatientId field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetPatientId() string {
	if o == nil || o.PatientId == nil {
		var ret string
		return ret
	}
	return *o.PatientId
}

// GetPatientIdOk returns a tuple with the PatientId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetPatientIdOk() (string, bool) {
	if o == nil || o.PatientId == nil {
		var ret string
		return ret, false
	}
	return *o.PatientId, true
}

// HasPatientId returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasPatientId() bool {
	if o != nil && o.PatientId != nil {
		return true
	}

	return false
}

// SetPatientId gets a reference to the given string and assigns it to the PatientId field.
func (o *Ga4ghPatient) SetPatientId(v string) {
	o.PatientId = &v
}

// GetOtherIds returns the OtherIds field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetOtherIds() string {
	if o == nil || o.OtherIds == nil {
		var ret string
		return ret
	}
	return *o.OtherIds
}

// GetOtherIdsOk returns a tuple with the OtherIds field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetOtherIdsOk() (string, bool) {
	if o == nil || o.OtherIds == nil {
		var ret string
		return ret, false
	}
	return *o.OtherIds, true
}

// HasOtherIds returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasOtherIds() bool {
	if o != nil && o.OtherIds != nil {
		return true
	}

	return false
}

// SetOtherIds gets a reference to the given string and assigns it to the OtherIds field.
func (o *Ga4ghPatient) SetOtherIds(v string) {
	o.OtherIds = &v
}

// GetDateOfBirth returns the DateOfBirth field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetDateOfBirth() string {
	if o == nil || o.DateOfBirth == nil {
		var ret string
		return ret
	}
	return *o.DateOfBirth
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetDateOfBirthOk() (string, bool) {
	if o == nil || o.DateOfBirth == nil {
		var ret string
		return ret, false
	}
	return *o.DateOfBirth, true
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasDateOfBirth() bool {
	if o != nil && o.DateOfBirth != nil {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given string and assigns it to the DateOfBirth field.
func (o *Ga4ghPatient) SetDateOfBirth(v string) {
	o.DateOfBirth = &v
}

// GetGender returns the Gender field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetGender() string {
	if o == nil || o.Gender == nil {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetGenderOk() (string, bool) {
	if o == nil || o.Gender == nil {
		var ret string
		return ret, false
	}
	return *o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasGender() bool {
	if o != nil && o.Gender != nil {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *Ga4ghPatient) SetGender(v string) {
	o.Gender = &v
}

// GetEthnicity returns the Ethnicity field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetEthnicity() string {
	if o == nil || o.Ethnicity == nil {
		var ret string
		return ret
	}
	return *o.Ethnicity
}

// GetEthnicityOk returns a tuple with the Ethnicity field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetEthnicityOk() (string, bool) {
	if o == nil || o.Ethnicity == nil {
		var ret string
		return ret, false
	}
	return *o.Ethnicity, true
}

// HasEthnicity returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasEthnicity() bool {
	if o != nil && o.Ethnicity != nil {
		return true
	}

	return false
}

// SetEthnicity gets a reference to the given string and assigns it to the Ethnicity field.
func (o *Ga4ghPatient) SetEthnicity(v string) {
	o.Ethnicity = &v
}

// GetRace returns the Race field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetRace() string {
	if o == nil || o.Race == nil {
		var ret string
		return ret
	}
	return *o.Race
}

// GetRaceOk returns a tuple with the Race field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetRaceOk() (string, bool) {
	if o == nil || o.Race == nil {
		var ret string
		return ret, false
	}
	return *o.Race, true
}

// HasRace returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasRace() bool {
	if o != nil && o.Race != nil {
		return true
	}

	return false
}

// SetRace gets a reference to the given string and assigns it to the Race field.
func (o *Ga4ghPatient) SetRace(v string) {
	o.Race = &v
}

// GetProvinceOfResidence returns the ProvinceOfResidence field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetProvinceOfResidence() string {
	if o == nil || o.ProvinceOfResidence == nil {
		var ret string
		return ret
	}
	return *o.ProvinceOfResidence
}

// GetProvinceOfResidenceOk returns a tuple with the ProvinceOfResidence field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetProvinceOfResidenceOk() (string, bool) {
	if o == nil || o.ProvinceOfResidence == nil {
		var ret string
		return ret, false
	}
	return *o.ProvinceOfResidence, true
}

// HasProvinceOfResidence returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasProvinceOfResidence() bool {
	if o != nil && o.ProvinceOfResidence != nil {
		return true
	}

	return false
}

// SetProvinceOfResidence gets a reference to the given string and assigns it to the ProvinceOfResidence field.
func (o *Ga4ghPatient) SetProvinceOfResidence(v string) {
	o.ProvinceOfResidence = &v
}

// GetDateOfDeath returns the DateOfDeath field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetDateOfDeath() string {
	if o == nil || o.DateOfDeath == nil {
		var ret string
		return ret
	}
	return *o.DateOfDeath
}

// GetDateOfDeathOk returns a tuple with the DateOfDeath field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetDateOfDeathOk() (string, bool) {
	if o == nil || o.DateOfDeath == nil {
		var ret string
		return ret, false
	}
	return *o.DateOfDeath, true
}

// HasDateOfDeath returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasDateOfDeath() bool {
	if o != nil && o.DateOfDeath != nil {
		return true
	}

	return false
}

// SetDateOfDeath gets a reference to the given string and assigns it to the DateOfDeath field.
func (o *Ga4ghPatient) SetDateOfDeath(v string) {
	o.DateOfDeath = &v
}

// GetCauseOfDeath returns the CauseOfDeath field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetCauseOfDeath() string {
	if o == nil || o.CauseOfDeath == nil {
		var ret string
		return ret
	}
	return *o.CauseOfDeath
}

// GetCauseOfDeathOk returns a tuple with the CauseOfDeath field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetCauseOfDeathOk() (string, bool) {
	if o == nil || o.CauseOfDeath == nil {
		var ret string
		return ret, false
	}
	return *o.CauseOfDeath, true
}

// HasCauseOfDeath returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasCauseOfDeath() bool {
	if o != nil && o.CauseOfDeath != nil {
		return true
	}

	return false
}

// SetCauseOfDeath gets a reference to the given string and assigns it to the CauseOfDeath field.
func (o *Ga4ghPatient) SetCauseOfDeath(v string) {
	o.CauseOfDeath = &v
}

// GetAutopsyTissueForResearch returns the AutopsyTissueForResearch field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetAutopsyTissueForResearch() string {
	if o == nil || o.AutopsyTissueForResearch == nil {
		var ret string
		return ret
	}
	return *o.AutopsyTissueForResearch
}

// GetAutopsyTissueForResearchOk returns a tuple with the AutopsyTissueForResearch field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetAutopsyTissueForResearchOk() (string, bool) {
	if o == nil || o.AutopsyTissueForResearch == nil {
		var ret string
		return ret, false
	}
	return *o.AutopsyTissueForResearch, true
}

// HasAutopsyTissueForResearch returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasAutopsyTissueForResearch() bool {
	if o != nil && o.AutopsyTissueForResearch != nil {
		return true
	}

	return false
}

// SetAutopsyTissueForResearch gets a reference to the given string and assigns it to the AutopsyTissueForResearch field.
func (o *Ga4ghPatient) SetAutopsyTissueForResearch(v string) {
	o.AutopsyTissueForResearch = &v
}

// GetPriorMalignancy returns the PriorMalignancy field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetPriorMalignancy() string {
	if o == nil || o.PriorMalignancy == nil {
		var ret string
		return ret
	}
	return *o.PriorMalignancy
}

// GetPriorMalignancyOk returns a tuple with the PriorMalignancy field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetPriorMalignancyOk() (string, bool) {
	if o == nil || o.PriorMalignancy == nil {
		var ret string
		return ret, false
	}
	return *o.PriorMalignancy, true
}

// HasPriorMalignancy returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasPriorMalignancy() bool {
	if o != nil && o.PriorMalignancy != nil {
		return true
	}

	return false
}

// SetPriorMalignancy gets a reference to the given string and assigns it to the PriorMalignancy field.
func (o *Ga4ghPatient) SetPriorMalignancy(v string) {
	o.PriorMalignancy = &v
}

// GetDateOfPriorMalignancy returns the DateOfPriorMalignancy field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetDateOfPriorMalignancy() string {
	if o == nil || o.DateOfPriorMalignancy == nil {
		var ret string
		return ret
	}
	return *o.DateOfPriorMalignancy
}

// GetDateOfPriorMalignancyOk returns a tuple with the DateOfPriorMalignancy field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetDateOfPriorMalignancyOk() (string, bool) {
	if o == nil || o.DateOfPriorMalignancy == nil {
		var ret string
		return ret, false
	}
	return *o.DateOfPriorMalignancy, true
}

// HasDateOfPriorMalignancy returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasDateOfPriorMalignancy() bool {
	if o != nil && o.DateOfPriorMalignancy != nil {
		return true
	}

	return false
}

// SetDateOfPriorMalignancy gets a reference to the given string and assigns it to the DateOfPriorMalignancy field.
func (o *Ga4ghPatient) SetDateOfPriorMalignancy(v string) {
	o.DateOfPriorMalignancy = &v
}

// GetFamilyHistoryAndRiskFactors returns the FamilyHistoryAndRiskFactors field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetFamilyHistoryAndRiskFactors() string {
	if o == nil || o.FamilyHistoryAndRiskFactors == nil {
		var ret string
		return ret
	}
	return *o.FamilyHistoryAndRiskFactors
}

// GetFamilyHistoryAndRiskFactorsOk returns a tuple with the FamilyHistoryAndRiskFactors field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetFamilyHistoryAndRiskFactorsOk() (string, bool) {
	if o == nil || o.FamilyHistoryAndRiskFactors == nil {
		var ret string
		return ret, false
	}
	return *o.FamilyHistoryAndRiskFactors, true
}

// HasFamilyHistoryAndRiskFactors returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasFamilyHistoryAndRiskFactors() bool {
	if o != nil && o.FamilyHistoryAndRiskFactors != nil {
		return true
	}

	return false
}

// SetFamilyHistoryAndRiskFactors gets a reference to the given string and assigns it to the FamilyHistoryAndRiskFactors field.
func (o *Ga4ghPatient) SetFamilyHistoryAndRiskFactors(v string) {
	o.FamilyHistoryAndRiskFactors = &v
}

// GetFamilyHistoryOfPredispositionSyndrome returns the FamilyHistoryOfPredispositionSyndrome field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetFamilyHistoryOfPredispositionSyndrome() string {
	if o == nil || o.FamilyHistoryOfPredispositionSyndrome == nil {
		var ret string
		return ret
	}
	return *o.FamilyHistoryOfPredispositionSyndrome
}

// GetFamilyHistoryOfPredispositionSyndromeOk returns a tuple with the FamilyHistoryOfPredispositionSyndrome field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetFamilyHistoryOfPredispositionSyndromeOk() (string, bool) {
	if o == nil || o.FamilyHistoryOfPredispositionSyndrome == nil {
		var ret string
		return ret, false
	}
	return *o.FamilyHistoryOfPredispositionSyndrome, true
}

// HasFamilyHistoryOfPredispositionSyndrome returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasFamilyHistoryOfPredispositionSyndrome() bool {
	if o != nil && o.FamilyHistoryOfPredispositionSyndrome != nil {
		return true
	}

	return false
}

// SetFamilyHistoryOfPredispositionSyndrome gets a reference to the given string and assigns it to the FamilyHistoryOfPredispositionSyndrome field.
func (o *Ga4ghPatient) SetFamilyHistoryOfPredispositionSyndrome(v string) {
	o.FamilyHistoryOfPredispositionSyndrome = &v
}

// GetDetailsOfPredispositionSyndrome returns the DetailsOfPredispositionSyndrome field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetDetailsOfPredispositionSyndrome() string {
	if o == nil || o.DetailsOfPredispositionSyndrome == nil {
		var ret string
		return ret
	}
	return *o.DetailsOfPredispositionSyndrome
}

// GetDetailsOfPredispositionSyndromeOk returns a tuple with the DetailsOfPredispositionSyndrome field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetDetailsOfPredispositionSyndromeOk() (string, bool) {
	if o == nil || o.DetailsOfPredispositionSyndrome == nil {
		var ret string
		return ret, false
	}
	return *o.DetailsOfPredispositionSyndrome, true
}

// HasDetailsOfPredispositionSyndrome returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasDetailsOfPredispositionSyndrome() bool {
	if o != nil && o.DetailsOfPredispositionSyndrome != nil {
		return true
	}

	return false
}

// SetDetailsOfPredispositionSyndrome gets a reference to the given string and assigns it to the DetailsOfPredispositionSyndrome field.
func (o *Ga4ghPatient) SetDetailsOfPredispositionSyndrome(v string) {
	o.DetailsOfPredispositionSyndrome = &v
}

// GetGeneticCancerSyndrome returns the GeneticCancerSyndrome field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetGeneticCancerSyndrome() string {
	if o == nil || o.GeneticCancerSyndrome == nil {
		var ret string
		return ret
	}
	return *o.GeneticCancerSyndrome
}

// GetGeneticCancerSyndromeOk returns a tuple with the GeneticCancerSyndrome field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetGeneticCancerSyndromeOk() (string, bool) {
	if o == nil || o.GeneticCancerSyndrome == nil {
		var ret string
		return ret, false
	}
	return *o.GeneticCancerSyndrome, true
}

// HasGeneticCancerSyndrome returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasGeneticCancerSyndrome() bool {
	if o != nil && o.GeneticCancerSyndrome != nil {
		return true
	}

	return false
}

// SetGeneticCancerSyndrome gets a reference to the given string and assigns it to the GeneticCancerSyndrome field.
func (o *Ga4ghPatient) SetGeneticCancerSyndrome(v string) {
	o.GeneticCancerSyndrome = &v
}

// GetOtherGeneticConditionOrSignificantComorbidity returns the OtherGeneticConditionOrSignificantComorbidity field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetOtherGeneticConditionOrSignificantComorbidity() string {
	if o == nil || o.OtherGeneticConditionOrSignificantComorbidity == nil {
		var ret string
		return ret
	}
	return *o.OtherGeneticConditionOrSignificantComorbidity
}

// GetOtherGeneticConditionOrSignificantComorbidityOk returns a tuple with the OtherGeneticConditionOrSignificantComorbidity field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetOtherGeneticConditionOrSignificantComorbidityOk() (string, bool) {
	if o == nil || o.OtherGeneticConditionOrSignificantComorbidity == nil {
		var ret string
		return ret, false
	}
	return *o.OtherGeneticConditionOrSignificantComorbidity, true
}

// HasOtherGeneticConditionOrSignificantComorbidity returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasOtherGeneticConditionOrSignificantComorbidity() bool {
	if o != nil && o.OtherGeneticConditionOrSignificantComorbidity != nil {
		return true
	}

	return false
}

// SetOtherGeneticConditionOrSignificantComorbidity gets a reference to the given string and assigns it to the OtherGeneticConditionOrSignificantComorbidity field.
func (o *Ga4ghPatient) SetOtherGeneticConditionOrSignificantComorbidity(v string) {
	o.OtherGeneticConditionOrSignificantComorbidity = &v
}

// GetOccupationalOrEnvironmentalExposure returns the OccupationalOrEnvironmentalExposure field if non-nil, zero value otherwise.
func (o *Ga4ghPatient) GetOccupationalOrEnvironmentalExposure() string {
	if o == nil || o.OccupationalOrEnvironmentalExposure == nil {
		var ret string
		return ret
	}
	return *o.OccupationalOrEnvironmentalExposure
}

// GetOccupationalOrEnvironmentalExposureOk returns a tuple with the OccupationalOrEnvironmentalExposure field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghPatient) GetOccupationalOrEnvironmentalExposureOk() (string, bool) {
	if o == nil || o.OccupationalOrEnvironmentalExposure == nil {
		var ret string
		return ret, false
	}
	return *o.OccupationalOrEnvironmentalExposure, true
}

// HasOccupationalOrEnvironmentalExposure returns a boolean if a field has been set.
func (o *Ga4ghPatient) HasOccupationalOrEnvironmentalExposure() bool {
	if o != nil && o.OccupationalOrEnvironmentalExposure != nil {
		return true
	}

	return false
}

// SetOccupationalOrEnvironmentalExposure gets a reference to the given string and assigns it to the OccupationalOrEnvironmentalExposure field.
func (o *Ga4ghPatient) SetOccupationalOrEnvironmentalExposure(v string) {
	o.OccupationalOrEnvironmentalExposure = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o Ga4ghPatient) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DatasetId != nil {
		toSerialize["datasetId"] = o.DatasetId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.PatientId != nil {
		toSerialize["patientId"] = o.PatientId
	}
	if o.OtherIds != nil {
		toSerialize["otherIds"] = o.OtherIds
	}
	if o.DateOfBirth != nil {
		toSerialize["dateOfBirth"] = o.DateOfBirth
	}
	if o.Gender != nil {
		toSerialize["gender"] = o.Gender
	}
	if o.Ethnicity != nil {
		toSerialize["ethnicity"] = o.Ethnicity
	}
	if o.Race != nil {
		toSerialize["race"] = o.Race
	}
	if o.ProvinceOfResidence != nil {
		toSerialize["provinceOfResidence"] = o.ProvinceOfResidence
	}
	if o.DateOfDeath != nil {
		toSerialize["dateOfDeath"] = o.DateOfDeath
	}
	if o.CauseOfDeath != nil {
		toSerialize["causeOfDeath"] = o.CauseOfDeath
	}
	if o.AutopsyTissueForResearch != nil {
		toSerialize["autopsyTissueForResearch"] = o.AutopsyTissueForResearch
	}
	if o.PriorMalignancy != nil {
		toSerialize["priorMalignancy"] = o.PriorMalignancy
	}
	if o.DateOfPriorMalignancy != nil {
		toSerialize["dateOfPriorMalignancy"] = o.DateOfPriorMalignancy
	}
	if o.FamilyHistoryAndRiskFactors != nil {
		toSerialize["familyHistoryAndRiskFactors"] = o.FamilyHistoryAndRiskFactors
	}
	if o.FamilyHistoryOfPredispositionSyndrome != nil {
		toSerialize["familyHistoryOfPredispositionSyndrome"] = o.FamilyHistoryOfPredispositionSyndrome
	}
	if o.DetailsOfPredispositionSyndrome != nil {
		toSerialize["detailsOfPredispositionSyndrome"] = o.DetailsOfPredispositionSyndrome
	}
	if o.GeneticCancerSyndrome != nil {
		toSerialize["geneticCancerSyndrome"] = o.GeneticCancerSyndrome
	}
	if o.OtherGeneticConditionOrSignificantComorbidity != nil {
		toSerialize["otherGeneticConditionOrSignificantComorbidity"] = o.OtherGeneticConditionOrSignificantComorbidity
	}
	if o.OccupationalOrEnvironmentalExposure != nil {
		toSerialize["occupationalOrEnvironmentalExposure"] = o.OccupationalOrEnvironmentalExposure
	}
	return json.Marshal(toSerialize)
}
