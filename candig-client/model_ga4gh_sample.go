/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client
import (
	"encoding/json"
)

type Ga4ghSample struct {
	// This is unique in the context of the server instance.
	Id *string `json:"id,omitempty"`

	// The ID of the dataset this object belongs to.
	DatasetId *string `json:"dataset_id,omitempty"`

	// This is a label or symbolic identifier for this object.
	Name *string `json:"name,omitempty"`

	// This attribute contains human readable text.
	Description *string `json:"description,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was created.
	Created *string `json:"created,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated.
	Updated *string `json:"updated,omitempty"`

	PatientId *string `json:"patientId,omitempty"`

	SampleId *string `json:"sampleId,omitempty"`

	DiagnosisId *string `json:"diagnosisId,omitempty"`

	LocalBiobankId *string `json:"localBiobankId,omitempty"`

	CollectionDate *string `json:"collectionDate,omitempty"`

	CollectionHospital *string `json:"collectionHospital,omitempty"`

	SampleType *string `json:"sampleType,omitempty"`

	TissueDiseaseState *string `json:"tissueDiseaseState,omitempty"`

	AnatomicSiteTheSampleObtainedFrom *string `json:"anatomicSiteTheSampleObtainedFrom,omitempty"`

	CancerType *string `json:"cancerType,omitempty"`

	CancerSubtype *string `json:"cancerSubtype,omitempty"`

	PathologyReportId *string `json:"pathologyReportId,omitempty"`

	MorphologicalCode *string `json:"morphologicalCode,omitempty"`

	TopologicalCode *string `json:"topologicalCode,omitempty"`

	ShippingDate *string `json:"shippingDate,omitempty"`

	ReceivedDate *string `json:"receivedDate,omitempty"`

	QualityControlPerformed *string `json:"qualityControlPerformed,omitempty"`

	EstimatedTumorContent *string `json:"estimatedTumorContent,omitempty"`

	Quantity *string `json:"quantity,omitempty"`

	Units *string `json:"units,omitempty"`

	AssociatedBiobank *string `json:"associatedBiobank,omitempty"`

	OtherBiobank *string `json:"otherBiobank,omitempty"`

	SopFollowed *string `json:"sopFollowed,omitempty"`

	IfNotExplainAnyDeviation *string `json:"ifNotExplainAnyDeviation,omitempty"`

	RecordingDate *string `json:"recordingDate,omitempty"`

	StartInterval *string `json:"startInterval,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Ga4ghSample) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Ga4ghSample) SetId(v string) {
	o.Id = &v
}

// GetDatasetId returns the DatasetId field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetDatasetId() string {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret
	}
	return *o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetDatasetIdOk() (string, bool) {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret, false
	}
	return *o.DatasetId, true
}

// HasDatasetId returns a boolean if a field has been set.
func (o *Ga4ghSample) HasDatasetId() bool {
	if o != nil && o.DatasetId != nil {
		return true
	}

	return false
}

// SetDatasetId gets a reference to the given string and assigns it to the DatasetId field.
func (o *Ga4ghSample) SetDatasetId(v string) {
	o.DatasetId = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ga4ghSample) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ga4ghSample) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Ga4ghSample) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Ga4ghSample) SetDescription(v string) {
	o.Description = &v
}

// GetCreated returns the Created field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetCreatedOk() (string, bool) {
	if o == nil || o.Created == nil {
		var ret string
		return ret, false
	}
	return *o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Ga4ghSample) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *Ga4ghSample) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetUpdatedOk() (string, bool) {
	if o == nil || o.Updated == nil {
		var ret string
		return ret, false
	}
	return *o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *Ga4ghSample) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *Ga4ghSample) SetUpdated(v string) {
	o.Updated = &v
}

// GetPatientId returns the PatientId field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetPatientId() string {
	if o == nil || o.PatientId == nil {
		var ret string
		return ret
	}
	return *o.PatientId
}

// GetPatientIdOk returns a tuple with the PatientId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetPatientIdOk() (string, bool) {
	if o == nil || o.PatientId == nil {
		var ret string
		return ret, false
	}
	return *o.PatientId, true
}

// HasPatientId returns a boolean if a field has been set.
func (o *Ga4ghSample) HasPatientId() bool {
	if o != nil && o.PatientId != nil {
		return true
	}

	return false
}

// SetPatientId gets a reference to the given string and assigns it to the PatientId field.
func (o *Ga4ghSample) SetPatientId(v string) {
	o.PatientId = &v
}

// GetSampleId returns the SampleId field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetSampleId() string {
	if o == nil || o.SampleId == nil {
		var ret string
		return ret
	}
	return *o.SampleId
}

// GetSampleIdOk returns a tuple with the SampleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetSampleIdOk() (string, bool) {
	if o == nil || o.SampleId == nil {
		var ret string
		return ret, false
	}
	return *o.SampleId, true
}

// HasSampleId returns a boolean if a field has been set.
func (o *Ga4ghSample) HasSampleId() bool {
	if o != nil && o.SampleId != nil {
		return true
	}

	return false
}

// SetSampleId gets a reference to the given string and assigns it to the SampleId field.
func (o *Ga4ghSample) SetSampleId(v string) {
	o.SampleId = &v
}

// GetDiagnosisId returns the DiagnosisId field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetDiagnosisId() string {
	if o == nil || o.DiagnosisId == nil {
		var ret string
		return ret
	}
	return *o.DiagnosisId
}

// GetDiagnosisIdOk returns a tuple with the DiagnosisId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetDiagnosisIdOk() (string, bool) {
	if o == nil || o.DiagnosisId == nil {
		var ret string
		return ret, false
	}
	return *o.DiagnosisId, true
}

// HasDiagnosisId returns a boolean if a field has been set.
func (o *Ga4ghSample) HasDiagnosisId() bool {
	if o != nil && o.DiagnosisId != nil {
		return true
	}

	return false
}

// SetDiagnosisId gets a reference to the given string and assigns it to the DiagnosisId field.
func (o *Ga4ghSample) SetDiagnosisId(v string) {
	o.DiagnosisId = &v
}

// GetLocalBiobankId returns the LocalBiobankId field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetLocalBiobankId() string {
	if o == nil || o.LocalBiobankId == nil {
		var ret string
		return ret
	}
	return *o.LocalBiobankId
}

// GetLocalBiobankIdOk returns a tuple with the LocalBiobankId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetLocalBiobankIdOk() (string, bool) {
	if o == nil || o.LocalBiobankId == nil {
		var ret string
		return ret, false
	}
	return *o.LocalBiobankId, true
}

// HasLocalBiobankId returns a boolean if a field has been set.
func (o *Ga4ghSample) HasLocalBiobankId() bool {
	if o != nil && o.LocalBiobankId != nil {
		return true
	}

	return false
}

// SetLocalBiobankId gets a reference to the given string and assigns it to the LocalBiobankId field.
func (o *Ga4ghSample) SetLocalBiobankId(v string) {
	o.LocalBiobankId = &v
}

// GetCollectionDate returns the CollectionDate field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetCollectionDate() string {
	if o == nil || o.CollectionDate == nil {
		var ret string
		return ret
	}
	return *o.CollectionDate
}

// GetCollectionDateOk returns a tuple with the CollectionDate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetCollectionDateOk() (string, bool) {
	if o == nil || o.CollectionDate == nil {
		var ret string
		return ret, false
	}
	return *o.CollectionDate, true
}

// HasCollectionDate returns a boolean if a field has been set.
func (o *Ga4ghSample) HasCollectionDate() bool {
	if o != nil && o.CollectionDate != nil {
		return true
	}

	return false
}

// SetCollectionDate gets a reference to the given string and assigns it to the CollectionDate field.
func (o *Ga4ghSample) SetCollectionDate(v string) {
	o.CollectionDate = &v
}

// GetCollectionHospital returns the CollectionHospital field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetCollectionHospital() string {
	if o == nil || o.CollectionHospital == nil {
		var ret string
		return ret
	}
	return *o.CollectionHospital
}

// GetCollectionHospitalOk returns a tuple with the CollectionHospital field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetCollectionHospitalOk() (string, bool) {
	if o == nil || o.CollectionHospital == nil {
		var ret string
		return ret, false
	}
	return *o.CollectionHospital, true
}

// HasCollectionHospital returns a boolean if a field has been set.
func (o *Ga4ghSample) HasCollectionHospital() bool {
	if o != nil && o.CollectionHospital != nil {
		return true
	}

	return false
}

// SetCollectionHospital gets a reference to the given string and assigns it to the CollectionHospital field.
func (o *Ga4ghSample) SetCollectionHospital(v string) {
	o.CollectionHospital = &v
}

// GetSampleType returns the SampleType field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetSampleType() string {
	if o == nil || o.SampleType == nil {
		var ret string
		return ret
	}
	return *o.SampleType
}

// GetSampleTypeOk returns a tuple with the SampleType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetSampleTypeOk() (string, bool) {
	if o == nil || o.SampleType == nil {
		var ret string
		return ret, false
	}
	return *o.SampleType, true
}

// HasSampleType returns a boolean if a field has been set.
func (o *Ga4ghSample) HasSampleType() bool {
	if o != nil && o.SampleType != nil {
		return true
	}

	return false
}

// SetSampleType gets a reference to the given string and assigns it to the SampleType field.
func (o *Ga4ghSample) SetSampleType(v string) {
	o.SampleType = &v
}

// GetTissueDiseaseState returns the TissueDiseaseState field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetTissueDiseaseState() string {
	if o == nil || o.TissueDiseaseState == nil {
		var ret string
		return ret
	}
	return *o.TissueDiseaseState
}

// GetTissueDiseaseStateOk returns a tuple with the TissueDiseaseState field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetTissueDiseaseStateOk() (string, bool) {
	if o == nil || o.TissueDiseaseState == nil {
		var ret string
		return ret, false
	}
	return *o.TissueDiseaseState, true
}

// HasTissueDiseaseState returns a boolean if a field has been set.
func (o *Ga4ghSample) HasTissueDiseaseState() bool {
	if o != nil && o.TissueDiseaseState != nil {
		return true
	}

	return false
}

// SetTissueDiseaseState gets a reference to the given string and assigns it to the TissueDiseaseState field.
func (o *Ga4ghSample) SetTissueDiseaseState(v string) {
	o.TissueDiseaseState = &v
}

// GetAnatomicSiteTheSampleObtainedFrom returns the AnatomicSiteTheSampleObtainedFrom field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetAnatomicSiteTheSampleObtainedFrom() string {
	if o == nil || o.AnatomicSiteTheSampleObtainedFrom == nil {
		var ret string
		return ret
	}
	return *o.AnatomicSiteTheSampleObtainedFrom
}

// GetAnatomicSiteTheSampleObtainedFromOk returns a tuple with the AnatomicSiteTheSampleObtainedFrom field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetAnatomicSiteTheSampleObtainedFromOk() (string, bool) {
	if o == nil || o.AnatomicSiteTheSampleObtainedFrom == nil {
		var ret string
		return ret, false
	}
	return *o.AnatomicSiteTheSampleObtainedFrom, true
}

// HasAnatomicSiteTheSampleObtainedFrom returns a boolean if a field has been set.
func (o *Ga4ghSample) HasAnatomicSiteTheSampleObtainedFrom() bool {
	if o != nil && o.AnatomicSiteTheSampleObtainedFrom != nil {
		return true
	}

	return false
}

// SetAnatomicSiteTheSampleObtainedFrom gets a reference to the given string and assigns it to the AnatomicSiteTheSampleObtainedFrom field.
func (o *Ga4ghSample) SetAnatomicSiteTheSampleObtainedFrom(v string) {
	o.AnatomicSiteTheSampleObtainedFrom = &v
}

// GetCancerType returns the CancerType field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetCancerType() string {
	if o == nil || o.CancerType == nil {
		var ret string
		return ret
	}
	return *o.CancerType
}

// GetCancerTypeOk returns a tuple with the CancerType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetCancerTypeOk() (string, bool) {
	if o == nil || o.CancerType == nil {
		var ret string
		return ret, false
	}
	return *o.CancerType, true
}

// HasCancerType returns a boolean if a field has been set.
func (o *Ga4ghSample) HasCancerType() bool {
	if o != nil && o.CancerType != nil {
		return true
	}

	return false
}

// SetCancerType gets a reference to the given string and assigns it to the CancerType field.
func (o *Ga4ghSample) SetCancerType(v string) {
	o.CancerType = &v
}

// GetCancerSubtype returns the CancerSubtype field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetCancerSubtype() string {
	if o == nil || o.CancerSubtype == nil {
		var ret string
		return ret
	}
	return *o.CancerSubtype
}

// GetCancerSubtypeOk returns a tuple with the CancerSubtype field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetCancerSubtypeOk() (string, bool) {
	if o == nil || o.CancerSubtype == nil {
		var ret string
		return ret, false
	}
	return *o.CancerSubtype, true
}

// HasCancerSubtype returns a boolean if a field has been set.
func (o *Ga4ghSample) HasCancerSubtype() bool {
	if o != nil && o.CancerSubtype != nil {
		return true
	}

	return false
}

// SetCancerSubtype gets a reference to the given string and assigns it to the CancerSubtype field.
func (o *Ga4ghSample) SetCancerSubtype(v string) {
	o.CancerSubtype = &v
}

// GetPathologyReportId returns the PathologyReportId field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetPathologyReportId() string {
	if o == nil || o.PathologyReportId == nil {
		var ret string
		return ret
	}
	return *o.PathologyReportId
}

// GetPathologyReportIdOk returns a tuple with the PathologyReportId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetPathologyReportIdOk() (string, bool) {
	if o == nil || o.PathologyReportId == nil {
		var ret string
		return ret, false
	}
	return *o.PathologyReportId, true
}

// HasPathologyReportId returns a boolean if a field has been set.
func (o *Ga4ghSample) HasPathologyReportId() bool {
	if o != nil && o.PathologyReportId != nil {
		return true
	}

	return false
}

// SetPathologyReportId gets a reference to the given string and assigns it to the PathologyReportId field.
func (o *Ga4ghSample) SetPathologyReportId(v string) {
	o.PathologyReportId = &v
}

// GetMorphologicalCode returns the MorphologicalCode field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetMorphologicalCode() string {
	if o == nil || o.MorphologicalCode == nil {
		var ret string
		return ret
	}
	return *o.MorphologicalCode
}

// GetMorphologicalCodeOk returns a tuple with the MorphologicalCode field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetMorphologicalCodeOk() (string, bool) {
	if o == nil || o.MorphologicalCode == nil {
		var ret string
		return ret, false
	}
	return *o.MorphologicalCode, true
}

// HasMorphologicalCode returns a boolean if a field has been set.
func (o *Ga4ghSample) HasMorphologicalCode() bool {
	if o != nil && o.MorphologicalCode != nil {
		return true
	}

	return false
}

// SetMorphologicalCode gets a reference to the given string and assigns it to the MorphologicalCode field.
func (o *Ga4ghSample) SetMorphologicalCode(v string) {
	o.MorphologicalCode = &v
}

// GetTopologicalCode returns the TopologicalCode field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetTopologicalCode() string {
	if o == nil || o.TopologicalCode == nil {
		var ret string
		return ret
	}
	return *o.TopologicalCode
}

// GetTopologicalCodeOk returns a tuple with the TopologicalCode field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetTopologicalCodeOk() (string, bool) {
	if o == nil || o.TopologicalCode == nil {
		var ret string
		return ret, false
	}
	return *o.TopologicalCode, true
}

// HasTopologicalCode returns a boolean if a field has been set.
func (o *Ga4ghSample) HasTopologicalCode() bool {
	if o != nil && o.TopologicalCode != nil {
		return true
	}

	return false
}

// SetTopologicalCode gets a reference to the given string and assigns it to the TopologicalCode field.
func (o *Ga4ghSample) SetTopologicalCode(v string) {
	o.TopologicalCode = &v
}

// GetShippingDate returns the ShippingDate field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetShippingDate() string {
	if o == nil || o.ShippingDate == nil {
		var ret string
		return ret
	}
	return *o.ShippingDate
}

// GetShippingDateOk returns a tuple with the ShippingDate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetShippingDateOk() (string, bool) {
	if o == nil || o.ShippingDate == nil {
		var ret string
		return ret, false
	}
	return *o.ShippingDate, true
}

// HasShippingDate returns a boolean if a field has been set.
func (o *Ga4ghSample) HasShippingDate() bool {
	if o != nil && o.ShippingDate != nil {
		return true
	}

	return false
}

// SetShippingDate gets a reference to the given string and assigns it to the ShippingDate field.
func (o *Ga4ghSample) SetShippingDate(v string) {
	o.ShippingDate = &v
}

// GetReceivedDate returns the ReceivedDate field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetReceivedDate() string {
	if o == nil || o.ReceivedDate == nil {
		var ret string
		return ret
	}
	return *o.ReceivedDate
}

// GetReceivedDateOk returns a tuple with the ReceivedDate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetReceivedDateOk() (string, bool) {
	if o == nil || o.ReceivedDate == nil {
		var ret string
		return ret, false
	}
	return *o.ReceivedDate, true
}

// HasReceivedDate returns a boolean if a field has been set.
func (o *Ga4ghSample) HasReceivedDate() bool {
	if o != nil && o.ReceivedDate != nil {
		return true
	}

	return false
}

// SetReceivedDate gets a reference to the given string and assigns it to the ReceivedDate field.
func (o *Ga4ghSample) SetReceivedDate(v string) {
	o.ReceivedDate = &v
}

// GetQualityControlPerformed returns the QualityControlPerformed field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetQualityControlPerformed() string {
	if o == nil || o.QualityControlPerformed == nil {
		var ret string
		return ret
	}
	return *o.QualityControlPerformed
}

// GetQualityControlPerformedOk returns a tuple with the QualityControlPerformed field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetQualityControlPerformedOk() (string, bool) {
	if o == nil || o.QualityControlPerformed == nil {
		var ret string
		return ret, false
	}
	return *o.QualityControlPerformed, true
}

// HasQualityControlPerformed returns a boolean if a field has been set.
func (o *Ga4ghSample) HasQualityControlPerformed() bool {
	if o != nil && o.QualityControlPerformed != nil {
		return true
	}

	return false
}

// SetQualityControlPerformed gets a reference to the given string and assigns it to the QualityControlPerformed field.
func (o *Ga4ghSample) SetQualityControlPerformed(v string) {
	o.QualityControlPerformed = &v
}

// GetEstimatedTumorContent returns the EstimatedTumorContent field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetEstimatedTumorContent() string {
	if o == nil || o.EstimatedTumorContent == nil {
		var ret string
		return ret
	}
	return *o.EstimatedTumorContent
}

// GetEstimatedTumorContentOk returns a tuple with the EstimatedTumorContent field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetEstimatedTumorContentOk() (string, bool) {
	if o == nil || o.EstimatedTumorContent == nil {
		var ret string
		return ret, false
	}
	return *o.EstimatedTumorContent, true
}

// HasEstimatedTumorContent returns a boolean if a field has been set.
func (o *Ga4ghSample) HasEstimatedTumorContent() bool {
	if o != nil && o.EstimatedTumorContent != nil {
		return true
	}

	return false
}

// SetEstimatedTumorContent gets a reference to the given string and assigns it to the EstimatedTumorContent field.
func (o *Ga4ghSample) SetEstimatedTumorContent(v string) {
	o.EstimatedTumorContent = &v
}

// GetQuantity returns the Quantity field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetQuantity() string {
	if o == nil || o.Quantity == nil {
		var ret string
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetQuantityOk() (string, bool) {
	if o == nil || o.Quantity == nil {
		var ret string
		return ret, false
	}
	return *o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *Ga4ghSample) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given string and assigns it to the Quantity field.
func (o *Ga4ghSample) SetQuantity(v string) {
	o.Quantity = &v
}

// GetUnits returns the Units field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetUnits() string {
	if o == nil || o.Units == nil {
		var ret string
		return ret
	}
	return *o.Units
}

// GetUnitsOk returns a tuple with the Units field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetUnitsOk() (string, bool) {
	if o == nil || o.Units == nil {
		var ret string
		return ret, false
	}
	return *o.Units, true
}

// HasUnits returns a boolean if a field has been set.
func (o *Ga4ghSample) HasUnits() bool {
	if o != nil && o.Units != nil {
		return true
	}

	return false
}

// SetUnits gets a reference to the given string and assigns it to the Units field.
func (o *Ga4ghSample) SetUnits(v string) {
	o.Units = &v
}

// GetAssociatedBiobank returns the AssociatedBiobank field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetAssociatedBiobank() string {
	if o == nil || o.AssociatedBiobank == nil {
		var ret string
		return ret
	}
	return *o.AssociatedBiobank
}

// GetAssociatedBiobankOk returns a tuple with the AssociatedBiobank field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetAssociatedBiobankOk() (string, bool) {
	if o == nil || o.AssociatedBiobank == nil {
		var ret string
		return ret, false
	}
	return *o.AssociatedBiobank, true
}

// HasAssociatedBiobank returns a boolean if a field has been set.
func (o *Ga4ghSample) HasAssociatedBiobank() bool {
	if o != nil && o.AssociatedBiobank != nil {
		return true
	}

	return false
}

// SetAssociatedBiobank gets a reference to the given string and assigns it to the AssociatedBiobank field.
func (o *Ga4ghSample) SetAssociatedBiobank(v string) {
	o.AssociatedBiobank = &v
}

// GetOtherBiobank returns the OtherBiobank field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetOtherBiobank() string {
	if o == nil || o.OtherBiobank == nil {
		var ret string
		return ret
	}
	return *o.OtherBiobank
}

// GetOtherBiobankOk returns a tuple with the OtherBiobank field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetOtherBiobankOk() (string, bool) {
	if o == nil || o.OtherBiobank == nil {
		var ret string
		return ret, false
	}
	return *o.OtherBiobank, true
}

// HasOtherBiobank returns a boolean if a field has been set.
func (o *Ga4ghSample) HasOtherBiobank() bool {
	if o != nil && o.OtherBiobank != nil {
		return true
	}

	return false
}

// SetOtherBiobank gets a reference to the given string and assigns it to the OtherBiobank field.
func (o *Ga4ghSample) SetOtherBiobank(v string) {
	o.OtherBiobank = &v
}

// GetSopFollowed returns the SopFollowed field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetSopFollowed() string {
	if o == nil || o.SopFollowed == nil {
		var ret string
		return ret
	}
	return *o.SopFollowed
}

// GetSopFollowedOk returns a tuple with the SopFollowed field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetSopFollowedOk() (string, bool) {
	if o == nil || o.SopFollowed == nil {
		var ret string
		return ret, false
	}
	return *o.SopFollowed, true
}

// HasSopFollowed returns a boolean if a field has been set.
func (o *Ga4ghSample) HasSopFollowed() bool {
	if o != nil && o.SopFollowed != nil {
		return true
	}

	return false
}

// SetSopFollowed gets a reference to the given string and assigns it to the SopFollowed field.
func (o *Ga4ghSample) SetSopFollowed(v string) {
	o.SopFollowed = &v
}

// GetIfNotExplainAnyDeviation returns the IfNotExplainAnyDeviation field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetIfNotExplainAnyDeviation() string {
	if o == nil || o.IfNotExplainAnyDeviation == nil {
		var ret string
		return ret
	}
	return *o.IfNotExplainAnyDeviation
}

// GetIfNotExplainAnyDeviationOk returns a tuple with the IfNotExplainAnyDeviation field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetIfNotExplainAnyDeviationOk() (string, bool) {
	if o == nil || o.IfNotExplainAnyDeviation == nil {
		var ret string
		return ret, false
	}
	return *o.IfNotExplainAnyDeviation, true
}

// HasIfNotExplainAnyDeviation returns a boolean if a field has been set.
func (o *Ga4ghSample) HasIfNotExplainAnyDeviation() bool {
	if o != nil && o.IfNotExplainAnyDeviation != nil {
		return true
	}

	return false
}

// SetIfNotExplainAnyDeviation gets a reference to the given string and assigns it to the IfNotExplainAnyDeviation field.
func (o *Ga4ghSample) SetIfNotExplainAnyDeviation(v string) {
	o.IfNotExplainAnyDeviation = &v
}

// GetRecordingDate returns the RecordingDate field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetRecordingDate() string {
	if o == nil || o.RecordingDate == nil {
		var ret string
		return ret
	}
	return *o.RecordingDate
}

// GetRecordingDateOk returns a tuple with the RecordingDate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetRecordingDateOk() (string, bool) {
	if o == nil || o.RecordingDate == nil {
		var ret string
		return ret, false
	}
	return *o.RecordingDate, true
}

// HasRecordingDate returns a boolean if a field has been set.
func (o *Ga4ghSample) HasRecordingDate() bool {
	if o != nil && o.RecordingDate != nil {
		return true
	}

	return false
}

// SetRecordingDate gets a reference to the given string and assigns it to the RecordingDate field.
func (o *Ga4ghSample) SetRecordingDate(v string) {
	o.RecordingDate = &v
}

// GetStartInterval returns the StartInterval field if non-nil, zero value otherwise.
func (o *Ga4ghSample) GetStartInterval() string {
	if o == nil || o.StartInterval == nil {
		var ret string
		return ret
	}
	return *o.StartInterval
}

// GetStartIntervalOk returns a tuple with the StartInterval field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSample) GetStartIntervalOk() (string, bool) {
	if o == nil || o.StartInterval == nil {
		var ret string
		return ret, false
	}
	return *o.StartInterval, true
}

// HasStartInterval returns a boolean if a field has been set.
func (o *Ga4ghSample) HasStartInterval() bool {
	if o != nil && o.StartInterval != nil {
		return true
	}

	return false
}

// SetStartInterval gets a reference to the given string and assigns it to the StartInterval field.
func (o *Ga4ghSample) SetStartInterval(v string) {
	o.StartInterval = &v
}


func (o Ga4ghSample) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DatasetId != nil {
		toSerialize["dataset_id"] = o.DatasetId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.PatientId != nil {
		toSerialize["patientId"] = o.PatientId
	}
	if o.SampleId != nil {
		toSerialize["sampleId"] = o.SampleId
	}
	if o.DiagnosisId != nil {
		toSerialize["diagnosisId"] = o.DiagnosisId
	}
	if o.LocalBiobankId != nil {
		toSerialize["localBiobankId"] = o.LocalBiobankId
	}
	if o.CollectionDate != nil {
		toSerialize["collectionDate"] = o.CollectionDate
	}
	if o.CollectionHospital != nil {
		toSerialize["collectionHospital"] = o.CollectionHospital
	}
	if o.SampleType != nil {
		toSerialize["sampleType"] = o.SampleType
	}
	if o.TissueDiseaseState != nil {
		toSerialize["tissueDiseaseState"] = o.TissueDiseaseState
	}
	if o.AnatomicSiteTheSampleObtainedFrom != nil {
		toSerialize["anatomicSiteTheSampleObtainedFrom"] = o.AnatomicSiteTheSampleObtainedFrom
	}
	if o.CancerType != nil {
		toSerialize["cancerType"] = o.CancerType
	}
	if o.CancerSubtype != nil {
		toSerialize["cancerSubtype"] = o.CancerSubtype
	}
	if o.PathologyReportId != nil {
		toSerialize["pathologyReportId"] = o.PathologyReportId
	}
	if o.MorphologicalCode != nil {
		toSerialize["morphologicalCode"] = o.MorphologicalCode
	}
	if o.TopologicalCode != nil {
		toSerialize["topologicalCode"] = o.TopologicalCode
	}
	if o.ShippingDate != nil {
		toSerialize["shippingDate"] = o.ShippingDate
	}
	if o.ReceivedDate != nil {
		toSerialize["receivedDate"] = o.ReceivedDate
	}
	if o.QualityControlPerformed != nil {
		toSerialize["qualityControlPerformed"] = o.QualityControlPerformed
	}
	if o.EstimatedTumorContent != nil {
		toSerialize["estimatedTumorContent"] = o.EstimatedTumorContent
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	if o.Units != nil {
		toSerialize["units"] = o.Units
	}
	if o.AssociatedBiobank != nil {
		toSerialize["associatedBiobank"] = o.AssociatedBiobank
	}
	if o.OtherBiobank != nil {
		toSerialize["otherBiobank"] = o.OtherBiobank
	}
	if o.SopFollowed != nil {
		toSerialize["sopFollowed"] = o.SopFollowed
	}
	if o.IfNotExplainAnyDeviation != nil {
		toSerialize["ifNotExplainAnyDeviation"] = o.IfNotExplainAnyDeviation
	}
	if o.RecordingDate != nil {
		toSerialize["recordingDate"] = o.RecordingDate
	}
	if o.StartInterval != nil {
		toSerialize["startInterval"] = o.StartInterval
	}
	return json.Marshal(toSerialize)
}


