/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client
import (
	"encoding/json"
)

type Ga4ghExtraction struct {
	// This is unique in the context of the server instance.
	Id *string `json:"id,omitempty"`

	// The ID of the dataset this object belongs to.
	DatasetId *string `json:"dataset_id,omitempty"`

	// This is a label or symbolic identifier for this object.
	Name *string `json:"name,omitempty"`

	// This attribute contains human readable text.
	Description *string `json:"description,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was created.
	Created *string `json:"created,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated.
	Updated *string `json:"updated,omitempty"`

	SampleId *string `json:"sampleId,omitempty"`

	RnaBlood *string `json:"rnaBlood,omitempty"`

	DnaBlood *string `json:"dnaBlood,omitempty"`

	RnaTissue *string `json:"rnaTissue,omitempty"`

	DnaTissue *string `json:"dnaTissue,omitempty"`

	ExtractionId *string `json:"extractionId,omitempty"`

	Site *string `json:"site,omitempty"`

}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *Ga4ghExtraction) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghExtraction) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Ga4ghExtraction) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Ga4ghExtraction) SetId(v string) {
	o.Id = &v
}

// GetDatasetId returns the DatasetId field if non-nil, zero value otherwise.
func (o *Ga4ghExtraction) GetDatasetId() string {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret
	}
	return *o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghExtraction) GetDatasetIdOk() (string, bool) {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret, false
	}
	return *o.DatasetId, true
}

// HasDatasetId returns a boolean if a field has been set.
func (o *Ga4ghExtraction) HasDatasetId() bool {
	if o != nil && o.DatasetId != nil {
		return true
	}

	return false
}

// SetDatasetId gets a reference to the given string and assigns it to the DatasetId field.
func (o *Ga4ghExtraction) SetDatasetId(v string) {
	o.DatasetId = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *Ga4ghExtraction) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghExtraction) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ga4ghExtraction) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ga4ghExtraction) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *Ga4ghExtraction) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghExtraction) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Ga4ghExtraction) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Ga4ghExtraction) SetDescription(v string) {
	o.Description = &v
}

// GetCreated returns the Created field if non-nil, zero value otherwise.
func (o *Ga4ghExtraction) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghExtraction) GetCreatedOk() (string, bool) {
	if o == nil || o.Created == nil {
		var ret string
		return ret, false
	}
	return *o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Ga4ghExtraction) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *Ga4ghExtraction) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field if non-nil, zero value otherwise.
func (o *Ga4ghExtraction) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghExtraction) GetUpdatedOk() (string, bool) {
	if o == nil || o.Updated == nil {
		var ret string
		return ret, false
	}
	return *o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *Ga4ghExtraction) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *Ga4ghExtraction) SetUpdated(v string) {
	o.Updated = &v
}

// GetSampleId returns the SampleId field if non-nil, zero value otherwise.
func (o *Ga4ghExtraction) GetSampleId() string {
	if o == nil || o.SampleId == nil {
		var ret string
		return ret
	}
	return *o.SampleId
}

// GetSampleIdOk returns a tuple with the SampleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghExtraction) GetSampleIdOk() (string, bool) {
	if o == nil || o.SampleId == nil {
		var ret string
		return ret, false
	}
	return *o.SampleId, true
}

// HasSampleId returns a boolean if a field has been set.
func (o *Ga4ghExtraction) HasSampleId() bool {
	if o != nil && o.SampleId != nil {
		return true
	}

	return false
}

// SetSampleId gets a reference to the given string and assigns it to the SampleId field.
func (o *Ga4ghExtraction) SetSampleId(v string) {
	o.SampleId = &v
}

// GetRnaBlood returns the RnaBlood field if non-nil, zero value otherwise.
func (o *Ga4ghExtraction) GetRnaBlood() string {
	if o == nil || o.RnaBlood == nil {
		var ret string
		return ret
	}
	return *o.RnaBlood
}

// GetRnaBloodOk returns a tuple with the RnaBlood field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghExtraction) GetRnaBloodOk() (string, bool) {
	if o == nil || o.RnaBlood == nil {
		var ret string
		return ret, false
	}
	return *o.RnaBlood, true
}

// HasRnaBlood returns a boolean if a field has been set.
func (o *Ga4ghExtraction) HasRnaBlood() bool {
	if o != nil && o.RnaBlood != nil {
		return true
	}

	return false
}

// SetRnaBlood gets a reference to the given string and assigns it to the RnaBlood field.
func (o *Ga4ghExtraction) SetRnaBlood(v string) {
	o.RnaBlood = &v
}

// GetDnaBlood returns the DnaBlood field if non-nil, zero value otherwise.
func (o *Ga4ghExtraction) GetDnaBlood() string {
	if o == nil || o.DnaBlood == nil {
		var ret string
		return ret
	}
	return *o.DnaBlood
}

// GetDnaBloodOk returns a tuple with the DnaBlood field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghExtraction) GetDnaBloodOk() (string, bool) {
	if o == nil || o.DnaBlood == nil {
		var ret string
		return ret, false
	}
	return *o.DnaBlood, true
}

// HasDnaBlood returns a boolean if a field has been set.
func (o *Ga4ghExtraction) HasDnaBlood() bool {
	if o != nil && o.DnaBlood != nil {
		return true
	}

	return false
}

// SetDnaBlood gets a reference to the given string and assigns it to the DnaBlood field.
func (o *Ga4ghExtraction) SetDnaBlood(v string) {
	o.DnaBlood = &v
}

// GetRnaTissue returns the RnaTissue field if non-nil, zero value otherwise.
func (o *Ga4ghExtraction) GetRnaTissue() string {
	if o == nil || o.RnaTissue == nil {
		var ret string
		return ret
	}
	return *o.RnaTissue
}

// GetRnaTissueOk returns a tuple with the RnaTissue field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghExtraction) GetRnaTissueOk() (string, bool) {
	if o == nil || o.RnaTissue == nil {
		var ret string
		return ret, false
	}
	return *o.RnaTissue, true
}

// HasRnaTissue returns a boolean if a field has been set.
func (o *Ga4ghExtraction) HasRnaTissue() bool {
	if o != nil && o.RnaTissue != nil {
		return true
	}

	return false
}

// SetRnaTissue gets a reference to the given string and assigns it to the RnaTissue field.
func (o *Ga4ghExtraction) SetRnaTissue(v string) {
	o.RnaTissue = &v
}

// GetDnaTissue returns the DnaTissue field if non-nil, zero value otherwise.
func (o *Ga4ghExtraction) GetDnaTissue() string {
	if o == nil || o.DnaTissue == nil {
		var ret string
		return ret
	}
	return *o.DnaTissue
}

// GetDnaTissueOk returns a tuple with the DnaTissue field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghExtraction) GetDnaTissueOk() (string, bool) {
	if o == nil || o.DnaTissue == nil {
		var ret string
		return ret, false
	}
	return *o.DnaTissue, true
}

// HasDnaTissue returns a boolean if a field has been set.
func (o *Ga4ghExtraction) HasDnaTissue() bool {
	if o != nil && o.DnaTissue != nil {
		return true
	}

	return false
}

// SetDnaTissue gets a reference to the given string and assigns it to the DnaTissue field.
func (o *Ga4ghExtraction) SetDnaTissue(v string) {
	o.DnaTissue = &v
}

// GetExtractionId returns the ExtractionId field if non-nil, zero value otherwise.
func (o *Ga4ghExtraction) GetExtractionId() string {
	if o == nil || o.ExtractionId == nil {
		var ret string
		return ret
	}
	return *o.ExtractionId
}

// GetExtractionIdOk returns a tuple with the ExtractionId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghExtraction) GetExtractionIdOk() (string, bool) {
	if o == nil || o.ExtractionId == nil {
		var ret string
		return ret, false
	}
	return *o.ExtractionId, true
}

// HasExtractionId returns a boolean if a field has been set.
func (o *Ga4ghExtraction) HasExtractionId() bool {
	if o != nil && o.ExtractionId != nil {
		return true
	}

	return false
}

// SetExtractionId gets a reference to the given string and assigns it to the ExtractionId field.
func (o *Ga4ghExtraction) SetExtractionId(v string) {
	o.ExtractionId = &v
}

// GetSite returns the Site field if non-nil, zero value otherwise.
func (o *Ga4ghExtraction) GetSite() string {
	if o == nil || o.Site == nil {
		var ret string
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghExtraction) GetSiteOk() (string, bool) {
	if o == nil || o.Site == nil {
		var ret string
		return ret, false
	}
	return *o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *Ga4ghExtraction) HasSite() bool {
	if o != nil && o.Site != nil {
		return true
	}

	return false
}

// SetSite gets a reference to the given string and assigns it to the Site field.
func (o *Ga4ghExtraction) SetSite(v string) {
	o.Site = &v
}


func (o Ga4ghExtraction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DatasetId != nil {
		toSerialize["dataset_id"] = o.DatasetId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.SampleId != nil {
		toSerialize["sampleId"] = o.SampleId
	}
	if o.RnaBlood != nil {
		toSerialize["rnaBlood"] = o.RnaBlood
	}
	if o.DnaBlood != nil {
		toSerialize["dnaBlood"] = o.DnaBlood
	}
	if o.RnaTissue != nil {
		toSerialize["rnaTissue"] = o.RnaTissue
	}
	if o.DnaTissue != nil {
		toSerialize["dnaTissue"] = o.DnaTissue
	}
	if o.ExtractionId != nil {
		toSerialize["extractionId"] = o.ExtractionId
	}
	if o.Site != nil {
		toSerialize["site"] = o.Site
	}
	return json.Marshal(toSerialize)
}


