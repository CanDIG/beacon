/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client

import (
	"encoding/json"
)

// Ga4ghTreatment struct for Ga4ghTreatment
type Ga4ghTreatment struct {
	// This is unique in the context of the server instance.
	Id *string `json:"id,omitempty"`

	// The ID of the dataset this object belongs to.
	DatasetId *string `json:"datasetId,omitempty"`

	// This is a label or symbolic identifier for this object.
	Name *string `json:"name,omitempty"`

	// This attribute contains human readable text.
	Description *string `json:"description,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was created.
	Created *string `json:"created,omitempty"`

	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated.
	Updated *string `json:"updated,omitempty"`

	PatientId *string `json:"patientId,omitempty"`

	CourseNumber *string `json:"courseNumber,omitempty"`

	TherapeuticModality *string `json:"therapeuticModality,omitempty"`

	TreatmentPlanType *string `json:"treatmentPlanType,omitempty"`

	TreatmentIntent *string `json:"treatmentIntent,omitempty"`

	StartDate *string `json:"startDate,omitempty"`

	StopDate *string `json:"stopDate,omitempty"`

	ReasonForEndingTheTreatment *string `json:"reasonForEndingTheTreatment,omitempty"`

	ResponseToTreatment *string `json:"responseToTreatment,omitempty"`

	ResponseCriteriaUsed *string `json:"responseCriteriaUsed,omitempty"`

	DateOfRecurrenceOrProgressionAfterThisTreatment *string `json:"dateOfRecurrenceOrProgressionAfterThisTreatment,omitempty"`

	UnexpectedOrUnusualToxicityDuringTreatment *string `json:"unexpectedOrUnusualToxicityDuringTreatment,omitempty"`

	DiagnosisId *string `json:"diagnosisId,omitempty"`

	TreatmentPlanId *string `json:"treatmentPlanId,omitempty"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Ga4ghTreatment) SetId(v string) {
	o.Id = &v
}

// GetDatasetId returns the DatasetId field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetDatasetId() string {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret
	}
	return *o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetDatasetIdOk() (string, bool) {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret, false
	}
	return *o.DatasetId, true
}

// HasDatasetId returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasDatasetId() bool {
	if o != nil && o.DatasetId != nil {
		return true
	}

	return false
}

// SetDatasetId gets a reference to the given string and assigns it to the DatasetId field.
func (o *Ga4ghTreatment) SetDatasetId(v string) {
	o.DatasetId = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ga4ghTreatment) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Ga4ghTreatment) SetDescription(v string) {
	o.Description = &v
}

// GetCreated returns the Created field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetCreatedOk() (string, bool) {
	if o == nil || o.Created == nil {
		var ret string
		return ret, false
	}
	return *o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *Ga4ghTreatment) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetUpdatedOk() (string, bool) {
	if o == nil || o.Updated == nil {
		var ret string
		return ret, false
	}
	return *o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *Ga4ghTreatment) SetUpdated(v string) {
	o.Updated = &v
}

// GetPatientId returns the PatientId field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetPatientId() string {
	if o == nil || o.PatientId == nil {
		var ret string
		return ret
	}
	return *o.PatientId
}

// GetPatientIdOk returns a tuple with the PatientId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetPatientIdOk() (string, bool) {
	if o == nil || o.PatientId == nil {
		var ret string
		return ret, false
	}
	return *o.PatientId, true
}

// HasPatientId returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasPatientId() bool {
	if o != nil && o.PatientId != nil {
		return true
	}

	return false
}

// SetPatientId gets a reference to the given string and assigns it to the PatientId field.
func (o *Ga4ghTreatment) SetPatientId(v string) {
	o.PatientId = &v
}

// GetCourseNumber returns the CourseNumber field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetCourseNumber() string {
	if o == nil || o.CourseNumber == nil {
		var ret string
		return ret
	}
	return *o.CourseNumber
}

// GetCourseNumberOk returns a tuple with the CourseNumber field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetCourseNumberOk() (string, bool) {
	if o == nil || o.CourseNumber == nil {
		var ret string
		return ret, false
	}
	return *o.CourseNumber, true
}

// HasCourseNumber returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasCourseNumber() bool {
	if o != nil && o.CourseNumber != nil {
		return true
	}

	return false
}

// SetCourseNumber gets a reference to the given string and assigns it to the CourseNumber field.
func (o *Ga4ghTreatment) SetCourseNumber(v string) {
	o.CourseNumber = &v
}

// GetTherapeuticModality returns the TherapeuticModality field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetTherapeuticModality() string {
	if o == nil || o.TherapeuticModality == nil {
		var ret string
		return ret
	}
	return *o.TherapeuticModality
}

// GetTherapeuticModalityOk returns a tuple with the TherapeuticModality field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetTherapeuticModalityOk() (string, bool) {
	if o == nil || o.TherapeuticModality == nil {
		var ret string
		return ret, false
	}
	return *o.TherapeuticModality, true
}

// HasTherapeuticModality returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasTherapeuticModality() bool {
	if o != nil && o.TherapeuticModality != nil {
		return true
	}

	return false
}

// SetTherapeuticModality gets a reference to the given string and assigns it to the TherapeuticModality field.
func (o *Ga4ghTreatment) SetTherapeuticModality(v string) {
	o.TherapeuticModality = &v
}

// GetTreatmentPlanType returns the TreatmentPlanType field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetTreatmentPlanType() string {
	if o == nil || o.TreatmentPlanType == nil {
		var ret string
		return ret
	}
	return *o.TreatmentPlanType
}

// GetTreatmentPlanTypeOk returns a tuple with the TreatmentPlanType field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetTreatmentPlanTypeOk() (string, bool) {
	if o == nil || o.TreatmentPlanType == nil {
		var ret string
		return ret, false
	}
	return *o.TreatmentPlanType, true
}

// HasTreatmentPlanType returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasTreatmentPlanType() bool {
	if o != nil && o.TreatmentPlanType != nil {
		return true
	}

	return false
}

// SetTreatmentPlanType gets a reference to the given string and assigns it to the TreatmentPlanType field.
func (o *Ga4ghTreatment) SetTreatmentPlanType(v string) {
	o.TreatmentPlanType = &v
}

// GetTreatmentIntent returns the TreatmentIntent field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetTreatmentIntent() string {
	if o == nil || o.TreatmentIntent == nil {
		var ret string
		return ret
	}
	return *o.TreatmentIntent
}

// GetTreatmentIntentOk returns a tuple with the TreatmentIntent field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetTreatmentIntentOk() (string, bool) {
	if o == nil || o.TreatmentIntent == nil {
		var ret string
		return ret, false
	}
	return *o.TreatmentIntent, true
}

// HasTreatmentIntent returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasTreatmentIntent() bool {
	if o != nil && o.TreatmentIntent != nil {
		return true
	}

	return false
}

// SetTreatmentIntent gets a reference to the given string and assigns it to the TreatmentIntent field.
func (o *Ga4ghTreatment) SetTreatmentIntent(v string) {
	o.TreatmentIntent = &v
}

// GetStartDate returns the StartDate field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetStartDate() string {
	if o == nil || o.StartDate == nil {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetStartDateOk() (string, bool) {
	if o == nil || o.StartDate == nil {
		var ret string
		return ret, false
	}
	return *o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *Ga4ghTreatment) SetStartDate(v string) {
	o.StartDate = &v
}

// GetStopDate returns the StopDate field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetStopDate() string {
	if o == nil || o.StopDate == nil {
		var ret string
		return ret
	}
	return *o.StopDate
}

// GetStopDateOk returns a tuple with the StopDate field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetStopDateOk() (string, bool) {
	if o == nil || o.StopDate == nil {
		var ret string
		return ret, false
	}
	return *o.StopDate, true
}

// HasStopDate returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasStopDate() bool {
	if o != nil && o.StopDate != nil {
		return true
	}

	return false
}

// SetStopDate gets a reference to the given string and assigns it to the StopDate field.
func (o *Ga4ghTreatment) SetStopDate(v string) {
	o.StopDate = &v
}

// GetReasonForEndingTheTreatment returns the ReasonForEndingTheTreatment field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetReasonForEndingTheTreatment() string {
	if o == nil || o.ReasonForEndingTheTreatment == nil {
		var ret string
		return ret
	}
	return *o.ReasonForEndingTheTreatment
}

// GetReasonForEndingTheTreatmentOk returns a tuple with the ReasonForEndingTheTreatment field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetReasonForEndingTheTreatmentOk() (string, bool) {
	if o == nil || o.ReasonForEndingTheTreatment == nil {
		var ret string
		return ret, false
	}
	return *o.ReasonForEndingTheTreatment, true
}

// HasReasonForEndingTheTreatment returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasReasonForEndingTheTreatment() bool {
	if o != nil && o.ReasonForEndingTheTreatment != nil {
		return true
	}

	return false
}

// SetReasonForEndingTheTreatment gets a reference to the given string and assigns it to the ReasonForEndingTheTreatment field.
func (o *Ga4ghTreatment) SetReasonForEndingTheTreatment(v string) {
	o.ReasonForEndingTheTreatment = &v
}

// GetResponseToTreatment returns the ResponseToTreatment field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetResponseToTreatment() string {
	if o == nil || o.ResponseToTreatment == nil {
		var ret string
		return ret
	}
	return *o.ResponseToTreatment
}

// GetResponseToTreatmentOk returns a tuple with the ResponseToTreatment field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetResponseToTreatmentOk() (string, bool) {
	if o == nil || o.ResponseToTreatment == nil {
		var ret string
		return ret, false
	}
	return *o.ResponseToTreatment, true
}

// HasResponseToTreatment returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasResponseToTreatment() bool {
	if o != nil && o.ResponseToTreatment != nil {
		return true
	}

	return false
}

// SetResponseToTreatment gets a reference to the given string and assigns it to the ResponseToTreatment field.
func (o *Ga4ghTreatment) SetResponseToTreatment(v string) {
	o.ResponseToTreatment = &v
}

// GetResponseCriteriaUsed returns the ResponseCriteriaUsed field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetResponseCriteriaUsed() string {
	if o == nil || o.ResponseCriteriaUsed == nil {
		var ret string
		return ret
	}
	return *o.ResponseCriteriaUsed
}

// GetResponseCriteriaUsedOk returns a tuple with the ResponseCriteriaUsed field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetResponseCriteriaUsedOk() (string, bool) {
	if o == nil || o.ResponseCriteriaUsed == nil {
		var ret string
		return ret, false
	}
	return *o.ResponseCriteriaUsed, true
}

// HasResponseCriteriaUsed returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasResponseCriteriaUsed() bool {
	if o != nil && o.ResponseCriteriaUsed != nil {
		return true
	}

	return false
}

// SetResponseCriteriaUsed gets a reference to the given string and assigns it to the ResponseCriteriaUsed field.
func (o *Ga4ghTreatment) SetResponseCriteriaUsed(v string) {
	o.ResponseCriteriaUsed = &v
}

// GetDateOfRecurrenceOrProgressionAfterThisTreatment returns the DateOfRecurrenceOrProgressionAfterThisTreatment field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetDateOfRecurrenceOrProgressionAfterThisTreatment() string {
	if o == nil || o.DateOfRecurrenceOrProgressionAfterThisTreatment == nil {
		var ret string
		return ret
	}
	return *o.DateOfRecurrenceOrProgressionAfterThisTreatment
}

// GetDateOfRecurrenceOrProgressionAfterThisTreatmentOk returns a tuple with the DateOfRecurrenceOrProgressionAfterThisTreatment field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetDateOfRecurrenceOrProgressionAfterThisTreatmentOk() (string, bool) {
	if o == nil || o.DateOfRecurrenceOrProgressionAfterThisTreatment == nil {
		var ret string
		return ret, false
	}
	return *o.DateOfRecurrenceOrProgressionAfterThisTreatment, true
}

// HasDateOfRecurrenceOrProgressionAfterThisTreatment returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasDateOfRecurrenceOrProgressionAfterThisTreatment() bool {
	if o != nil && o.DateOfRecurrenceOrProgressionAfterThisTreatment != nil {
		return true
	}

	return false
}

// SetDateOfRecurrenceOrProgressionAfterThisTreatment gets a reference to the given string and assigns it to the DateOfRecurrenceOrProgressionAfterThisTreatment field.
func (o *Ga4ghTreatment) SetDateOfRecurrenceOrProgressionAfterThisTreatment(v string) {
	o.DateOfRecurrenceOrProgressionAfterThisTreatment = &v
}

// GetUnexpectedOrUnusualToxicityDuringTreatment returns the UnexpectedOrUnusualToxicityDuringTreatment field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetUnexpectedOrUnusualToxicityDuringTreatment() string {
	if o == nil || o.UnexpectedOrUnusualToxicityDuringTreatment == nil {
		var ret string
		return ret
	}
	return *o.UnexpectedOrUnusualToxicityDuringTreatment
}

// GetUnexpectedOrUnusualToxicityDuringTreatmentOk returns a tuple with the UnexpectedOrUnusualToxicityDuringTreatment field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetUnexpectedOrUnusualToxicityDuringTreatmentOk() (string, bool) {
	if o == nil || o.UnexpectedOrUnusualToxicityDuringTreatment == nil {
		var ret string
		return ret, false
	}
	return *o.UnexpectedOrUnusualToxicityDuringTreatment, true
}

// HasUnexpectedOrUnusualToxicityDuringTreatment returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasUnexpectedOrUnusualToxicityDuringTreatment() bool {
	if o != nil && o.UnexpectedOrUnusualToxicityDuringTreatment != nil {
		return true
	}

	return false
}

// SetUnexpectedOrUnusualToxicityDuringTreatment gets a reference to the given string and assigns it to the UnexpectedOrUnusualToxicityDuringTreatment field.
func (o *Ga4ghTreatment) SetUnexpectedOrUnusualToxicityDuringTreatment(v string) {
	o.UnexpectedOrUnusualToxicityDuringTreatment = &v
}

// GetDiagnosisId returns the DiagnosisId field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetDiagnosisId() string {
	if o == nil || o.DiagnosisId == nil {
		var ret string
		return ret
	}
	return *o.DiagnosisId
}

// GetDiagnosisIdOk returns a tuple with the DiagnosisId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetDiagnosisIdOk() (string, bool) {
	if o == nil || o.DiagnosisId == nil {
		var ret string
		return ret, false
	}
	return *o.DiagnosisId, true
}

// HasDiagnosisId returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasDiagnosisId() bool {
	if o != nil && o.DiagnosisId != nil {
		return true
	}

	return false
}

// SetDiagnosisId gets a reference to the given string and assigns it to the DiagnosisId field.
func (o *Ga4ghTreatment) SetDiagnosisId(v string) {
	o.DiagnosisId = &v
}

// GetTreatmentPlanId returns the TreatmentPlanId field if non-nil, zero value otherwise.
func (o *Ga4ghTreatment) GetTreatmentPlanId() string {
	if o == nil || o.TreatmentPlanId == nil {
		var ret string
		return ret
	}
	return *o.TreatmentPlanId
}

// GetTreatmentPlanIdOk returns a tuple with the TreatmentPlanId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghTreatment) GetTreatmentPlanIdOk() (string, bool) {
	if o == nil || o.TreatmentPlanId == nil {
		var ret string
		return ret, false
	}
	return *o.TreatmentPlanId, true
}

// HasTreatmentPlanId returns a boolean if a field has been set.
func (o *Ga4ghTreatment) HasTreatmentPlanId() bool {
	if o != nil && o.TreatmentPlanId != nil {
		return true
	}

	return false
}

// SetTreatmentPlanId gets a reference to the given string and assigns it to the TreatmentPlanId field.
func (o *Ga4ghTreatment) SetTreatmentPlanId(v string) {
	o.TreatmentPlanId = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o Ga4ghTreatment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DatasetId != nil {
		toSerialize["datasetId"] = o.DatasetId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.PatientId != nil {
		toSerialize["patientId"] = o.PatientId
	}
	if o.CourseNumber != nil {
		toSerialize["courseNumber"] = o.CourseNumber
	}
	if o.TherapeuticModality != nil {
		toSerialize["therapeuticModality"] = o.TherapeuticModality
	}
	if o.TreatmentPlanType != nil {
		toSerialize["treatmentPlanType"] = o.TreatmentPlanType
	}
	if o.TreatmentIntent != nil {
		toSerialize["treatmentIntent"] = o.TreatmentIntent
	}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.StopDate != nil {
		toSerialize["stopDate"] = o.StopDate
	}
	if o.ReasonForEndingTheTreatment != nil {
		toSerialize["reasonForEndingTheTreatment"] = o.ReasonForEndingTheTreatment
	}
	if o.ResponseToTreatment != nil {
		toSerialize["responseToTreatment"] = o.ResponseToTreatment
	}
	if o.ResponseCriteriaUsed != nil {
		toSerialize["responseCriteriaUsed"] = o.ResponseCriteriaUsed
	}
	if o.DateOfRecurrenceOrProgressionAfterThisTreatment != nil {
		toSerialize["dateOfRecurrenceOrProgressionAfterThisTreatment"] = o.DateOfRecurrenceOrProgressionAfterThisTreatment
	}
	if o.UnexpectedOrUnusualToxicityDuringTreatment != nil {
		toSerialize["unexpectedOrUnusualToxicityDuringTreatment"] = o.UnexpectedOrUnusualToxicityDuringTreatment
	}
	if o.DiagnosisId != nil {
		toSerialize["diagnosisId"] = o.DiagnosisId
	}
	if o.TreatmentPlanId != nil {
		toSerialize["treatmentPlanId"] = o.TreatmentPlanId
	}
	return json.Marshal(toSerialize)
}
