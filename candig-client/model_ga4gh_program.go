/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client
import (
	"encoding/json"
)

// A Program describes software used in data processing or analysis.
type Ga4ghProgram struct {
	// The command line used to run this program.
	CommandLine *string `json:"command_line,omitempty"`

	// The user specified ID of the program.
	Id *string `json:"id,omitempty"`

	// The name of the program.
	Name *string `json:"name,omitempty"`

	// The ID of the program run before this one.
	PrevProgramId *string `json:"prev_program_id,omitempty"`

	// The version of the program run.
	Version *string `json:"version,omitempty"`

}

// GetCommandLine returns the CommandLine field if non-nil, zero value otherwise.
func (o *Ga4ghProgram) GetCommandLine() string {
	if o == nil || o.CommandLine == nil {
		var ret string
		return ret
	}
	return *o.CommandLine
}

// GetCommandLineOk returns a tuple with the CommandLine field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghProgram) GetCommandLineOk() (string, bool) {
	if o == nil || o.CommandLine == nil {
		var ret string
		return ret, false
	}
	return *o.CommandLine, true
}

// HasCommandLine returns a boolean if a field has been set.
func (o *Ga4ghProgram) HasCommandLine() bool {
	if o != nil && o.CommandLine != nil {
		return true
	}

	return false
}

// SetCommandLine gets a reference to the given string and assigns it to the CommandLine field.
func (o *Ga4ghProgram) SetCommandLine(v string) {
	o.CommandLine = &v
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *Ga4ghProgram) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghProgram) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Ga4ghProgram) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Ga4ghProgram) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *Ga4ghProgram) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghProgram) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ga4ghProgram) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ga4ghProgram) SetName(v string) {
	o.Name = &v
}

// GetPrevProgramId returns the PrevProgramId field if non-nil, zero value otherwise.
func (o *Ga4ghProgram) GetPrevProgramId() string {
	if o == nil || o.PrevProgramId == nil {
		var ret string
		return ret
	}
	return *o.PrevProgramId
}

// GetPrevProgramIdOk returns a tuple with the PrevProgramId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghProgram) GetPrevProgramIdOk() (string, bool) {
	if o == nil || o.PrevProgramId == nil {
		var ret string
		return ret, false
	}
	return *o.PrevProgramId, true
}

// HasPrevProgramId returns a boolean if a field has been set.
func (o *Ga4ghProgram) HasPrevProgramId() bool {
	if o != nil && o.PrevProgramId != nil {
		return true
	}

	return false
}

// SetPrevProgramId gets a reference to the given string and assigns it to the PrevProgramId field.
func (o *Ga4ghProgram) SetPrevProgramId(v string) {
	o.PrevProgramId = &v
}

// GetVersion returns the Version field if non-nil, zero value otherwise.
func (o *Ga4ghProgram) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghProgram) GetVersionOk() (string, bool) {
	if o == nil || o.Version == nil {
		var ret string
		return ret, false
	}
	return *o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Ga4ghProgram) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Ga4ghProgram) SetVersion(v string) {
	o.Version = &v
}


func (o Ga4ghProgram) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CommandLine != nil {
		toSerialize["command_line"] = o.CommandLine
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PrevProgramId != nil {
		toSerialize["prev_program_id"] = o.PrevProgramId
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}


