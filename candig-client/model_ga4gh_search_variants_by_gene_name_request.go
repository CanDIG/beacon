/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client

import (
	"encoding/json"
)

// Ga4ghSearchVariantsByGeneNameRequest ******************  /variants  ********************* This request maps to the body of `POST /variantsnamebygenesearch` as JSON.
type Ga4ghSearchVariantsByGeneNameRequest struct {
	// The `VariantSet` to search.
	DatasetId *string `json:"datasetId,omitempty"`

	Gene *string `json:"gene,omitempty"`

	// Specifies the maximum number of results to return in a single page. If unspecified, a system default will be used.
	PageSize *int32 `json:"page_size,omitempty"`

	// The continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of `next_page_token` from the previous response.
	PageToken *string `json:"page_token,omitempty"`

	PatientList *[]string `json:"patient_list,omitempty"`

	Start *string `json:"start,omitempty"`

	End *string `json:"end,omitempty"`

	// Reference genome. Used in advanced searchesif the user is requesting variants endpoint.
	ReferenceName *string `json:"reference_name,omitempty"`

	// Only return variant calls which belong to call sets with these IDs. If unspecified, return all variants and no variant call objects.
	CallSetIds *[]string `json:"call_set_ids,omitempty"`
}

// GetDatasetId returns the DatasetId field if non-nil, zero value otherwise.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetDatasetId() string {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret
	}
	return *o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetDatasetIdOk() (string, bool) {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret, false
	}
	return *o.DatasetId, true
}

// HasDatasetId returns a boolean if a field has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) HasDatasetId() bool {
	if o != nil && o.DatasetId != nil {
		return true
	}

	return false
}

// SetDatasetId gets a reference to the given string and assigns it to the DatasetId field.
func (o *Ga4ghSearchVariantsByGeneNameRequest) SetDatasetId(v string) {
	o.DatasetId = &v
}

// GetGene returns the Gene field if non-nil, zero value otherwise.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetGene() string {
	if o == nil || o.Gene == nil {
		var ret string
		return ret
	}
	return *o.Gene
}

// GetGeneOk returns a tuple with the Gene field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetGeneOk() (string, bool) {
	if o == nil || o.Gene == nil {
		var ret string
		return ret, false
	}
	return *o.Gene, true
}

// HasGene returns a boolean if a field has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) HasGene() bool {
	if o != nil && o.Gene != nil {
		return true
	}

	return false
}

// SetGene gets a reference to the given string and assigns it to the Gene field.
func (o *Ga4ghSearchVariantsByGeneNameRequest) SetGene(v string) {
	o.Gene = &v
}

// GetPageSize returns the PageSize field if non-nil, zero value otherwise.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetPageSize() int32 {
	if o == nil || o.PageSize == nil {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetPageSizeOk() (int32, bool) {
	if o == nil || o.PageSize == nil {
		var ret int32
		return ret, false
	}
	return *o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) HasPageSize() bool {
	if o != nil && o.PageSize != nil {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *Ga4ghSearchVariantsByGeneNameRequest) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetPageToken returns the PageToken field if non-nil, zero value otherwise.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetPageToken() string {
	if o == nil || o.PageToken == nil {
		var ret string
		return ret
	}
	return *o.PageToken
}

// GetPageTokenOk returns a tuple with the PageToken field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetPageTokenOk() (string, bool) {
	if o == nil || o.PageToken == nil {
		var ret string
		return ret, false
	}
	return *o.PageToken, true
}

// HasPageToken returns a boolean if a field has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) HasPageToken() bool {
	if o != nil && o.PageToken != nil {
		return true
	}

	return false
}

// SetPageToken gets a reference to the given string and assigns it to the PageToken field.
func (o *Ga4ghSearchVariantsByGeneNameRequest) SetPageToken(v string) {
	o.PageToken = &v
}

// GetPatientList returns the PatientList field if non-nil, zero value otherwise.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetPatientList() []string {
	if o == nil || o.PatientList == nil {
		var ret []string
		return ret
	}
	return *o.PatientList
}

// GetPatientListOk returns a tuple with the PatientList field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetPatientListOk() ([]string, bool) {
	if o == nil || o.PatientList == nil {
		var ret []string
		return ret, false
	}
	return *o.PatientList, true
}

// HasPatientList returns a boolean if a field has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) HasPatientList() bool {
	if o != nil && o.PatientList != nil {
		return true
	}

	return false
}

// SetPatientList gets a reference to the given []string and assigns it to the PatientList field.
func (o *Ga4ghSearchVariantsByGeneNameRequest) SetPatientList(v []string) {
	o.PatientList = &v
}

// GetStart returns the Start field if non-nil, zero value otherwise.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetStart() string {
	if o == nil || o.Start == nil {
		var ret string
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetStartOk() (string, bool) {
	if o == nil || o.Start == nil {
		var ret string
		return ret, false
	}
	return *o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) HasStart() bool {
	if o != nil && o.Start != nil {
		return true
	}

	return false
}

// SetStart gets a reference to the given string and assigns it to the Start field.
func (o *Ga4ghSearchVariantsByGeneNameRequest) SetStart(v string) {
	o.Start = &v
}

// GetEnd returns the End field if non-nil, zero value otherwise.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetEnd() string {
	if o == nil || o.End == nil {
		var ret string
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetEndOk() (string, bool) {
	if o == nil || o.End == nil {
		var ret string
		return ret, false
	}
	return *o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) HasEnd() bool {
	if o != nil && o.End != nil {
		return true
	}

	return false
}

// SetEnd gets a reference to the given string and assigns it to the End field.
func (o *Ga4ghSearchVariantsByGeneNameRequest) SetEnd(v string) {
	o.End = &v
}

// GetReferenceName returns the ReferenceName field if non-nil, zero value otherwise.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetReferenceName() string {
	if o == nil || o.ReferenceName == nil {
		var ret string
		return ret
	}
	return *o.ReferenceName
}

// GetReferenceNameOk returns a tuple with the ReferenceName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetReferenceNameOk() (string, bool) {
	if o == nil || o.ReferenceName == nil {
		var ret string
		return ret, false
	}
	return *o.ReferenceName, true
}

// HasReferenceName returns a boolean if a field has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) HasReferenceName() bool {
	if o != nil && o.ReferenceName != nil {
		return true
	}

	return false
}

// SetReferenceName gets a reference to the given string and assigns it to the ReferenceName field.
func (o *Ga4ghSearchVariantsByGeneNameRequest) SetReferenceName(v string) {
	o.ReferenceName = &v
}

// GetCallSetIds returns the CallSetIds field if non-nil, zero value otherwise.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetCallSetIds() []string {
	if o == nil || o.CallSetIds == nil {
		var ret []string
		return ret
	}
	return *o.CallSetIds
}

// GetCallSetIdsOk returns a tuple with the CallSetIds field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) GetCallSetIdsOk() ([]string, bool) {
	if o == nil || o.CallSetIds == nil {
		var ret []string
		return ret, false
	}
	return *o.CallSetIds, true
}

// HasCallSetIds returns a boolean if a field has been set.
func (o *Ga4ghSearchVariantsByGeneNameRequest) HasCallSetIds() bool {
	if o != nil && o.CallSetIds != nil {
		return true
	}

	return false
}

// SetCallSetIds gets a reference to the given []string and assigns it to the CallSetIds field.
func (o *Ga4ghSearchVariantsByGeneNameRequest) SetCallSetIds(v []string) {
	o.CallSetIds = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o Ga4ghSearchVariantsByGeneNameRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DatasetId != nil {
		toSerialize["datasetId"] = o.DatasetId
	}
	if o.Gene != nil {
		toSerialize["gene"] = o.Gene
	}
	if o.PageSize != nil {
		toSerialize["page_size"] = o.PageSize
	}
	if o.PageToken != nil {
		toSerialize["page_token"] = o.PageToken
	}
	if o.PatientList != nil {
		toSerialize["patient_list"] = o.PatientList
	}
	if o.Start != nil {
		toSerialize["start"] = o.Start
	}
	if o.End != nil {
		toSerialize["end"] = o.End
	}
	if o.ReferenceName != nil {
		toSerialize["reference_name"] = o.ReferenceName
	}
	if o.CallSetIds != nil {
		toSerialize["call_set_ids"] = o.CallSetIds
	}
	return json.Marshal(toSerialize)
}
