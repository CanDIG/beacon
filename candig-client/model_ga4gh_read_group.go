/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client

import (
	"encoding/json"
)

// Ga4ghReadGroup A ReadGroup is a set of reads derived from one physical sequencing process.
type Ga4ghReadGroup struct {
	// The read group ID.
	Id *string `json:"id,omitempty"`

	// The ID of the dataset this read group belongs to.
	DatasetId *string `json:"datasetId,omitempty"`

	// The read group name.
	Name *string `json:"name,omitempty"`

	// The read group description.
	Description *string `json:"description,omitempty"`

	// A name for the sample this read group's data were generated from. This field contains an arbitrary string, typically corresponding to the SM tag in a BAM file.
	SampleName *string `json:"sample_name,omitempty"`

	// The Biosample this read group's data was generated from.
	BiosampleId *string `json:"biosampleId,omitempty"`

	Experiment *Ga4ghExperiment `json:"experiment,omitempty"`

	// The predicted insert size of this read group.
	PredictedInsertSize *int32 `json:"predicted_insert_size,omitempty"`

	// The time at which this read group was created in milliseconds from the epoch.
	Created *string `json:"created,omitempty"`

	// The time at which this read group was last updated in milliseconds from the epoch.
	Updated *string `json:"updated,omitempty"`

	Stats *Ga4ghReadStats `json:"stats,omitempty"`

	// Program can be used to track the provenance of how read data was generated.
	Programs *[]Ga4ghProgram `json:"programs,omitempty"`

	// The ID of the reference set to which the reads in this read group are aligned. Required if there are any read alignments.
	ReferenceSetId *string `json:"reference_set_id,omitempty"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *Ga4ghReadGroup) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReadGroup) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Ga4ghReadGroup) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Ga4ghReadGroup) SetId(v string) {
	o.Id = &v
}

// GetDatasetId returns the DatasetId field if non-nil, zero value otherwise.
func (o *Ga4ghReadGroup) GetDatasetId() string {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret
	}
	return *o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReadGroup) GetDatasetIdOk() (string, bool) {
	if o == nil || o.DatasetId == nil {
		var ret string
		return ret, false
	}
	return *o.DatasetId, true
}

// HasDatasetId returns a boolean if a field has been set.
func (o *Ga4ghReadGroup) HasDatasetId() bool {
	if o != nil && o.DatasetId != nil {
		return true
	}

	return false
}

// SetDatasetId gets a reference to the given string and assigns it to the DatasetId field.
func (o *Ga4ghReadGroup) SetDatasetId(v string) {
	o.DatasetId = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *Ga4ghReadGroup) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReadGroup) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ga4ghReadGroup) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ga4ghReadGroup) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *Ga4ghReadGroup) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReadGroup) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Ga4ghReadGroup) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Ga4ghReadGroup) SetDescription(v string) {
	o.Description = &v
}

// GetSampleName returns the SampleName field if non-nil, zero value otherwise.
func (o *Ga4ghReadGroup) GetSampleName() string {
	if o == nil || o.SampleName == nil {
		var ret string
		return ret
	}
	return *o.SampleName
}

// GetSampleNameOk returns a tuple with the SampleName field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReadGroup) GetSampleNameOk() (string, bool) {
	if o == nil || o.SampleName == nil {
		var ret string
		return ret, false
	}
	return *o.SampleName, true
}

// HasSampleName returns a boolean if a field has been set.
func (o *Ga4ghReadGroup) HasSampleName() bool {
	if o != nil && o.SampleName != nil {
		return true
	}

	return false
}

// SetSampleName gets a reference to the given string and assigns it to the SampleName field.
func (o *Ga4ghReadGroup) SetSampleName(v string) {
	o.SampleName = &v
}

// GetBiosampleId returns the BiosampleId field if non-nil, zero value otherwise.
func (o *Ga4ghReadGroup) GetBiosampleId() string {
	if o == nil || o.BiosampleId == nil {
		var ret string
		return ret
	}
	return *o.BiosampleId
}

// GetBiosampleIdOk returns a tuple with the BiosampleId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReadGroup) GetBiosampleIdOk() (string, bool) {
	if o == nil || o.BiosampleId == nil {
		var ret string
		return ret, false
	}
	return *o.BiosampleId, true
}

// HasBiosampleId returns a boolean if a field has been set.
func (o *Ga4ghReadGroup) HasBiosampleId() bool {
	if o != nil && o.BiosampleId != nil {
		return true
	}

	return false
}

// SetBiosampleId gets a reference to the given string and assigns it to the BiosampleId field.
func (o *Ga4ghReadGroup) SetBiosampleId(v string) {
	o.BiosampleId = &v
}

// GetExperiment returns the Experiment field if non-nil, zero value otherwise.
func (o *Ga4ghReadGroup) GetExperiment() Ga4ghExperiment {
	if o == nil || o.Experiment == nil {
		var ret Ga4ghExperiment
		return ret
	}
	return *o.Experiment
}

// GetExperimentOk returns a tuple with the Experiment field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReadGroup) GetExperimentOk() (Ga4ghExperiment, bool) {
	if o == nil || o.Experiment == nil {
		var ret Ga4ghExperiment
		return ret, false
	}
	return *o.Experiment, true
}

// HasExperiment returns a boolean if a field has been set.
func (o *Ga4ghReadGroup) HasExperiment() bool {
	if o != nil && o.Experiment != nil {
		return true
	}

	return false
}

// SetExperiment gets a reference to the given Ga4ghExperiment and assigns it to the Experiment field.
func (o *Ga4ghReadGroup) SetExperiment(v Ga4ghExperiment) {
	o.Experiment = &v
}

// GetPredictedInsertSize returns the PredictedInsertSize field if non-nil, zero value otherwise.
func (o *Ga4ghReadGroup) GetPredictedInsertSize() int32 {
	if o == nil || o.PredictedInsertSize == nil {
		var ret int32
		return ret
	}
	return *o.PredictedInsertSize
}

// GetPredictedInsertSizeOk returns a tuple with the PredictedInsertSize field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReadGroup) GetPredictedInsertSizeOk() (int32, bool) {
	if o == nil || o.PredictedInsertSize == nil {
		var ret int32
		return ret, false
	}
	return *o.PredictedInsertSize, true
}

// HasPredictedInsertSize returns a boolean if a field has been set.
func (o *Ga4ghReadGroup) HasPredictedInsertSize() bool {
	if o != nil && o.PredictedInsertSize != nil {
		return true
	}

	return false
}

// SetPredictedInsertSize gets a reference to the given int32 and assigns it to the PredictedInsertSize field.
func (o *Ga4ghReadGroup) SetPredictedInsertSize(v int32) {
	o.PredictedInsertSize = &v
}

// GetCreated returns the Created field if non-nil, zero value otherwise.
func (o *Ga4ghReadGroup) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReadGroup) GetCreatedOk() (string, bool) {
	if o == nil || o.Created == nil {
		var ret string
		return ret, false
	}
	return *o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Ga4ghReadGroup) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *Ga4ghReadGroup) SetCreated(v string) {
	o.Created = &v
}

// GetUpdated returns the Updated field if non-nil, zero value otherwise.
func (o *Ga4ghReadGroup) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReadGroup) GetUpdatedOk() (string, bool) {
	if o == nil || o.Updated == nil {
		var ret string
		return ret, false
	}
	return *o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *Ga4ghReadGroup) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *Ga4ghReadGroup) SetUpdated(v string) {
	o.Updated = &v
}

// GetStats returns the Stats field if non-nil, zero value otherwise.
func (o *Ga4ghReadGroup) GetStats() Ga4ghReadStats {
	if o == nil || o.Stats == nil {
		var ret Ga4ghReadStats
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReadGroup) GetStatsOk() (Ga4ghReadStats, bool) {
	if o == nil || o.Stats == nil {
		var ret Ga4ghReadStats
		return ret, false
	}
	return *o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *Ga4ghReadGroup) HasStats() bool {
	if o != nil && o.Stats != nil {
		return true
	}

	return false
}

// SetStats gets a reference to the given Ga4ghReadStats and assigns it to the Stats field.
func (o *Ga4ghReadGroup) SetStats(v Ga4ghReadStats) {
	o.Stats = &v
}

// GetPrograms returns the Programs field if non-nil, zero value otherwise.
func (o *Ga4ghReadGroup) GetPrograms() []Ga4ghProgram {
	if o == nil || o.Programs == nil {
		var ret []Ga4ghProgram
		return ret
	}
	return *o.Programs
}

// GetProgramsOk returns a tuple with the Programs field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReadGroup) GetProgramsOk() ([]Ga4ghProgram, bool) {
	if o == nil || o.Programs == nil {
		var ret []Ga4ghProgram
		return ret, false
	}
	return *o.Programs, true
}

// HasPrograms returns a boolean if a field has been set.
func (o *Ga4ghReadGroup) HasPrograms() bool {
	if o != nil && o.Programs != nil {
		return true
	}

	return false
}

// SetPrograms gets a reference to the given []Ga4ghProgram and assigns it to the Programs field.
func (o *Ga4ghReadGroup) SetPrograms(v []Ga4ghProgram) {
	o.Programs = &v
}

// GetReferenceSetId returns the ReferenceSetId field if non-nil, zero value otherwise.
func (o *Ga4ghReadGroup) GetReferenceSetId() string {
	if o == nil || o.ReferenceSetId == nil {
		var ret string
		return ret
	}
	return *o.ReferenceSetId
}

// GetReferenceSetIdOk returns a tuple with the ReferenceSetId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReadGroup) GetReferenceSetIdOk() (string, bool) {
	if o == nil || o.ReferenceSetId == nil {
		var ret string
		return ret, false
	}
	return *o.ReferenceSetId, true
}

// HasReferenceSetId returns a boolean if a field has been set.
func (o *Ga4ghReadGroup) HasReferenceSetId() bool {
	if o != nil && o.ReferenceSetId != nil {
		return true
	}

	return false
}

// SetReferenceSetId gets a reference to the given string and assigns it to the ReferenceSetId field.
func (o *Ga4ghReadGroup) SetReferenceSetId(v string) {
	o.ReferenceSetId = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o Ga4ghReadGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DatasetId != nil {
		toSerialize["datasetId"] = o.DatasetId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.SampleName != nil {
		toSerialize["sample_name"] = o.SampleName
	}
	if o.BiosampleId != nil {
		toSerialize["biosampleId"] = o.BiosampleId
	}
	if o.Experiment != nil {
		toSerialize["experiment"] = o.Experiment
	}
	if o.PredictedInsertSize != nil {
		toSerialize["predicted_insert_size"] = o.PredictedInsertSize
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.Stats != nil {
		toSerialize["stats"] = o.Stats
	}
	if o.Programs != nil {
		toSerialize["programs"] = o.Programs
	}
	if o.ReferenceSetId != nil {
		toSerialize["reference_set_id"] = o.ReferenceSetId
	}
	return json.Marshal(toSerialize)
}
