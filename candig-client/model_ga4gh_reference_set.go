/*
 * CanDIG Services
 *
 * Below is a list of APIs that CanDIG currently supports.<br/><br/>For /search and /count endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/search_count_services_usage.pdf) for instructions and sample queries.<br/>For all metadata and variant services endpoints, refer to [this documentation](https://www.distributedgenomics.ca/static/metadata_variants_services_sample_queries.pdf) for sample queries.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client

import (
	"encoding/json"
)

// Ga4ghReferenceSet A `ReferenceSet` is a set of `Reference` s which typically comprise a reference assembly, such as `GRCh38`. A `ReferenceSet` defines a common coordinate space for comparing reference-aligned experimental data.
type Ga4ghReferenceSet struct {
	// The reference set ID. Unique in the repository.
	Id *string `json:"id,omitempty"`

	// The reference set name.
	Name *string `json:"name,omitempty"`

	// Order-independent MD5 checksum which identifies this `ReferenceSet`.  To compute this checksum, make a list of `Reference.md5checksum` for all `Reference` s in this set. Then sort that list, and take the MD5 hash of all the strings concatenated together. Express the hash as a lower-case hexadecimal string.
	Md5checksum *string `json:"md5checksum,omitempty"`

	Species *Ga4ghOntologyTerm `json:"species,omitempty"`

	// Optional free text description of this reference set.
	Description *string `json:"description,omitempty"`

	// The remaining information is about the source of the sequences Public id of this reference set, such as `GRCh37`.
	AssemblyId *string `json:"assembly_id,omitempty"`

	// Specifies a FASTA format file/string.
	SourceUri *string `json:"source_uri,omitempty"`

	// All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally with a version number, e.g. `NC_000001.11`.
	SourceAccessions *[]string `json:"source_accessions,omitempty"`

	// A reference set may be derived from a source if it contains additional sequences, or some of the sequences within it are derived (see the definition of `isDerived` in `Reference`).
	IsDerived *bool `json:"is_derived,omitempty"`
}

// GetId returns the Id field if non-nil, zero value otherwise.
func (o *Ga4ghReferenceSet) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReferenceSet) GetIdOk() (string, bool) {
	if o == nil || o.Id == nil {
		var ret string
		return ret, false
	}
	return *o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Ga4ghReferenceSet) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Ga4ghReferenceSet) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field if non-nil, zero value otherwise.
func (o *Ga4ghReferenceSet) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReferenceSet) GetNameOk() (string, bool) {
	if o == nil || o.Name == nil {
		var ret string
		return ret, false
	}
	return *o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Ga4ghReferenceSet) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Ga4ghReferenceSet) SetName(v string) {
	o.Name = &v
}

// GetMd5checksum returns the Md5checksum field if non-nil, zero value otherwise.
func (o *Ga4ghReferenceSet) GetMd5checksum() string {
	if o == nil || o.Md5checksum == nil {
		var ret string
		return ret
	}
	return *o.Md5checksum
}

// GetMd5checksumOk returns a tuple with the Md5checksum field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReferenceSet) GetMd5checksumOk() (string, bool) {
	if o == nil || o.Md5checksum == nil {
		var ret string
		return ret, false
	}
	return *o.Md5checksum, true
}

// HasMd5checksum returns a boolean if a field has been set.
func (o *Ga4ghReferenceSet) HasMd5checksum() bool {
	if o != nil && o.Md5checksum != nil {
		return true
	}

	return false
}

// SetMd5checksum gets a reference to the given string and assigns it to the Md5checksum field.
func (o *Ga4ghReferenceSet) SetMd5checksum(v string) {
	o.Md5checksum = &v
}

// GetSpecies returns the Species field if non-nil, zero value otherwise.
func (o *Ga4ghReferenceSet) GetSpecies() Ga4ghOntologyTerm {
	if o == nil || o.Species == nil {
		var ret Ga4ghOntologyTerm
		return ret
	}
	return *o.Species
}

// GetSpeciesOk returns a tuple with the Species field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReferenceSet) GetSpeciesOk() (Ga4ghOntologyTerm, bool) {
	if o == nil || o.Species == nil {
		var ret Ga4ghOntologyTerm
		return ret, false
	}
	return *o.Species, true
}

// HasSpecies returns a boolean if a field has been set.
func (o *Ga4ghReferenceSet) HasSpecies() bool {
	if o != nil && o.Species != nil {
		return true
	}

	return false
}

// SetSpecies gets a reference to the given Ga4ghOntologyTerm and assigns it to the Species field.
func (o *Ga4ghReferenceSet) SetSpecies(v Ga4ghOntologyTerm) {
	o.Species = &v
}

// GetDescription returns the Description field if non-nil, zero value otherwise.
func (o *Ga4ghReferenceSet) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReferenceSet) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Ga4ghReferenceSet) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Ga4ghReferenceSet) SetDescription(v string) {
	o.Description = &v
}

// GetAssemblyId returns the AssemblyId field if non-nil, zero value otherwise.
func (o *Ga4ghReferenceSet) GetAssemblyId() string {
	if o == nil || o.AssemblyId == nil {
		var ret string
		return ret
	}
	return *o.AssemblyId
}

// GetAssemblyIdOk returns a tuple with the AssemblyId field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReferenceSet) GetAssemblyIdOk() (string, bool) {
	if o == nil || o.AssemblyId == nil {
		var ret string
		return ret, false
	}
	return *o.AssemblyId, true
}

// HasAssemblyId returns a boolean if a field has been set.
func (o *Ga4ghReferenceSet) HasAssemblyId() bool {
	if o != nil && o.AssemblyId != nil {
		return true
	}

	return false
}

// SetAssemblyId gets a reference to the given string and assigns it to the AssemblyId field.
func (o *Ga4ghReferenceSet) SetAssemblyId(v string) {
	o.AssemblyId = &v
}

// GetSourceUri returns the SourceUri field if non-nil, zero value otherwise.
func (o *Ga4ghReferenceSet) GetSourceUri() string {
	if o == nil || o.SourceUri == nil {
		var ret string
		return ret
	}
	return *o.SourceUri
}

// GetSourceUriOk returns a tuple with the SourceUri field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReferenceSet) GetSourceUriOk() (string, bool) {
	if o == nil || o.SourceUri == nil {
		var ret string
		return ret, false
	}
	return *o.SourceUri, true
}

// HasSourceUri returns a boolean if a field has been set.
func (o *Ga4ghReferenceSet) HasSourceUri() bool {
	if o != nil && o.SourceUri != nil {
		return true
	}

	return false
}

// SetSourceUri gets a reference to the given string and assigns it to the SourceUri field.
func (o *Ga4ghReferenceSet) SetSourceUri(v string) {
	o.SourceUri = &v
}

// GetSourceAccessions returns the SourceAccessions field if non-nil, zero value otherwise.
func (o *Ga4ghReferenceSet) GetSourceAccessions() []string {
	if o == nil || o.SourceAccessions == nil {
		var ret []string
		return ret
	}
	return *o.SourceAccessions
}

// GetSourceAccessionsOk returns a tuple with the SourceAccessions field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReferenceSet) GetSourceAccessionsOk() ([]string, bool) {
	if o == nil || o.SourceAccessions == nil {
		var ret []string
		return ret, false
	}
	return *o.SourceAccessions, true
}

// HasSourceAccessions returns a boolean if a field has been set.
func (o *Ga4ghReferenceSet) HasSourceAccessions() bool {
	if o != nil && o.SourceAccessions != nil {
		return true
	}

	return false
}

// SetSourceAccessions gets a reference to the given []string and assigns it to the SourceAccessions field.
func (o *Ga4ghReferenceSet) SetSourceAccessions(v []string) {
	o.SourceAccessions = &v
}

// GetIsDerived returns the IsDerived field if non-nil, zero value otherwise.
func (o *Ga4ghReferenceSet) GetIsDerived() bool {
	if o == nil || o.IsDerived == nil {
		var ret bool
		return ret
	}
	return *o.IsDerived
}

// GetIsDerivedOk returns a tuple with the IsDerived field if it's non-nil, zero value otherwise
// and a boolean to check if the value has been set.
func (o *Ga4ghReferenceSet) GetIsDerivedOk() (bool, bool) {
	if o == nil || o.IsDerived == nil {
		var ret bool
		return ret, false
	}
	return *o.IsDerived, true
}

// HasIsDerived returns a boolean if a field has been set.
func (o *Ga4ghReferenceSet) HasIsDerived() bool {
	if o != nil && o.IsDerived != nil {
		return true
	}

	return false
}

// SetIsDerived gets a reference to the given bool and assigns it to the IsDerived field.
func (o *Ga4ghReferenceSet) SetIsDerived(v bool) {
	o.IsDerived = &v
}

// MarshalJSON returns the JSON representation of the model.
func (o Ga4ghReferenceSet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Md5checksum != nil {
		toSerialize["md5checksum"] = o.Md5checksum
	}
	if o.Species != nil {
		toSerialize["species"] = o.Species
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.AssemblyId != nil {
		toSerialize["assembly_id"] = o.AssemblyId
	}
	if o.SourceUri != nil {
		toSerialize["source_uri"] = o.SourceUri
	}
	if o.SourceAccessions != nil {
		toSerialize["source_accessions"] = o.SourceAccessions
	}
	if o.IsDerived != nil {
		toSerialize["is_derived"] = o.IsDerived
	}
	return json.Marshal(toSerialize)
}
