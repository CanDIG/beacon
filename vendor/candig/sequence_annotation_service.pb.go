// Code generated by protoc-gen-go. DO NOT EDIT.
// source: candig/sequence_annotation_service.proto

package candig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google/api"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//* This request maps to the body of `POST /featuresets/search` as JSON.
type SearchFeatureSetsRequest struct {
	// The `Dataset` to search.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `next_page_token` from the previous response.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchFeatureSetsRequest) Reset()         { *m = SearchFeatureSetsRequest{} }
func (m *SearchFeatureSetsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchFeatureSetsRequest) ProtoMessage()    {}
func (*SearchFeatureSetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da69689ee97f9e97, []int{0}
}

func (m *SearchFeatureSetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchFeatureSetsRequest.Unmarshal(m, b)
}
func (m *SearchFeatureSetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchFeatureSetsRequest.Marshal(b, m, deterministic)
}
func (m *SearchFeatureSetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchFeatureSetsRequest.Merge(m, src)
}
func (m *SearchFeatureSetsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchFeatureSetsRequest.Size(m)
}
func (m *SearchFeatureSetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchFeatureSetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchFeatureSetsRequest proto.InternalMessageInfo

func (m *SearchFeatureSetsRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchFeatureSetsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchFeatureSetsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This is the response from `POST /featuresets/search` expressed as JSON.
type SearchFeatureSetsResponse struct {
	// The list of matching feature sets.
	FeatureSets []*FeatureSet `protobuf:"bytes,1,rep,name=feature_sets,json=featureSets,proto3" json:"feature_sets,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchFeatureSetsResponse) Reset()         { *m = SearchFeatureSetsResponse{} }
func (m *SearchFeatureSetsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchFeatureSetsResponse) ProtoMessage()    {}
func (*SearchFeatureSetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_da69689ee97f9e97, []int{1}
}

func (m *SearchFeatureSetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchFeatureSetsResponse.Unmarshal(m, b)
}
func (m *SearchFeatureSetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchFeatureSetsResponse.Marshal(b, m, deterministic)
}
func (m *SearchFeatureSetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchFeatureSetsResponse.Merge(m, src)
}
func (m *SearchFeatureSetsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchFeatureSetsResponse.Size(m)
}
func (m *SearchFeatureSetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchFeatureSetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchFeatureSetsResponse proto.InternalMessageInfo

func (m *SearchFeatureSetsResponse) GetFeatureSets() []*FeatureSet {
	if m != nil {
		return m.FeatureSets
	}
	return nil
}

func (m *SearchFeatureSetsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// This request maps to the URL `GET /featuresets/{id}`.
type GetFeatureSetRequest struct {
	// The ID of the `FeatureSet` to be retrieved.
	FeatureSetId         string   `protobuf:"bytes,1,opt,name=feature_set_id,json=featureSetId,proto3" json:"feature_set_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFeatureSetRequest) Reset()         { *m = GetFeatureSetRequest{} }
func (m *GetFeatureSetRequest) String() string { return proto.CompactTextString(m) }
func (*GetFeatureSetRequest) ProtoMessage()    {}
func (*GetFeatureSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da69689ee97f9e97, []int{2}
}

func (m *GetFeatureSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFeatureSetRequest.Unmarshal(m, b)
}
func (m *GetFeatureSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFeatureSetRequest.Marshal(b, m, deterministic)
}
func (m *GetFeatureSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFeatureSetRequest.Merge(m, src)
}
func (m *GetFeatureSetRequest) XXX_Size() int {
	return xxx_messageInfo_GetFeatureSetRequest.Size(m)
}
func (m *GetFeatureSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFeatureSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFeatureSetRequest proto.InternalMessageInfo

func (m *GetFeatureSetRequest) GetFeatureSetId() string {
	if m != nil {
		return m.FeatureSetId
	}
	return ""
}

// This request maps to the body of `POST /features/search` as JSON.
type SearchFeaturesRequest struct {
	// The annotation set to search within. Either `feature_set_id` or
	// `parent_id` must be non-empty.
	FeatureSetId string `protobuf:"bytes,1,opt,name=feature_set_id,json=featureSetId,proto3" json:"feature_set_id,omitempty"`
	// Only returns features with this name (case-sensitive, exact match).
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Only return features with matching the provided gene symbol
	// (case-sensitive, exact match).
	// This field may be replaced with a more generic representation
	// in a future version.
	GeneSymbol string `protobuf:"bytes,3,opt,name=gene_symbol,json=geneSymbol,proto3" json:"gene_symbol,omitempty"`
	// Restricts the search to direct children of the given parent `feature`
	// ID. Either `feature_set_id` or `parent_id` must be non-empty.
	ParentId string `protobuf:"bytes,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Only return features on the reference with this name
	// (matched to literal reference name as imported from the GFF3).
	ReferenceName string `protobuf:"bytes,5,opt,name=reference_name,json=referenceName,proto3" json:"reference_name,omitempty"`
	// Required, if name or symbol not provided.
	// The beginning of the window (0-based, inclusive) for which
	// overlapping features should be returned.  Genomic positions are
	// non-negative integers less than reference length.  Requests spanning the
	// join of circular genomes are represented as two requests one on each side
	// of the join (position 0).
	Start int64 `protobuf:"varint,6,opt,name=start,proto3" json:"start,omitempty"`
	// Required, if name or symbol not provided.
	// The end of the window (0-based, exclusive) for which overlapping
	// features should be returned.
	End int64 `protobuf:"varint,7,opt,name=end,proto3" json:"end,omitempty"`
	// TODO: To be replaced with a fully featured ontology search
	// once the Metadata definitions are rounded out.
	// If specified, this query matches only annotations whose `feature_type`
	// matches one of the provided ontology terms.
	FeatureTypes []string `protobuf:"bytes,8,rep,name=feature_types,json=featureTypes,proto3" json:"feature_types,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,9,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `next_page_token` from the previous response.
	PageToken            string   `protobuf:"bytes,10,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchFeaturesRequest) Reset()         { *m = SearchFeaturesRequest{} }
func (m *SearchFeaturesRequest) String() string { return proto.CompactTextString(m) }
func (*SearchFeaturesRequest) ProtoMessage()    {}
func (*SearchFeaturesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da69689ee97f9e97, []int{3}
}

func (m *SearchFeaturesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchFeaturesRequest.Unmarshal(m, b)
}
func (m *SearchFeaturesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchFeaturesRequest.Marshal(b, m, deterministic)
}
func (m *SearchFeaturesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchFeaturesRequest.Merge(m, src)
}
func (m *SearchFeaturesRequest) XXX_Size() int {
	return xxx_messageInfo_SearchFeaturesRequest.Size(m)
}
func (m *SearchFeaturesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchFeaturesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchFeaturesRequest proto.InternalMessageInfo

func (m *SearchFeaturesRequest) GetFeatureSetId() string {
	if m != nil {
		return m.FeatureSetId
	}
	return ""
}

func (m *SearchFeaturesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchFeaturesRequest) GetGeneSymbol() string {
	if m != nil {
		return m.GeneSymbol
	}
	return ""
}

func (m *SearchFeaturesRequest) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *SearchFeaturesRequest) GetReferenceName() string {
	if m != nil {
		return m.ReferenceName
	}
	return ""
}

func (m *SearchFeaturesRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *SearchFeaturesRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *SearchFeaturesRequest) GetFeatureTypes() []string {
	if m != nil {
		return m.FeatureTypes
	}
	return nil
}

func (m *SearchFeaturesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchFeaturesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This is the response from `POST /features/search` expressed as JSON.
type SearchFeaturesResponse struct {
	// The list of matching annotations, sorted by start position. Annotations
	// which share a start position are returned in a deterministic order.
	Features []*Feature `protobuf:"bytes,1,rep,name=features,proto3" json:"features,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchFeaturesResponse) Reset()         { *m = SearchFeaturesResponse{} }
func (m *SearchFeaturesResponse) String() string { return proto.CompactTextString(m) }
func (*SearchFeaturesResponse) ProtoMessage()    {}
func (*SearchFeaturesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_da69689ee97f9e97, []int{4}
}

func (m *SearchFeaturesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchFeaturesResponse.Unmarshal(m, b)
}
func (m *SearchFeaturesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchFeaturesResponse.Marshal(b, m, deterministic)
}
func (m *SearchFeaturesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchFeaturesResponse.Merge(m, src)
}
func (m *SearchFeaturesResponse) XXX_Size() int {
	return xxx_messageInfo_SearchFeaturesResponse.Size(m)
}
func (m *SearchFeaturesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchFeaturesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchFeaturesResponse proto.InternalMessageInfo

func (m *SearchFeaturesResponse) GetFeatures() []*Feature {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *SearchFeaturesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// This request maps to the URL `GET /features/{id}`.
type GetFeatureRequest struct {
	// The ID of the `Feature` to be retrieved.
	FeatureId            string   `protobuf:"bytes,1,opt,name=feature_id,json=featureId,proto3" json:"feature_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFeatureRequest) Reset()         { *m = GetFeatureRequest{} }
func (m *GetFeatureRequest) String() string { return proto.CompactTextString(m) }
func (*GetFeatureRequest) ProtoMessage()    {}
func (*GetFeatureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da69689ee97f9e97, []int{5}
}

func (m *GetFeatureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFeatureRequest.Unmarshal(m, b)
}
func (m *GetFeatureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFeatureRequest.Marshal(b, m, deterministic)
}
func (m *GetFeatureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFeatureRequest.Merge(m, src)
}
func (m *GetFeatureRequest) XXX_Size() int {
	return xxx_messageInfo_GetFeatureRequest.Size(m)
}
func (m *GetFeatureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFeatureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFeatureRequest proto.InternalMessageInfo

func (m *GetFeatureRequest) GetFeatureId() string {
	if m != nil {
		return m.FeatureId
	}
	return ""
}

//* This request maps to the body of `POST /continuoussets/search` as JSON.
type SearchContinuousSetsRequest struct {
	// The `Dataset` to search.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `next_page_token` from the previous response.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchContinuousSetsRequest) Reset()         { *m = SearchContinuousSetsRequest{} }
func (m *SearchContinuousSetsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchContinuousSetsRequest) ProtoMessage()    {}
func (*SearchContinuousSetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da69689ee97f9e97, []int{6}
}

func (m *SearchContinuousSetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchContinuousSetsRequest.Unmarshal(m, b)
}
func (m *SearchContinuousSetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchContinuousSetsRequest.Marshal(b, m, deterministic)
}
func (m *SearchContinuousSetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchContinuousSetsRequest.Merge(m, src)
}
func (m *SearchContinuousSetsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchContinuousSetsRequest.Size(m)
}
func (m *SearchContinuousSetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchContinuousSetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchContinuousSetsRequest proto.InternalMessageInfo

func (m *SearchContinuousSetsRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchContinuousSetsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchContinuousSetsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This is the response from `POST /continuoussets/search` expressed as JSON.
type SearchContinuousSetsResponse struct {
	// The list of matching feature sets.
	ContinuousSets []*ContinuousSet `protobuf:"bytes,1,rep,name=continuous_sets,json=continuousSets,proto3" json:"continuous_sets,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchContinuousSetsResponse) Reset()         { *m = SearchContinuousSetsResponse{} }
func (m *SearchContinuousSetsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchContinuousSetsResponse) ProtoMessage()    {}
func (*SearchContinuousSetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_da69689ee97f9e97, []int{7}
}

func (m *SearchContinuousSetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchContinuousSetsResponse.Unmarshal(m, b)
}
func (m *SearchContinuousSetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchContinuousSetsResponse.Marshal(b, m, deterministic)
}
func (m *SearchContinuousSetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchContinuousSetsResponse.Merge(m, src)
}
func (m *SearchContinuousSetsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchContinuousSetsResponse.Size(m)
}
func (m *SearchContinuousSetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchContinuousSetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchContinuousSetsResponse proto.InternalMessageInfo

func (m *SearchContinuousSetsResponse) GetContinuousSets() []*ContinuousSet {
	if m != nil {
		return m.ContinuousSets
	}
	return nil
}

func (m *SearchContinuousSetsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// This request maps to the URL `GET /continuoussets/{id}`.
type GetContinuousSetRequest struct {
	// The ID of the `ContinuousSet` to be retrieved.
	ContinuousSetId      string   `protobuf:"bytes,1,opt,name=continuous_set_id,json=continuousSetId,proto3" json:"continuous_set_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContinuousSetRequest) Reset()         { *m = GetContinuousSetRequest{} }
func (m *GetContinuousSetRequest) String() string { return proto.CompactTextString(m) }
func (*GetContinuousSetRequest) ProtoMessage()    {}
func (*GetContinuousSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da69689ee97f9e97, []int{8}
}

func (m *GetContinuousSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContinuousSetRequest.Unmarshal(m, b)
}
func (m *GetContinuousSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContinuousSetRequest.Marshal(b, m, deterministic)
}
func (m *GetContinuousSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContinuousSetRequest.Merge(m, src)
}
func (m *GetContinuousSetRequest) XXX_Size() int {
	return xxx_messageInfo_GetContinuousSetRequest.Size(m)
}
func (m *GetContinuousSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContinuousSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetContinuousSetRequest proto.InternalMessageInfo

func (m *GetContinuousSetRequest) GetContinuousSetId() string {
	if m != nil {
		return m.ContinuousSetId
	}
	return ""
}

// This request maps to the body of `POST /continuous/search` as JSON.
type SearchContinuousRequest struct {
	// The annotation set to search within. Required value.
	ContinuousSetId string `protobuf:"bytes,1,opt,name=continuous_set_id,json=continuousSetId,proto3" json:"continuous_set_id,omitempty"`
	// Get continuous values on this reference. Required value.
	ReferenceName string `protobuf:"bytes,2,opt,name=reference_name,json=referenceName,proto3" json:"reference_name,omitempty"`
	// The beginning of the window (0-based, inclusive) for which
	// continuous values should be returned.
	// Required value.
	Start int64 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	// The end of the window (0-based, exclusive) for which continuous
	// values should be returned.
	// Required value.
	End int64 `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `next_page_token` from the previous response.
	PageToken            string   `protobuf:"bytes,6,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchContinuousRequest) Reset()         { *m = SearchContinuousRequest{} }
func (m *SearchContinuousRequest) String() string { return proto.CompactTextString(m) }
func (*SearchContinuousRequest) ProtoMessage()    {}
func (*SearchContinuousRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da69689ee97f9e97, []int{9}
}

func (m *SearchContinuousRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchContinuousRequest.Unmarshal(m, b)
}
func (m *SearchContinuousRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchContinuousRequest.Marshal(b, m, deterministic)
}
func (m *SearchContinuousRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchContinuousRequest.Merge(m, src)
}
func (m *SearchContinuousRequest) XXX_Size() int {
	return xxx_messageInfo_SearchContinuousRequest.Size(m)
}
func (m *SearchContinuousRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchContinuousRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchContinuousRequest proto.InternalMessageInfo

func (m *SearchContinuousRequest) GetContinuousSetId() string {
	if m != nil {
		return m.ContinuousSetId
	}
	return ""
}

func (m *SearchContinuousRequest) GetReferenceName() string {
	if m != nil {
		return m.ReferenceName
	}
	return ""
}

func (m *SearchContinuousRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *SearchContinuousRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *SearchContinuousRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchContinuousRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This is the response from `POST /continuous/search` expressed as JSON.
type SearchContinuousResponse struct {
	// The list of matching continuous values, sorted by start position.
	// All sampled values within the query range are returned.
	// Unsampled values are assigned 'NaN' value. The values returned
	// do not necessarily cover the same range as the query as all
	// unsampled values might not be returned or if the query range extends
	// beyond the reference range.
	Continuous []*Continuous `protobuf:"bytes,1,rep,name=continuous,proto3" json:"continuous,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchContinuousResponse) Reset()         { *m = SearchContinuousResponse{} }
func (m *SearchContinuousResponse) String() string { return proto.CompactTextString(m) }
func (*SearchContinuousResponse) ProtoMessage()    {}
func (*SearchContinuousResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_da69689ee97f9e97, []int{10}
}

func (m *SearchContinuousResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchContinuousResponse.Unmarshal(m, b)
}
func (m *SearchContinuousResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchContinuousResponse.Marshal(b, m, deterministic)
}
func (m *SearchContinuousResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchContinuousResponse.Merge(m, src)
}
func (m *SearchContinuousResponse) XXX_Size() int {
	return xxx_messageInfo_SearchContinuousResponse.Size(m)
}
func (m *SearchContinuousResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchContinuousResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchContinuousResponse proto.InternalMessageInfo

func (m *SearchContinuousResponse) GetContinuous() []*Continuous {
	if m != nil {
		return m.Continuous
	}
	return nil
}

func (m *SearchContinuousResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func init() {
	proto.RegisterType((*SearchFeatureSetsRequest)(nil), "candig.SearchFeatureSetsRequest")
	proto.RegisterType((*SearchFeatureSetsResponse)(nil), "candig.SearchFeatureSetsResponse")
	proto.RegisterType((*GetFeatureSetRequest)(nil), "candig.GetFeatureSetRequest")
	proto.RegisterType((*SearchFeaturesRequest)(nil), "candig.SearchFeaturesRequest")
	proto.RegisterType((*SearchFeaturesResponse)(nil), "candig.SearchFeaturesResponse")
	proto.RegisterType((*GetFeatureRequest)(nil), "candig.GetFeatureRequest")
	proto.RegisterType((*SearchContinuousSetsRequest)(nil), "candig.SearchContinuousSetsRequest")
	proto.RegisterType((*SearchContinuousSetsResponse)(nil), "candig.SearchContinuousSetsResponse")
	proto.RegisterType((*GetContinuousSetRequest)(nil), "candig.GetContinuousSetRequest")
	proto.RegisterType((*SearchContinuousRequest)(nil), "candig.SearchContinuousRequest")
	proto.RegisterType((*SearchContinuousResponse)(nil), "candig.SearchContinuousResponse")
}

func init() {
	proto.RegisterFile("candig/sequence_annotation_service.proto", fileDescriptor_da69689ee97f9e97)
}

var fileDescriptor_da69689ee97f9e97 = []byte{
	// 796 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcd, 0x4e, 0xdb, 0x4a,
	0x14, 0x96, 0x13, 0x92, 0x9b, 0x1c, 0x20, 0x81, 0x11, 0x5c, 0x8c, 0x09, 0x37, 0xc6, 0x04, 0x14,
	0x71, 0x51, 0x82, 0x72, 0x6f, 0x2b, 0x54, 0x55, 0x95, 0xaa, 0xaa, 0x45, 0xd9, 0x54, 0x95, 0xc3,
	0xde, 0x32, 0xf1, 0x21, 0xb5, 0x0a, 0x76, 0xea, 0x99, 0x20, 0x7e, 0x14, 0xb5, 0xea, 0xa2, 0xbb,
	0xae, 0xfa, 0x40, 0x7d, 0x85, 0x4a, 0x7d, 0x85, 0xbe, 0x42, 0xf7, 0x95, 0xc7, 0x76, 0xc6, 0x76,
	0x9c, 0x88, 0x76, 0xd1, 0x9d, 0x39, 0x73, 0xce, 0xf9, 0xce, 0x77, 0xbe, 0x99, 0x8f, 0x40, 0xb3,
	0x6f, 0x3a, 0x96, 0x3d, 0x68, 0x53, 0x7c, 0x3b, 0x42, 0xa7, 0x8f, 0x86, 0xe9, 0x38, 0x2e, 0x33,
	0x99, 0xed, 0x3a, 0x06, 0x45, 0xef, 0xca, 0xee, 0x63, 0x6b, 0xe8, 0xb9, 0xcc, 0x25, 0xc5, 0x20,
	0x53, 0xd9, 0x99, 0x5d, 0x41, 0x83, 0x54, 0xa5, 0x36, 0x70, 0xdd, 0xc1, 0x05, 0xb6, 0xcd, 0xa1,
	0xdd, 0x9e, 0x3a, 0xd5, 0x46, 0x20, 0xf7, 0xd0, 0xf4, 0xfa, 0xaf, 0x5f, 0xa0, 0xc9, 0x46, 0x1e,
	0xf6, 0x90, 0x51, 0xdd, 0x6f, 0x46, 0x19, 0xd9, 0x06, 0xb0, 0x4c, 0x66, 0x52, 0x64, 0x86, 0x6d,
	0xc9, 0x92, 0x2a, 0x35, 0xcb, 0x7a, 0x39, 0x8c, 0x74, 0x2d, 0xb2, 0x05, 0xe5, 0xa1, 0x39, 0x40,
	0x83, 0xda, 0xb7, 0x28, 0xe7, 0x54, 0xa9, 0x59, 0xd0, 0x4b, 0x7e, 0xa0, 0x67, 0xdf, 0xa2, 0x5f,
	0xcb, 0x0f, 0x99, 0xfb, 0x06, 0x1d, 0x39, 0x1f, 0xd4, 0xfa, 0x91, 0x53, 0x3f, 0xa0, 0xdd, 0xc2,
	0x66, 0x06, 0x2c, 0x1d, 0xba, 0x0e, 0x45, 0xf2, 0x00, 0x96, 0xce, 0x83, 0xb0, 0x41, 0x91, 0x51,
	0x59, 0x52, 0xf3, 0xcd, 0xc5, 0x0e, 0x69, 0x05, 0x5c, 0x5b, 0xa2, 0x44, 0x5f, 0x3c, 0x17, 0xe5,
	0x64, 0x1f, 0xaa, 0x0e, 0x5e, 0x33, 0x23, 0x86, 0x9b, 0xe3, 0xb8, 0xcb, 0x7e, 0xf8, 0xd5, 0x04,
	0xfb, 0x31, 0xac, 0x9d, 0x20, 0x8b, 0x75, 0x09, 0xe9, 0x36, 0xa0, 0x12, 0x83, 0x15, 0x94, 0x97,
	0x04, 0x48, 0xd7, 0xd2, 0xbe, 0xe4, 0x60, 0x3d, 0x31, 0x3a, 0xfd, 0xa5, 0x7a, 0x42, 0x60, 0xc1,
	0x31, 0x2f, 0x31, 0x1c, 0x8d, 0x7f, 0x93, 0x3a, 0x2c, 0x0e, 0xd0, 0x41, 0x83, 0xde, 0x5c, 0x9e,
	0xb9, 0x17, 0xe1, 0xb6, 0xc0, 0x0f, 0xf5, 0x78, 0x24, 0x58, 0xb5, 0x87, 0x0e, 0xef, 0xba, 0xc0,
	0x8f, 0x4b, 0x41, 0xa0, 0x6b, 0x91, 0x3d, 0xa8, 0x78, 0x78, 0x8e, 0x1e, 0xd7, 0x9f, 0xf7, 0x2e,
	0x04, 0xb4, 0x27, 0xd1, 0x97, 0x3e, 0xc8, 0x1a, 0x14, 0x28, 0x33, 0x3d, 0x26, 0x17, 0x55, 0xa9,
	0x99, 0xd7, 0x83, 0x3f, 0xc8, 0x0a, 0xe4, 0xd1, 0xb1, 0xe4, 0xbf, 0x78, 0xcc, 0xff, 0x24, 0xbb,
	0xb0, 0x1c, 0xd1, 0x60, 0x37, 0x43, 0xa4, 0x72, 0x49, 0xcd, 0xc7, 0x58, 0x9c, 0xfa, 0xb1, 0xa4,
	0xf6, 0xe5, 0xb9, 0xda, 0x43, 0x5a, 0xfb, 0x4b, 0xf8, 0x3b, 0xbd, 0xc0, 0x50, 0xf8, 0x7f, 0xa1,
	0x14, 0xa2, 0x44, 0xa2, 0x57, 0x53, 0xa2, 0xeb, 0x93, 0x84, 0x7b, 0xcb, 0xdd, 0x81, 0x55, 0x21,
	0x77, 0xec, 0x6a, 0x47, 0x24, 0xc5, 0xd5, 0x0e, 0x23, 0x5d, 0x4b, 0xbb, 0x86, 0xad, 0x60, 0xc4,
	0x67, 0xae, 0xc3, 0x6c, 0x67, 0xe4, 0x8e, 0xe8, 0x1f, 0x7a, 0x18, 0x1f, 0x25, 0xa8, 0x65, 0x43,
	0x87, 0x3b, 0x7a, 0x02, 0xd5, 0xfe, 0xe4, 0x24, 0xfe, 0x3e, 0xd6, 0xa3, 0x55, 0x25, 0x0a, 0xf5,
	0x4a, 0x3f, 0xd1, 0xe7, 0xde, 0x6b, 0x7b, 0x0e, 0x1b, 0x27, 0xc8, 0x92, 0xbd, 0x42, 0xfa, 0x07,
	0xb0, 0x9a, 0x1c, 0x41, 0x6c, 0xa1, 0x9a, 0x40, 0xeb, 0x5a, 0xda, 0x57, 0x09, 0x36, 0xd2, 0x7c,
	0x7e, 0xa3, 0x4f, 0xc6, 0x25, 0xcf, 0xcd, 0xbd, 0xe4, 0xf9, 0x8c, 0x4b, 0xbe, 0x20, 0x2e, 0x79,
	0x42, 0xa2, 0xc2, 0x5c, 0x89, 0x8a, 0x69, 0x89, 0xae, 0x22, 0xcb, 0x8c, 0x33, 0x0a, 0xd5, 0xe9,
	0x00, 0x88, 0xc9, 0xd3, 0xc6, 0x15, 0xcb, 0x8f, 0x65, 0xdd, 0x57, 0x91, 0xce, 0x8f, 0xa2, 0x6f,
	0x9a, 0x81, 0xcf, 0x3f, 0x9d, 0x18, 0x79, 0x2f, 0xf8, 0xbf, 0x40, 0xde, 0xc1, 0xea, 0x94, 0xa3,
	0x12, 0x35, 0x82, 0x9e, 0xe5, 0xf1, 0xca, 0xce, 0x9c, 0x8c, 0x80, 0x93, 0xb6, 0xf7, 0xe1, 0xdb,
	0xf7, 0xcf, 0xb9, 0xba, 0xa6, 0xb4, 0xaf, 0x8e, 0x5a, 0xc7, 0xad, 0xa3, 0x76, 0xf4, 0x04, 0x91,
	0xd1, 0x36, 0xe5, 0x65, 0x8f, 0xa4, 0x03, 0xe2, 0xc2, 0x72, 0xc2, 0x56, 0x49, 0x2d, 0x6a, 0x9d,
	0xe5, 0xb6, 0x4a, 0x86, 0x9d, 0x6b, 0x87, 0x1c, 0x69, 0x9f, 0x34, 0xb2, 0x90, 0xee, 0x92, 0xe6,
	0x3a, 0x26, 0x14, 0x2a, 0x49, 0x1f, 0x21, 0xdb, 0x99, 0x64, 0x26, 0x5c, 0xff, 0x99, 0x75, 0x1c,
	0x12, 0xd5, 0x38, 0x7c, 0x4d, 0xdb, 0x48, 0xc3, 0xc7, 0x58, 0x1a, 0x00, 0x82, 0x0e, 0xd9, 0x9c,
	0xa6, 0x18, 0x81, 0xa5, 0x9d, 0x2b, 0x5a, 0x23, 0xd9, 0x9e, 0xea, 0x7e, 0x27, 0xac, 0x68, 0x4c,
	0x3e, 0x49, 0xb0, 0x96, 0x65, 0x00, 0x64, 0x37, 0x39, 0x7d, 0xa6, 0x33, 0x29, 0x8d, 0xf9, 0x49,
	0x21, 0xd1, 0x03, 0x3e, 0x4a, 0x43, 0xab, 0xfb, 0xa3, 0x3c, 0x6c, 0x1d, 0x99, 0xc7, 0x6d, 0x71,
	0x1f, 0x53, 0xb2, 0xbe, 0x97, 0x60, 0x25, 0x6d, 0x04, 0xa4, 0x1e, 0xe3, 0x9d, 0x65, 0x11, 0x4a,
	0xb6, 0x19, 0x69, 0xff, 0x73, 0xe0, 0x16, 0x39, 0x9c, 0x09, 0x7c, 0x37, 0xe5, 0x08, 0x63, 0x32,
	0x86, 0x95, 0x34, 0x1d, 0x31, 0xc1, 0x0c, 0x73, 0x51, 0xd4, 0xd9, 0x09, 0xe1, 0x16, 0xf6, 0xf9,
	0x30, 0xaa, 0xb6, 0x95, 0x35, 0x8c, 0xd8, 0xc0, 0x59, 0x91, 0xff, 0x52, 0xfa, 0xef, 0x67, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x7f, 0xbc, 0xa0, 0x71, 0x9e, 0x09, 0x00, 0x00,
}
