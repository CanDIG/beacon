// Code generated by protoc-gen-go. DO NOT EDIT.
// source: candig/common.proto

package candig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/struct"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Indicates the associated DNA strand for some data item.
type Strand int32

const (
	// If no strand data is available.
	Strand_STRAND_UNSPECIFIED Strand = 0
	// The negative (-) strand.
	Strand_NEG_STRAND Strand = 1
	// The postive (+) strand.
	Strand_POS_STRAND Strand = 2
)

var Strand_name = map[int32]string{
	0: "STRAND_UNSPECIFIED",
	1: "NEG_STRAND",
	2: "POS_STRAND",
}

var Strand_value = map[string]int32{
	"STRAND_UNSPECIFIED": 0,
	"NEG_STRAND":         1,
	"POS_STRAND":         2,
}

func (x Strand) String() string {
	return proto.EnumName(Strand_name, int32(x))
}

func (Strand) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a1afe84a8c5f528d, []int{0}
}

type NullValue int32

const (
	// Null value.
	NullValue_NULL_VALUE NullValue = 0
)

var NullValue_name = map[int32]string{
	0: "NULL_VALUE",
}

var NullValue_value = map[string]int32{
	"NULL_VALUE": 0,
}

func (x NullValue) String() string {
	return proto.EnumName(NullValue_name, int32(x))
}

func (NullValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a1afe84a8c5f528d, []int{1}
}

// When returning an HTTP error response, a server may also return a JSON formatted GAException
// to better describe the error.
type GAException struct {
	// Numerical error code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// The error message.
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GAException) Reset()         { *m = GAException{} }
func (m *GAException) String() string { return proto.CompactTextString(m) }
func (*GAException) ProtoMessage()    {}
func (*GAException) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1afe84a8c5f528d, []int{0}
}

func (m *GAException) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAException.Unmarshal(m, b)
}
func (m *GAException) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAException.Marshal(b, m, deterministic)
}
func (m *GAException) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAException.Merge(m, src)
}
func (m *GAException) XXX_Size() int {
	return xxx_messageInfo_GAException.Size(m)
}
func (m *GAException) XXX_DiscardUnknown() {
	xxx_messageInfo_GAException.DiscardUnknown(m)
}

var xxx_messageInfo_GAException proto.InternalMessageInfo

func (m *GAException) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *GAException) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Contains a single statement about any field of any of tables
type Filter struct {
	// Name one of the table field on which the filter should be applied
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Relationship between field and value
	Operator string `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	// A level of the field content
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// List of values to be able to provide multiple possibilities
	Values               []string `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1afe84a8c5f528d, []int{1}
}

func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (m *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(m, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Filter) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *Filter) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Filter) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// A `Position` is an unoriented base in some `Reference`. A `Position` is
// represented by a `Reference` name, and a base number on that `Reference`
// (0-based).
type Position struct {
	// The name of the `Reference` on which the `Position` is located.
	ReferenceName string `protobuf:"bytes,1,opt,name=reference_name,json=referenceName,proto3" json:"reference_name,omitempty"`
	// The 0-based offset from the start of the forward strand for that
	// `Reference`. Genomic positions are non-negative integers less than
	// `Reference` length.
	Position int64 `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
	// Strand the position is associated with.
	Strand               Strand   `protobuf:"varint,3,opt,name=strand,proto3,enum=candig.Strand" json:"strand,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1afe84a8c5f528d, []int{2}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetReferenceName() string {
	if m != nil {
		return m.ReferenceName
	}
	return ""
}

func (m *Position) GetPosition() int64 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *Position) GetStrand() Strand {
	if m != nil {
		return m.Strand
	}
	return Strand_STRAND_UNSPECIFIED
}

// Identifier from a public database
type ExternalIdentifier struct {
	// The source of the identifier, e.g. `Ensembl`.
	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	// The ID defined by the external database, e.g. `ENST00000000000`.
	Identifier string `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The version of the object or the database, e.g. `78`.
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalIdentifier) Reset()         { *m = ExternalIdentifier{} }
func (m *ExternalIdentifier) String() string { return proto.CompactTextString(m) }
func (*ExternalIdentifier) ProtoMessage()    {}
func (*ExternalIdentifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1afe84a8c5f528d, []int{3}
}

func (m *ExternalIdentifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalIdentifier.Unmarshal(m, b)
}
func (m *ExternalIdentifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalIdentifier.Marshal(b, m, deterministic)
}
func (m *ExternalIdentifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalIdentifier.Merge(m, src)
}
func (m *ExternalIdentifier) XXX_Size() int {
	return xxx_messageInfo_ExternalIdentifier.Size(m)
}
func (m *ExternalIdentifier) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalIdentifier.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalIdentifier proto.InternalMessageInfo

func (m *ExternalIdentifier) GetDatabase() string {
	if m != nil {
		return m.Database
	}
	return ""
}

func (m *ExternalIdentifier) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *ExternalIdentifier) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// An experimental preparation of a sample.
type Experiment struct {
	// The experiment ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the experiment.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// A description of the experiment.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The time at which this message was created.
	// Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
	MessageCreateTime string `protobuf:"bytes,4,opt,name=message_create_time,json=messageCreateTime,proto3" json:"message_create_time,omitempty"`
	// The time at which this message was last updated.
	// Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
	MessageUpdateTime string `protobuf:"bytes,5,opt,name=message_update_time,json=messageUpdateTime,proto3" json:"message_update_time,omitempty"`
	// The time at which this experiment was performed.
	// Granularity here is variable (e.g. date only).
	// Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
	RunTime string `protobuf:"bytes,6,opt,name=run_time,json=runTime,proto3" json:"run_time,omitempty"`
	// The molecule examined in this experiment. (e.g. genomics DNA, total RNA)
	Molecule string `protobuf:"bytes,7,opt,name=molecule,proto3" json:"molecule,omitempty"`
	// The experiment technique or strategy applied to the sample.
	// (e.g. whole genome sequencing, RNA-seq, RIP-seq)
	Strategy string `protobuf:"bytes,8,opt,name=strategy,proto3" json:"strategy,omitempty"`
	// The method used to enrich the target. (e.g. immunoprecipitation, size
	// fractionation, MNase digestion)
	Selection string `protobuf:"bytes,9,opt,name=selection,proto3" json:"selection,omitempty"`
	// The name of the library used as part of this experiment.
	Library string `protobuf:"bytes,10,opt,name=library,proto3" json:"library,omitempty"`
	// The configuration of sequenced reads. (e.g. Single or Paired).
	LibraryLayout string `protobuf:"bytes,11,opt,name=library_layout,json=libraryLayout,proto3" json:"library_layout,omitempty"`
	// The instrument model used as part of this experiment.
	// This maps to sequencing technology in BAM.
	InstrumentModel string `protobuf:"bytes,12,opt,name=instrument_model,json=instrumentModel,proto3" json:"instrument_model,omitempty"`
	// The data file generated by the instrument.
	// TODO: This isn't actually a file is it?
	// Should this be `instrumentData` instead?
	InstrumentDataFile string `protobuf:"bytes,13,opt,name=instrument_data_file,json=instrumentDataFile,proto3" json:"instrument_data_file,omitempty"`
	// The sequencing center used as part of this experiment.
	SequencingCenter string `protobuf:"bytes,14,opt,name=sequencing_center,json=sequencingCenter,proto3" json:"sequencing_center,omitempty"`
	// The platform unit used as part of this experiment. This is a
	// flowcell-barcode
	// or slide unique identifier.
	PlatformUnit string `protobuf:"bytes,15,opt,name=platform_unit,json=platformUnit,proto3" json:"platform_unit,omitempty"`
	// A map of additional experiment information.
	Attributes *Attributes `protobuf:"bytes,17,opt,name=attributes,proto3" json:"attributes,omitempty"`
	//### ===================================================================== ###
	//# PROFYLE MODIFICATION BEGIN
	//### ===================================================================== ###
	// The ID of the dataset this Experiment belongs to.
	DatasetId string `protobuf:"bytes,18,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Biosample id on which the experiment was done: string
	BiosampleId string `protobuf:"bytes,19,opt,name=biosample_id,json=biosampleId,proto3" json:"biosample_id,omitempty"`
	//dna_library_construction_method: string
	DnaLibraryConstructionMethod string `protobuf:"bytes,20,opt,name=dna_library_construction_method,json=dnaLibraryConstructionMethod,proto3" json:"dna_library_construction_method,omitempty"`
	//wgs_sequencing_completion_date: date (YYYY-MM-DD)
	WgsSequencingCompletionDate string `protobuf:"bytes,21,opt,name=wgs_sequencing_completion_date,json=wgsSequencingCompletionDate,proto3" json:"wgs_sequencing_completion_date,omitempty"`
	//RNA Library Construction Method
	RnaLibraryConstructionMethod string `protobuf:"bytes,22,opt,name=rna_library_construction_method,json=rnaLibraryConstructionMethod,proto3" json:"rna_library_construction_method,omitempty"`
	//wgs_sequencing_completion_date: date (YYYY-MM-DD)
	RnaSequencingCompletionDate string `protobuf:"bytes,23,opt,name=rna_sequencing_completion_date,json=rnaSequencingCompletionDate,proto3" json:"rna_sequencing_completion_date,omitempty"`
	//panel_completion_date: date (YYYY-MM-DD)
	PanelCompletionDate  string   `protobuf:"bytes,24,opt,name=panel_completion_date,json=panelCompletionDate,proto3" json:"panel_completion_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Experiment) Reset()         { *m = Experiment{} }
func (m *Experiment) String() string { return proto.CompactTextString(m) }
func (*Experiment) ProtoMessage()    {}
func (*Experiment) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1afe84a8c5f528d, []int{4}
}

func (m *Experiment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Experiment.Unmarshal(m, b)
}
func (m *Experiment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Experiment.Marshal(b, m, deterministic)
}
func (m *Experiment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Experiment.Merge(m, src)
}
func (m *Experiment) XXX_Size() int {
	return xxx_messageInfo_Experiment.Size(m)
}
func (m *Experiment) XXX_DiscardUnknown() {
	xxx_messageInfo_Experiment.DiscardUnknown(m)
}

var xxx_messageInfo_Experiment proto.InternalMessageInfo

func (m *Experiment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Experiment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Experiment) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Experiment) GetMessageCreateTime() string {
	if m != nil {
		return m.MessageCreateTime
	}
	return ""
}

func (m *Experiment) GetMessageUpdateTime() string {
	if m != nil {
		return m.MessageUpdateTime
	}
	return ""
}

func (m *Experiment) GetRunTime() string {
	if m != nil {
		return m.RunTime
	}
	return ""
}

func (m *Experiment) GetMolecule() string {
	if m != nil {
		return m.Molecule
	}
	return ""
}

func (m *Experiment) GetStrategy() string {
	if m != nil {
		return m.Strategy
	}
	return ""
}

func (m *Experiment) GetSelection() string {
	if m != nil {
		return m.Selection
	}
	return ""
}

func (m *Experiment) GetLibrary() string {
	if m != nil {
		return m.Library
	}
	return ""
}

func (m *Experiment) GetLibraryLayout() string {
	if m != nil {
		return m.LibraryLayout
	}
	return ""
}

func (m *Experiment) GetInstrumentModel() string {
	if m != nil {
		return m.InstrumentModel
	}
	return ""
}

func (m *Experiment) GetInstrumentDataFile() string {
	if m != nil {
		return m.InstrumentDataFile
	}
	return ""
}

func (m *Experiment) GetSequencingCenter() string {
	if m != nil {
		return m.SequencingCenter
	}
	return ""
}

func (m *Experiment) GetPlatformUnit() string {
	if m != nil {
		return m.PlatformUnit
	}
	return ""
}

func (m *Experiment) GetAttributes() *Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Experiment) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *Experiment) GetBiosampleId() string {
	if m != nil {
		return m.BiosampleId
	}
	return ""
}

func (m *Experiment) GetDnaLibraryConstructionMethod() string {
	if m != nil {
		return m.DnaLibraryConstructionMethod
	}
	return ""
}

func (m *Experiment) GetWgsSequencingCompletionDate() string {
	if m != nil {
		return m.WgsSequencingCompletionDate
	}
	return ""
}

func (m *Experiment) GetRnaLibraryConstructionMethod() string {
	if m != nil {
		return m.RnaLibraryConstructionMethod
	}
	return ""
}

func (m *Experiment) GetRnaSequencingCompletionDate() string {
	if m != nil {
		return m.RnaSequencingCompletionDate
	}
	return ""
}

func (m *Experiment) GetPanelCompletionDate() string {
	if m != nil {
		return m.PanelCompletionDate
	}
	return ""
}

// An analysis contains an interpretation of one or several experiments. (e.g.
// SNVs, copy number variations, methylation status) together with information
// about the methodology used.
type Analysis struct {
	// Formats of id | name | description | accessions are described in the
	// documentation on general attributes and formats.
	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The time at which this record was created, in ISO 8601 format.
	Created string `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	// The time at which this record was last updated, in ISO 8601 format.
	Updated string `protobuf:"bytes,5,opt,name=updated,proto3" json:"updated,omitempty"`
	// The type of analysis.
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// The software run to generate this analysis.
	Software []string `protobuf:"bytes,7,rep,name=software,proto3" json:"software,omitempty"`
	// A map of additional analysis information.
	Attributes *Attributes `protobuf:"bytes,9,opt,name=attributes,proto3" json:"attributes,omitempty"`
	//### ===================================================================== ###
	//# PROFYLE MODIFICATION BEGIN
	//### ===================================================================== ###
	// The ID of the dataset this Analysis belongs to.
	DatasetId string `protobuf:"bytes,10,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Experiment id that is corresponding to the analysis: string
	ExperimentId string `protobuf:"bytes,11,opt,name=experiment_id,json=experimentId,proto3" json:"experiment_id,omitempty"`
	//other_analysis_descriptor: string
	OtherAnalysisDescriptor string `protobuf:"bytes,12,opt,name=other_analysis_descriptor,json=otherAnalysisDescriptor,proto3" json:"other_analysis_descriptor,omitempty"`
	//other_analysis_completition_date: date (YYYY-MM-DD)
	OtherAnalysisCompletitionDate string   `protobuf:"bytes,13,opt,name=other_analysis_completition_date,json=otherAnalysisCompletitionDate,proto3" json:"other_analysis_completition_date,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *Analysis) Reset()         { *m = Analysis{} }
func (m *Analysis) String() string { return proto.CompactTextString(m) }
func (*Analysis) ProtoMessage()    {}
func (*Analysis) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1afe84a8c5f528d, []int{5}
}

func (m *Analysis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Analysis.Unmarshal(m, b)
}
func (m *Analysis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Analysis.Marshal(b, m, deterministic)
}
func (m *Analysis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Analysis.Merge(m, src)
}
func (m *Analysis) XXX_Size() int {
	return xxx_messageInfo_Analysis.Size(m)
}
func (m *Analysis) XXX_DiscardUnknown() {
	xxx_messageInfo_Analysis.DiscardUnknown(m)
}

var xxx_messageInfo_Analysis proto.InternalMessageInfo

func (m *Analysis) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Analysis) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Analysis) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Analysis) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Analysis) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

func (m *Analysis) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Analysis) GetSoftware() []string {
	if m != nil {
		return m.Software
	}
	return nil
}

func (m *Analysis) GetAttributes() *Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Analysis) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *Analysis) GetExperimentId() string {
	if m != nil {
		return m.ExperimentId
	}
	return ""
}

func (m *Analysis) GetOtherAnalysisDescriptor() string {
	if m != nil {
		return m.OtherAnalysisDescriptor
	}
	return ""
}

func (m *Analysis) GetOtherAnalysisCompletitionDate() string {
	if m != nil {
		return m.OtherAnalysisCompletitionDate
	}
	return ""
}

// An ontology term describing an attribute. (e.g. the phenotype attribute
// 'polydactyly' from HPO)
type OntologyTerm struct {
	// Ontology term identifier - the CURIE for an ontology term. It
	// differs from the standard GA4GH schema's :ref:`id <apidesign_object_ids>`
	// in that it is a CURIE pointing to an information resource outside of the
	// scope of the schema or its resource implementation.
	TermId string `protobuf:"bytes,1,opt,name=term_id,json=termId,proto3" json:"term_id,omitempty"`
	// Ontology term - the label of the ontology term the termId is pointing to.
	Term                 string   `protobuf:"bytes,2,opt,name=term,proto3" json:"term,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OntologyTerm) Reset()         { *m = OntologyTerm{} }
func (m *OntologyTerm) String() string { return proto.CompactTextString(m) }
func (*OntologyTerm) ProtoMessage()    {}
func (*OntologyTerm) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1afe84a8c5f528d, []int{6}
}

func (m *OntologyTerm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OntologyTerm.Unmarshal(m, b)
}
func (m *OntologyTerm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OntologyTerm.Marshal(b, m, deterministic)
}
func (m *OntologyTerm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OntologyTerm.Merge(m, src)
}
func (m *OntologyTerm) XXX_Size() int {
	return xxx_messageInfo_OntologyTerm.Size(m)
}
func (m *OntologyTerm) XXX_DiscardUnknown() {
	xxx_messageInfo_OntologyTerm.DiscardUnknown(m)
}

var xxx_messageInfo_OntologyTerm proto.InternalMessageInfo

func (m *OntologyTerm) GetTermId() string {
	if m != nil {
		return m.TermId
	}
	return ""
}

func (m *OntologyTerm) GetTerm() string {
	if m != nil {
		return m.Term
	}
	return ""
}

// A Program describes software used in data processing or analysis.
type Program struct {
	// The command line used to run this program.
	CommandLine string `protobuf:"bytes,1,opt,name=command_line,json=commandLine,proto3" json:"command_line,omitempty"`
	// The user specified ID of the program.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the program.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The ID of the program run before this one.
	PrevProgramId string `protobuf:"bytes,4,opt,name=prev_program_id,json=prevProgramId,proto3" json:"prev_program_id,omitempty"`
	// The version of the program run.
	Version              string   `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Program) Reset()         { *m = Program{} }
func (m *Program) String() string { return proto.CompactTextString(m) }
func (*Program) ProtoMessage()    {}
func (*Program) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1afe84a8c5f528d, []int{7}
}

func (m *Program) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Program.Unmarshal(m, b)
}
func (m *Program) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Program.Marshal(b, m, deterministic)
}
func (m *Program) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Program.Merge(m, src)
}
func (m *Program) XXX_Size() int {
	return xxx_messageInfo_Program.Size(m)
}
func (m *Program) XXX_DiscardUnknown() {
	xxx_messageInfo_Program.DiscardUnknown(m)
}

var xxx_messageInfo_Program proto.InternalMessageInfo

func (m *Program) GetCommandLine() string {
	if m != nil {
		return m.CommandLine
	}
	return ""
}

func (m *Program) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Program) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Program) GetPrevProgramId() string {
	if m != nil {
		return m.PrevProgramId
	}
	return ""
}

func (m *Program) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// Type defining a collection of attributes associated with various protocol
// records. Each attribute is a name that maps to an array of one or more
// values. Values are chosen from both internal protobuf types and GA4GH.
//  Values should be split into array elements instead of using a separator
// syntax that needs to parsed.
type AttributeValue struct {
	// Types that are valid to be assigned to Value:
	//	*AttributeValue_StringValue
	//	*AttributeValue_Int64Value
	//	*AttributeValue_Int32Value
	//	*AttributeValue_BoolValue
	//	*AttributeValue_DoubleValue
	//	*AttributeValue_ExternalIdentifier
	//	*AttributeValue_OntologyTerm
	//	*AttributeValue_Experiment
	//	*AttributeValue_Program
	//	*AttributeValue_Analysis
	//	*AttributeValue_NullValue
	//	*AttributeValue_Attributes
	//	*AttributeValue_AttributeList
	Value                isAttributeValue_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AttributeValue) Reset()         { *m = AttributeValue{} }
func (m *AttributeValue) String() string { return proto.CompactTextString(m) }
func (*AttributeValue) ProtoMessage()    {}
func (*AttributeValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1afe84a8c5f528d, []int{8}
}

func (m *AttributeValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttributeValue.Unmarshal(m, b)
}
func (m *AttributeValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttributeValue.Marshal(b, m, deterministic)
}
func (m *AttributeValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttributeValue.Merge(m, src)
}
func (m *AttributeValue) XXX_Size() int {
	return xxx_messageInfo_AttributeValue.Size(m)
}
func (m *AttributeValue) XXX_DiscardUnknown() {
	xxx_messageInfo_AttributeValue.DiscardUnknown(m)
}

var xxx_messageInfo_AttributeValue proto.InternalMessageInfo

type isAttributeValue_Value interface {
	isAttributeValue_Value()
}

type AttributeValue_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type AttributeValue_Int64Value struct {
	Int64Value int64 `protobuf:"varint,2,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type AttributeValue_Int32Value struct {
	Int32Value int32 `protobuf:"varint,3,opt,name=int32_value,json=int32Value,proto3,oneof"`
}

type AttributeValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,4,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type AttributeValue_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,5,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type AttributeValue_ExternalIdentifier struct {
	ExternalIdentifier *ExternalIdentifier `protobuf:"bytes,6,opt,name=external_identifier,json=externalIdentifier,proto3,oneof"`
}

type AttributeValue_OntologyTerm struct {
	OntologyTerm *OntologyTerm `protobuf:"bytes,7,opt,name=ontology_term,json=ontologyTerm,proto3,oneof"`
}

type AttributeValue_Experiment struct {
	Experiment *Experiment `protobuf:"bytes,8,opt,name=experiment,proto3,oneof"`
}

type AttributeValue_Program struct {
	Program *Program `protobuf:"bytes,9,opt,name=program,proto3,oneof"`
}

type AttributeValue_Analysis struct {
	Analysis *Analysis `protobuf:"bytes,10,opt,name=analysis,proto3,oneof"`
}

type AttributeValue_NullValue struct {
	NullValue NullValue `protobuf:"varint,11,opt,name=null_value,json=nullValue,proto3,enum=candig.NullValue,oneof"`
}

type AttributeValue_Attributes struct {
	Attributes *Attributes `protobuf:"bytes,12,opt,name=attributes,proto3,oneof"`
}

type AttributeValue_AttributeList struct {
	AttributeList *AttributeValueList `protobuf:"bytes,13,opt,name=attribute_list,json=attributeList,proto3,oneof"`
}

func (*AttributeValue_StringValue) isAttributeValue_Value() {}

func (*AttributeValue_Int64Value) isAttributeValue_Value() {}

func (*AttributeValue_Int32Value) isAttributeValue_Value() {}

func (*AttributeValue_BoolValue) isAttributeValue_Value() {}

func (*AttributeValue_DoubleValue) isAttributeValue_Value() {}

func (*AttributeValue_ExternalIdentifier) isAttributeValue_Value() {}

func (*AttributeValue_OntologyTerm) isAttributeValue_Value() {}

func (*AttributeValue_Experiment) isAttributeValue_Value() {}

func (*AttributeValue_Program) isAttributeValue_Value() {}

func (*AttributeValue_Analysis) isAttributeValue_Value() {}

func (*AttributeValue_NullValue) isAttributeValue_Value() {}

func (*AttributeValue_Attributes) isAttributeValue_Value() {}

func (*AttributeValue_AttributeList) isAttributeValue_Value() {}

func (m *AttributeValue) GetValue() isAttributeValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *AttributeValue) GetStringValue() string {
	if x, ok := m.GetValue().(*AttributeValue_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *AttributeValue) GetInt64Value() int64 {
	if x, ok := m.GetValue().(*AttributeValue_Int64Value); ok {
		return x.Int64Value
	}
	return 0
}

func (m *AttributeValue) GetInt32Value() int32 {
	if x, ok := m.GetValue().(*AttributeValue_Int32Value); ok {
		return x.Int32Value
	}
	return 0
}

func (m *AttributeValue) GetBoolValue() bool {
	if x, ok := m.GetValue().(*AttributeValue_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *AttributeValue) GetDoubleValue() float64 {
	if x, ok := m.GetValue().(*AttributeValue_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (m *AttributeValue) GetExternalIdentifier() *ExternalIdentifier {
	if x, ok := m.GetValue().(*AttributeValue_ExternalIdentifier); ok {
		return x.ExternalIdentifier
	}
	return nil
}

func (m *AttributeValue) GetOntologyTerm() *OntologyTerm {
	if x, ok := m.GetValue().(*AttributeValue_OntologyTerm); ok {
		return x.OntologyTerm
	}
	return nil
}

func (m *AttributeValue) GetExperiment() *Experiment {
	if x, ok := m.GetValue().(*AttributeValue_Experiment); ok {
		return x.Experiment
	}
	return nil
}

func (m *AttributeValue) GetProgram() *Program {
	if x, ok := m.GetValue().(*AttributeValue_Program); ok {
		return x.Program
	}
	return nil
}

func (m *AttributeValue) GetAnalysis() *Analysis {
	if x, ok := m.GetValue().(*AttributeValue_Analysis); ok {
		return x.Analysis
	}
	return nil
}

func (m *AttributeValue) GetNullValue() NullValue {
	if x, ok := m.GetValue().(*AttributeValue_NullValue); ok {
		return x.NullValue
	}
	return NullValue_NULL_VALUE
}

func (m *AttributeValue) GetAttributes() *Attributes {
	if x, ok := m.GetValue().(*AttributeValue_Attributes); ok {
		return x.Attributes
	}
	return nil
}

func (m *AttributeValue) GetAttributeList() *AttributeValueList {
	if x, ok := m.GetValue().(*AttributeValue_AttributeList); ok {
		return x.AttributeList
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AttributeValue) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AttributeValue_StringValue)(nil),
		(*AttributeValue_Int64Value)(nil),
		(*AttributeValue_Int32Value)(nil),
		(*AttributeValue_BoolValue)(nil),
		(*AttributeValue_DoubleValue)(nil),
		(*AttributeValue_ExternalIdentifier)(nil),
		(*AttributeValue_OntologyTerm)(nil),
		(*AttributeValue_Experiment)(nil),
		(*AttributeValue_Program)(nil),
		(*AttributeValue_Analysis)(nil),
		(*AttributeValue_NullValue)(nil),
		(*AttributeValue_Attributes)(nil),
		(*AttributeValue_AttributeList)(nil),
	}
}

type AttributeValueList struct {
	Values               []*AttributeValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AttributeValueList) Reset()         { *m = AttributeValueList{} }
func (m *AttributeValueList) String() string { return proto.CompactTextString(m) }
func (*AttributeValueList) ProtoMessage()    {}
func (*AttributeValueList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1afe84a8c5f528d, []int{9}
}

func (m *AttributeValueList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttributeValueList.Unmarshal(m, b)
}
func (m *AttributeValueList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttributeValueList.Marshal(b, m, deterministic)
}
func (m *AttributeValueList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttributeValueList.Merge(m, src)
}
func (m *AttributeValueList) XXX_Size() int {
	return xxx_messageInfo_AttributeValueList.Size(m)
}
func (m *AttributeValueList) XXX_DiscardUnknown() {
	xxx_messageInfo_AttributeValueList.DiscardUnknown(m)
}

var xxx_messageInfo_AttributeValueList proto.InternalMessageInfo

func (m *AttributeValueList) GetValues() []*AttributeValue {
	if m != nil {
		return m.Values
	}
	return nil
}

type Attributes struct {
	Attr                 map[string]*AttributeValueList `protobuf:"bytes,1,rep,name=attr,proto3" json:"attr,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Attributes) Reset()         { *m = Attributes{} }
func (m *Attributes) String() string { return proto.CompactTextString(m) }
func (*Attributes) ProtoMessage()    {}
func (*Attributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1afe84a8c5f528d, []int{10}
}

func (m *Attributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attributes.Unmarshal(m, b)
}
func (m *Attributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attributes.Marshal(b, m, deterministic)
}
func (m *Attributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attributes.Merge(m, src)
}
func (m *Attributes) XXX_Size() int {
	return xxx_messageInfo_Attributes.Size(m)
}
func (m *Attributes) XXX_DiscardUnknown() {
	xxx_messageInfo_Attributes.DiscardUnknown(m)
}

var xxx_messageInfo_Attributes proto.InternalMessageInfo

func (m *Attributes) GetAttr() map[string]*AttributeValueList {
	if m != nil {
		return m.Attr
	}
	return nil
}

func init() {
	proto.RegisterEnum("candig.Strand", Strand_name, Strand_value)
	proto.RegisterEnum("candig.NullValue", NullValue_name, NullValue_value)
	proto.RegisterType((*GAException)(nil), "candig.GAException")
	proto.RegisterType((*Filter)(nil), "candig.Filter")
	proto.RegisterType((*Position)(nil), "candig.Position")
	proto.RegisterType((*ExternalIdentifier)(nil), "candig.ExternalIdentifier")
	proto.RegisterType((*Experiment)(nil), "candig.Experiment")
	proto.RegisterType((*Analysis)(nil), "candig.Analysis")
	proto.RegisterType((*OntologyTerm)(nil), "candig.OntologyTerm")
	proto.RegisterType((*Program)(nil), "candig.Program")
	proto.RegisterType((*AttributeValue)(nil), "candig.AttributeValue")
	proto.RegisterType((*AttributeValueList)(nil), "candig.AttributeValueList")
	proto.RegisterType((*Attributes)(nil), "candig.Attributes")
	proto.RegisterMapType((map[string]*AttributeValueList)(nil), "candig.Attributes.AttrEntry")
}

func init() { proto.RegisterFile("candig/common.proto", fileDescriptor_a1afe84a8c5f528d) }

var fileDescriptor_a1afe84a8c5f528d = []byte{
	// 1330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x6e, 0x13, 0xc9,
	0x12, 0xb6, 0xe3, 0xc4, 0x3f, 0x65, 0xc7, 0x49, 0x3a, 0x21, 0x0c, 0x21, 0x80, 0x31, 0x3a, 0x28,
	0x07, 0xa4, 0x80, 0x0c, 0x3a, 0x3a, 0x82, 0x9b, 0x93, 0xe3, 0x38, 0xd8, 0x92, 0x09, 0xd1, 0x84,
	0x70, 0x3b, 0x6a, 0x7b, 0xca, 0xa6, 0x77, 0x67, 0xba, 0xbd, 0x3d, 0x3d, 0x80, 0x5f, 0x63, 0xf7,
	0x66, 0x5f, 0x63, 0x1f, 0x66, 0xdf, 0x67, 0xd5, 0x3f, 0x33, 0x9e, 0x90, 0x65, 0x91, 0x56, 0x7b,
	0x37, 0xf5, 0xd5, 0xd7, 0xdd, 0xd5, 0x55, 0xf5, 0x4d, 0x35, 0xec, 0x4e, 0x29, 0x0f, 0xd9, 0xfc,
	0xd9, 0x54, 0xc4, 0xb1, 0xe0, 0xc7, 0x0b, 0x29, 0x94, 0x20, 0x55, 0x0b, 0x1e, 0x1c, 0xce, 0x85,
	0x98, 0x47, 0xf8, 0xcc, 0xa0, 0x93, 0x74, 0xf6, 0x2c, 0x51, 0x32, 0x9d, 0x2a, 0xcb, 0xea, 0x9e,
	0x41, 0xf3, 0xcd, 0xc9, 0xe0, 0xcb, 0x14, 0x17, 0x8a, 0x09, 0x4e, 0xee, 0x01, 0xa0, 0x94, 0x42,
	0x06, 0x53, 0x11, 0xa2, 0x57, 0xee, 0x94, 0x8f, 0x36, 0xfc, 0x86, 0x41, 0xfa, 0x22, 0x44, 0xe2,
	0x41, 0x2d, 0xc6, 0x24, 0xa1, 0x73, 0xf4, 0xd6, 0x3a, 0xe5, 0xa3, 0x86, 0x9f, 0x99, 0xdd, 0x8f,
	0x50, 0x3d, 0x63, 0x91, 0x42, 0x49, 0xf6, 0x60, 0x63, 0xc6, 0x30, 0x0a, 0xcd, 0xea, 0x86, 0x6f,
	0x0d, 0x72, 0x00, 0x75, 0xb1, 0x40, 0x49, 0x95, 0x90, 0x6e, 0x69, 0x6e, 0xeb, 0x15, 0x9f, 0x68,
	0x94, 0xa2, 0x57, 0xb1, 0x2b, 0x8c, 0x41, 0xf6, 0xa1, 0x6a, 0x3e, 0x12, 0x6f, 0xbd, 0x53, 0x39,
	0x6a, 0xf8, 0xce, 0xea, 0xa6, 0x50, 0xbf, 0x10, 0x09, 0x33, 0xe1, 0xfe, 0x0b, 0xda, 0x12, 0x67,
	0x28, 0x91, 0x4f, 0x31, 0xe0, 0x34, 0x46, 0x77, 0xe8, 0x66, 0x8e, 0x9e, 0xd3, 0x18, 0xf5, 0xe1,
	0x0b, 0xb7, 0xc4, 0x1c, 0x5e, 0xf1, 0x73, 0x9b, 0x3c, 0x86, 0x6a, 0xa2, 0x24, 0xe5, 0xa1, 0x39,
	0xbd, 0xdd, 0x6b, 0x1f, 0xdb, 0xbc, 0x1d, 0x5f, 0x1a, 0xd4, 0x77, 0xde, 0xee, 0x0f, 0x40, 0x06,
	0x5f, 0x14, 0x4a, 0x4e, 0xa3, 0x51, 0x88, 0x5c, 0xb1, 0x19, 0x43, 0xa9, 0x77, 0x0e, 0xa9, 0xa2,
	0x13, 0x9a, 0x64, 0x47, 0xe7, 0x36, 0xb9, 0x0f, 0xc0, 0x72, 0xa6, 0xbb, 0x74, 0x01, 0xd1, 0xc9,
	0xfc, 0x84, 0x32, 0xd1, 0x41, 0xd9, 0x8b, 0x67, 0x66, 0xf7, 0xf7, 0x1a, 0xc0, 0xe0, 0xcb, 0x02,
	0x25, 0x8b, 0x91, 0x2b, 0xd2, 0x86, 0x35, 0x96, 0xa5, 0x73, 0x8d, 0x85, 0x84, 0xc0, 0xba, 0xb9,
	0xab, 0xdd, 0xd2, 0x7c, 0x93, 0x0e, 0x34, 0x43, 0x4c, 0xa6, 0x92, 0x99, 0x3a, 0xba, 0x0d, 0x8b,
	0x10, 0x39, 0x86, 0x5d, 0x57, 0xac, 0x60, 0x2a, 0x91, 0x2a, 0x0c, 0x14, 0x8b, 0xd1, 0x5b, 0x37,
	0xcc, 0x1d, 0xe7, 0xea, 0x1b, 0xcf, 0x7b, 0x16, 0x63, 0x91, 0x9f, 0x2e, 0xc2, 0x9c, 0xbf, 0x71,
	0x8d, 0x7f, 0x65, 0x3c, 0x86, 0x7f, 0x07, 0xea, 0x32, 0xe5, 0x96, 0x54, 0xb5, 0xf7, 0x91, 0x29,
	0x37, 0xae, 0x03, 0xa8, 0xc7, 0x22, 0xc2, 0x69, 0x1a, 0xa1, 0x57, 0xb3, 0x59, 0xca, 0x6c, 0xed,
	0xd3, 0x19, 0x56, 0x38, 0x5f, 0x7a, 0x75, 0xeb, 0xcb, 0x6c, 0x72, 0x08, 0x8d, 0x04, 0x23, 0x9c,
	0x9a, 0x2b, 0x35, 0x8c, 0x73, 0x05, 0xe8, 0xfc, 0x45, 0x6c, 0x22, 0xa9, 0x5c, 0x7a, 0x60, 0xcf,
	0x73, 0xa6, 0x6e, 0x0b, 0xf7, 0x19, 0x44, 0x74, 0x29, 0x52, 0xe5, 0x35, 0x6d, 0x5b, 0x38, 0x74,
	0x6c, 0x40, 0xf2, 0x6f, 0xd8, 0x66, 0x5c, 0xab, 0x41, 0x67, 0x39, 0x88, 0x45, 0x88, 0x91, 0xd7,
	0x32, 0xc4, 0xad, 0x15, 0xfe, 0x56, 0xc3, 0xe4, 0x39, 0xec, 0x15, 0xa8, 0xba, 0xc4, 0xc1, 0x8c,
	0x45, 0xe8, 0x6d, 0x1a, 0x3a, 0x59, 0xf9, 0x4e, 0xa9, 0xa2, 0x67, 0x2c, 0x42, 0xf2, 0x14, 0x76,
	0x12, 0xfc, 0x29, 0x45, 0x3e, 0x65, 0x7c, 0x1e, 0x4c, 0x91, 0x2b, 0x94, 0x5e, 0xdb, 0xd0, 0xb7,
	0x57, 0x8e, 0xbe, 0xc1, 0xc9, 0x23, 0xd8, 0x5c, 0x44, 0x54, 0xcd, 0x84, 0x8c, 0x83, 0x94, 0x33,
	0xe5, 0x6d, 0x19, 0x62, 0x2b, 0x03, 0xaf, 0x38, 0x53, 0xa4, 0x07, 0x40, 0x95, 0x92, 0x6c, 0x92,
	0x2a, 0x4c, 0xbc, 0x9d, 0x4e, 0xf9, 0xa8, 0xd9, 0x23, 0x59, 0xb7, 0x9e, 0xe4, 0x1e, 0xbf, 0xc0,
	0xd2, 0x7a, 0xd6, 0xc1, 0x26, 0xa8, 0x02, 0x16, 0x7a, 0xc4, 0xa6, 0xd0, 0x21, 0xa3, 0x90, 0x3c,
	0x84, 0xd6, 0x84, 0x89, 0x84, 0xc6, 0x8b, 0x08, 0x35, 0x61, 0xd7, 0xb6, 0x4d, 0x8e, 0x8d, 0x42,
	0x32, 0x80, 0x07, 0x21, 0xa7, 0x41, 0x96, 0xcf, 0xa9, 0xe0, 0xf6, 0xff, 0xc1, 0x04, 0x0f, 0x62,
	0x54, 0x1f, 0x45, 0xe8, 0xed, 0x99, 0x55, 0x87, 0x21, 0xa7, 0x63, 0xcb, 0xea, 0x17, 0x48, 0x6f,
	0x0d, 0x87, 0xf4, 0xe1, 0xfe, 0xe7, 0x79, 0x12, 0x14, 0x53, 0x22, 0xf4, 0x09, 0x66, 0x1f, 0xdd,
	0x43, 0xde, 0x2d, 0xb3, 0xcb, 0xdd, 0xcf, 0xf3, 0xe4, 0x72, 0x95, 0x9e, 0x9c, 0x73, 0x4a, 0x15,
	0xea, 0x58, 0xe4, 0x77, 0x62, 0xd9, 0xb7, 0xb1, 0xc8, 0xef, 0xc4, 0xa2, 0xb7, 0xf9, 0x8b, 0x58,
	0x6e, 0xdb, 0x58, 0x24, 0xa7, 0xdf, 0x8c, 0xa5, 0x07, 0xb7, 0x16, 0x94, 0x63, 0x74, 0x63, 0xad,
	0x67, 0xd6, 0xee, 0x1a, 0xe7, 0xf5, 0x35, 0xdd, 0xdf, 0x2a, 0x50, 0x3f, 0xe1, 0x34, 0x5a, 0x26,
	0x2c, 0xf9, 0x87, 0x54, 0xed, 0x41, 0xcd, 0xaa, 0x39, 0x74, 0x4a, 0xce, 0x4c, 0xed, 0xb1, 0xba,
	0x0d, 0x9d, 0x66, 0x33, 0x53, 0x9f, 0xa4, 0x96, 0x8b, 0x4c, 0xa5, 0xe6, 0xdb, 0xc8, 0x50, 0xcc,
	0xd4, 0x67, 0x2a, 0xb5, 0x44, 0x2b, 0x46, 0x86, 0xce, 0xfe, 0xaa, 0xf1, 0x1a, 0x7f, 0xa3, 0xf1,
	0xe0, 0xeb, 0xc6, 0x7b, 0x04, 0x9b, 0x98, 0xff, 0xe0, 0x34, 0xc3, 0x0a, 0xb4, 0xb5, 0x02, 0x47,
	0x21, 0x79, 0x05, 0x77, 0x84, 0xfa, 0x88, 0x32, 0xa0, 0x2e, 0x67, 0x41, 0x76, 0x73, 0x21, 0x9d,
	0x50, 0x6f, 0x1b, 0x42, 0x96, 0xd3, 0xd3, 0xdc, 0x4d, 0xde, 0x40, 0xe7, 0xab, 0xb5, 0x59, 0x9d,
	0x56, 0x95, 0xb2, 0xe2, 0xbd, 0x77, 0x6d, 0x8b, 0x7e, 0x81, 0x65, 0x6a, 0xf6, 0x1a, 0x5a, 0xef,
	0xb8, 0x12, 0x91, 0x98, 0x2f, 0xdf, 0xa3, 0x8c, 0xc9, 0x6d, 0xa8, 0x29, 0x94, 0x71, 0x90, 0xd7,
	0xae, 0xaa, 0xcd, 0x91, 0xcd, 0x2a, 0xca, 0x38, 0xab, 0x9f, 0xfe, 0xee, 0xfe, 0x5c, 0x86, 0xda,
	0x85, 0x14, 0x73, 0x49, 0x63, 0xad, 0x35, 0x3d, 0x9f, 0x29, 0x0f, 0x83, 0x88, 0xf1, 0x6c, 0x5c,
	0x34, 0x1d, 0x36, 0x66, 0x1c, 0x5d, 0x4b, 0xac, 0xdd, 0x68, 0x89, 0x4a, 0xa1, 0x25, 0x1e, 0xc3,
	0xd6, 0x42, 0xe2, 0xa7, 0x60, 0x61, 0xb7, 0xd5, 0x71, 0xd8, 0xc2, 0x6f, 0x6a, 0xd8, 0x1d, 0x36,
	0x0a, 0x8b, 0xd3, 0x65, 0xe3, 0xfa, 0x74, 0xf9, 0x75, 0x03, 0xda, 0x79, 0xd5, 0x3e, 0x98, 0x59,
	0xfb, 0x08, 0x5a, 0x89, 0x92, 0x5a, 0x09, 0x76, 0x10, 0x9b, 0xd8, 0x86, 0x25, 0xbf, 0x69, 0x51,
	0x4b, 0x7a, 0x08, 0x4d, 0xc6, 0xd5, 0x7f, 0x5e, 0x3a, 0x8e, 0x19, 0xa4, 0xc3, 0x92, 0x0f, 0x06,
	0x2c, 0x52, 0x5e, 0xf4, 0x82, 0xd5, 0x3c, 0xdf, 0x70, 0x94, 0x17, 0x3d, 0x4b, 0x79, 0x00, 0x30,
	0x11, 0x22, 0x72, 0x0c, 0x1d, 0x7a, 0x7d, 0x58, 0xf2, 0x1b, 0x1a, 0xcb, 0x63, 0x09, 0x45, 0x3a,
	0x89, 0xd0, 0x51, 0x74, 0xf4, 0x65, 0x1d, 0x8b, 0x45, 0x2d, 0xe9, 0x2d, 0xec, 0xa2, 0x9b, 0xc6,
	0x41, 0x61, 0xc8, 0x56, 0x4d, 0x6f, 0x1e, 0x64, 0xbd, 0x79, 0x73, 0x60, 0x0f, 0x4b, 0x3e, 0xc1,
	0x9b, 0x63, 0xfc, 0x35, 0x6c, 0x0a, 0x57, 0xe4, 0xc0, 0x14, 0xb1, 0x66, 0x36, 0xda, 0xcb, 0x36,
	0x2a, 0x76, 0xc0, 0xb0, 0xe4, 0xb7, 0x44, 0xb1, 0x23, 0x5e, 0x02, 0xac, 0xda, 0xd6, 0xcc, 0xb0,
	0x82, 0x3c, 0x56, 0x63, 0x5c, 0xe7, 0x61, 0xc5, 0x23, 0x4f, 0xa1, 0xe6, 0x4a, 0xe8, 0x14, 0xb5,
	0x95, 0x2d, 0x71, 0x35, 0x1c, 0x96, 0xfc, 0x8c, 0x41, 0x8e, 0xa1, 0x9e, 0xf5, 0xb1, 0xd1, 0x52,
	0xb3, 0xb7, 0x9d, 0xeb, 0xcf, 0xe1, 0xc3, 0x92, 0x9f, 0x73, 0xb4, 0x62, 0x79, 0x1a, 0x65, 0x49,
	0x6e, 0x9a, 0x87, 0xcd, 0x4e, 0xb6, 0xe2, 0x3c, 0x8d, 0x6c, 0xaa, 0x75, 0xde, 0x79, 0x66, 0xe8,
	0x6b, 0x14, 0x54, 0xde, 0xfa, 0x96, 0xca, 0xf5, 0x35, 0x0a, 0x3a, 0xef, 0x43, 0x3b, 0xb7, 0x82,
	0x88, 0x25, 0xca, 0xa8, 0xaa, 0x50, 0x83, 0xeb, 0x9d, 0x36, 0x66, 0x89, 0x4e, 0xc4, 0x66, 0xbe,
	0x46, 0x03, 0xff, 0xaf, 0xb9, 0x07, 0x60, 0xf7, 0x14, 0xc8, 0x4d, 0x3e, 0x39, 0xce, 0x5f, 0x82,
	0xe5, 0x4e, 0xe5, 0xa8, 0xd9, 0xdb, 0xff, 0xf3, 0xbd, 0xf3, 0x17, 0xe2, 0x2f, 0x65, 0x80, 0x55,
	0xc0, 0xe4, 0x39, 0xac, 0xeb, 0xe3, 0xdc, 0xe2, 0xc3, 0x9b, 0x57, 0x32, 0x9f, 0x03, 0xae, 0xe4,
	0xd2, 0x37, 0xcc, 0x83, 0x4b, 0x68, 0xe4, 0x10, 0xd9, 0x86, 0xca, 0x8f, 0xb8, 0x74, 0x72, 0xd5,
	0x9f, 0xe4, 0x79, 0xf6, 0x5e, 0x5d, 0xfb, 0xde, 0x55, 0xdd, 0x5b, 0xf6, 0xd5, 0xda, 0x7f, 0xcb,
	0x4f, 0xfe, 0x07, 0x55, 0xfb, 0xa4, 0x24, 0xfb, 0x40, 0x2e, 0xdf, 0xfb, 0x27, 0xe7, 0xa7, 0xc1,
	0xd5, 0xf9, 0xe5, 0xc5, 0xa0, 0x3f, 0x3a, 0x1b, 0x0d, 0x4e, 0xb7, 0x4b, 0xa4, 0x0d, 0x70, 0x3e,
	0x78, 0x13, 0x58, 0xdf, 0x76, 0x59, 0xdb, 0x17, 0xef, 0x2e, 0x33, 0x7b, 0xed, 0xc9, 0x5d, 0x68,
	0xe4, 0xb5, 0x33, 0xe4, 0xab, 0xf1, 0x38, 0xf8, 0x70, 0x32, 0xbe, 0x1a, 0x6c, 0x97, 0x26, 0x55,
	0xf3, 0x9e, 0x7f, 0xf1, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe1, 0xb6, 0x25, 0xd0, 0x0c, 0x0c,
	0x00, 0x00,
}
