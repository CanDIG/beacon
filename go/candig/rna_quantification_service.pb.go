// Code generated by protoc-gen-go. DO NOT EDIT.
// source: candig/rna_quantification_service.proto

package candig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google/api"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// This request maps to the body of 'POST /rnaquantificationsets/search'
// as JSON.
type SearchRnaQuantificationSetsRequest struct {
	// The `Dataset` to search.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// 'nextPageToken' from the previous response.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRnaQuantificationSetsRequest) Reset()         { *m = SearchRnaQuantificationSetsRequest{} }
func (m *SearchRnaQuantificationSetsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRnaQuantificationSetsRequest) ProtoMessage()    {}
func (*SearchRnaQuantificationSetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df74d95118927638, []int{0}
}

func (m *SearchRnaQuantificationSetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRnaQuantificationSetsRequest.Unmarshal(m, b)
}
func (m *SearchRnaQuantificationSetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRnaQuantificationSetsRequest.Marshal(b, m, deterministic)
}
func (m *SearchRnaQuantificationSetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRnaQuantificationSetsRequest.Merge(m, src)
}
func (m *SearchRnaQuantificationSetsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRnaQuantificationSetsRequest.Size(m)
}
func (m *SearchRnaQuantificationSetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRnaQuantificationSetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRnaQuantificationSetsRequest proto.InternalMessageInfo

func (m *SearchRnaQuantificationSetsRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchRnaQuantificationSetsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchRnaQuantificationSetsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This is the response from 'POST /rnaquantificationsets/search' expressed as JSON.
type SearchRnaQuantificationSetsResponse struct {
	// The list of matching quantification sets.
	RnaQuantificationSets []*RnaQuantificationSet `protobuf:"bytes,1,rep,name=rna_quantification_sets,json=rnaQuantificationSets,proto3" json:"rna_quantification_sets,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// 'nextPageToken' from the previous response.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRnaQuantificationSetsResponse) Reset()         { *m = SearchRnaQuantificationSetsResponse{} }
func (m *SearchRnaQuantificationSetsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchRnaQuantificationSetsResponse) ProtoMessage()    {}
func (*SearchRnaQuantificationSetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df74d95118927638, []int{1}
}

func (m *SearchRnaQuantificationSetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRnaQuantificationSetsResponse.Unmarshal(m, b)
}
func (m *SearchRnaQuantificationSetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRnaQuantificationSetsResponse.Marshal(b, m, deterministic)
}
func (m *SearchRnaQuantificationSetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRnaQuantificationSetsResponse.Merge(m, src)
}
func (m *SearchRnaQuantificationSetsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchRnaQuantificationSetsResponse.Size(m)
}
func (m *SearchRnaQuantificationSetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRnaQuantificationSetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRnaQuantificationSetsResponse proto.InternalMessageInfo

func (m *SearchRnaQuantificationSetsResponse) GetRnaQuantificationSets() []*RnaQuantificationSet {
	if m != nil {
		return m.RnaQuantificationSets
	}
	return nil
}

func (m *SearchRnaQuantificationSetsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetRnaQuantificationSetRequest struct {
	// The ID of the `RnaQuantificationSet`.
	RnaQuantificationSetId string   `protobuf:"bytes,1,opt,name=rna_quantification_set_id,json=rnaQuantificationSetId,proto3" json:"rna_quantification_set_id,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *GetRnaQuantificationSetRequest) Reset()         { *m = GetRnaQuantificationSetRequest{} }
func (m *GetRnaQuantificationSetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRnaQuantificationSetRequest) ProtoMessage()    {}
func (*GetRnaQuantificationSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df74d95118927638, []int{2}
}

func (m *GetRnaQuantificationSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRnaQuantificationSetRequest.Unmarshal(m, b)
}
func (m *GetRnaQuantificationSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRnaQuantificationSetRequest.Marshal(b, m, deterministic)
}
func (m *GetRnaQuantificationSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRnaQuantificationSetRequest.Merge(m, src)
}
func (m *GetRnaQuantificationSetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRnaQuantificationSetRequest.Size(m)
}
func (m *GetRnaQuantificationSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRnaQuantificationSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRnaQuantificationSetRequest proto.InternalMessageInfo

func (m *GetRnaQuantificationSetRequest) GetRnaQuantificationSetId() string {
	if m != nil {
		return m.RnaQuantificationSetId
	}
	return ""
}

// This request maps to the body of 'POST /rnaquantifications/search'
// as JSON.
type SearchRnaQuantificationsRequest struct {
	// Return only Rna Quantifications which belong to this set.
	// Must be specified.
	RnaQuantificationSetId string `protobuf:"bytes,1,opt,name=rna_quantification_set_id,json=rnaQuantificationSetId,proto3" json:"rna_quantification_set_id,omitempty"`
	// Return only RNA quantifications regarding the specified biosample. Optional.
	BiosampleId string `protobuf:"bytes,4,opt,name=biosample_id,json=biosampleId,proto3" json:"biosample_id,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// 'nextPageToken' from the previous response.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Return only RNA quantifications related to the specified sampleId.
	SampleId string `protobuf:"bytes,5,opt,name=sampleId,proto3" json:"sampleId,omitempty"`
	// Return only RNA quantifications related to the specified patientId.
	PatientId            string   `protobuf:"bytes,6,opt,name=patientId,proto3" json:"patientId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRnaQuantificationsRequest) Reset()         { *m = SearchRnaQuantificationsRequest{} }
func (m *SearchRnaQuantificationsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRnaQuantificationsRequest) ProtoMessage()    {}
func (*SearchRnaQuantificationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df74d95118927638, []int{3}
}

func (m *SearchRnaQuantificationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRnaQuantificationsRequest.Unmarshal(m, b)
}
func (m *SearchRnaQuantificationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRnaQuantificationsRequest.Marshal(b, m, deterministic)
}
func (m *SearchRnaQuantificationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRnaQuantificationsRequest.Merge(m, src)
}
func (m *SearchRnaQuantificationsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRnaQuantificationsRequest.Size(m)
}
func (m *SearchRnaQuantificationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRnaQuantificationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRnaQuantificationsRequest proto.InternalMessageInfo

func (m *SearchRnaQuantificationsRequest) GetRnaQuantificationSetId() string {
	if m != nil {
		return m.RnaQuantificationSetId
	}
	return ""
}

func (m *SearchRnaQuantificationsRequest) GetBiosampleId() string {
	if m != nil {
		return m.BiosampleId
	}
	return ""
}

func (m *SearchRnaQuantificationsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchRnaQuantificationsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchRnaQuantificationsRequest) GetSampleId() string {
	if m != nil {
		return m.SampleId
	}
	return ""
}

func (m *SearchRnaQuantificationsRequest) GetPatientId() string {
	if m != nil {
		return m.PatientId
	}
	return ""
}

// This is the response from 'POST /rnaquantifications/search' expressed as JSON.
type SearchRnaQuantificationsResponse struct {
	// The list of matching quantifications.
	RnaQuantifications []*RnaQuantification `protobuf:"bytes,1,rep,name=rna_quantifications,json=rnaQuantifications,proto3" json:"rna_quantifications,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// 'nextPageToken' from the previous response.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRnaQuantificationsResponse) Reset()         { *m = SearchRnaQuantificationsResponse{} }
func (m *SearchRnaQuantificationsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchRnaQuantificationsResponse) ProtoMessage()    {}
func (*SearchRnaQuantificationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df74d95118927638, []int{4}
}

func (m *SearchRnaQuantificationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRnaQuantificationsResponse.Unmarshal(m, b)
}
func (m *SearchRnaQuantificationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRnaQuantificationsResponse.Marshal(b, m, deterministic)
}
func (m *SearchRnaQuantificationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRnaQuantificationsResponse.Merge(m, src)
}
func (m *SearchRnaQuantificationsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchRnaQuantificationsResponse.Size(m)
}
func (m *SearchRnaQuantificationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRnaQuantificationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRnaQuantificationsResponse proto.InternalMessageInfo

func (m *SearchRnaQuantificationsResponse) GetRnaQuantifications() []*RnaQuantification {
	if m != nil {
		return m.RnaQuantifications
	}
	return nil
}

func (m *SearchRnaQuantificationsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetRnaQuantificationRequest struct {
	// The ID of the `RnaQuantification`.
	RnaQuantificationId  string   `protobuf:"bytes,1,opt,name=rna_quantification_id,json=rnaQuantificationId,proto3" json:"rna_quantification_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRnaQuantificationRequest) Reset()         { *m = GetRnaQuantificationRequest{} }
func (m *GetRnaQuantificationRequest) String() string { return proto.CompactTextString(m) }
func (*GetRnaQuantificationRequest) ProtoMessage()    {}
func (*GetRnaQuantificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df74d95118927638, []int{5}
}

func (m *GetRnaQuantificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRnaQuantificationRequest.Unmarshal(m, b)
}
func (m *GetRnaQuantificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRnaQuantificationRequest.Marshal(b, m, deterministic)
}
func (m *GetRnaQuantificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRnaQuantificationRequest.Merge(m, src)
}
func (m *GetRnaQuantificationRequest) XXX_Size() int {
	return xxx_messageInfo_GetRnaQuantificationRequest.Size(m)
}
func (m *GetRnaQuantificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRnaQuantificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRnaQuantificationRequest proto.InternalMessageInfo

func (m *GetRnaQuantificationRequest) GetRnaQuantificationId() string {
	if m != nil {
		return m.RnaQuantificationId
	}
	return ""
}

// ****************  /expressionlevels/search  *******************
// This request maps to the body of 'POST /expressionlevels/search'
// as JSON.
type SearchExpressionLevelsRequest struct {
	// The rnaQuantification to restrict search to.
	RnaQuantificationId string `protobuf:"bytes,1,opt,name=rna_quantification_id,json=rnaQuantificationId,proto3" json:"rna_quantification_id,omitempty"`
	// Only return expressions with any of the names (strict string matching).
	Names []string `protobuf:"bytes,6,rep,name=names,proto3" json:"names,omitempty"`
	// Only return ExpressionLevel records with expressions exceeding
	// this value.  (Defaults to 0.0)
	Threshold float32 `protobuf:"fixed32,3,opt,name=threshold,proto3" json:"threshold,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// 'nextPageToken' from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchExpressionLevelsRequest) Reset()         { *m = SearchExpressionLevelsRequest{} }
func (m *SearchExpressionLevelsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchExpressionLevelsRequest) ProtoMessage()    {}
func (*SearchExpressionLevelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df74d95118927638, []int{6}
}

func (m *SearchExpressionLevelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchExpressionLevelsRequest.Unmarshal(m, b)
}
func (m *SearchExpressionLevelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchExpressionLevelsRequest.Marshal(b, m, deterministic)
}
func (m *SearchExpressionLevelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchExpressionLevelsRequest.Merge(m, src)
}
func (m *SearchExpressionLevelsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchExpressionLevelsRequest.Size(m)
}
func (m *SearchExpressionLevelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchExpressionLevelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchExpressionLevelsRequest proto.InternalMessageInfo

func (m *SearchExpressionLevelsRequest) GetRnaQuantificationId() string {
	if m != nil {
		return m.RnaQuantificationId
	}
	return ""
}

func (m *SearchExpressionLevelsRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *SearchExpressionLevelsRequest) GetThreshold() float32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

func (m *SearchExpressionLevelsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchExpressionLevelsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This is the response from 'POST /expressionlevels/search' expressed as JSON.
type SearchExpressionLevelsResponse struct {
	// The list of matching quantifications.
	ExpressionLevels []*ExpressionLevel `protobuf:"bytes,1,rep,name=expression_levels,json=expressionLevels,proto3" json:"expression_levels,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// 'nextPageToken' from the previous response.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchExpressionLevelsResponse) Reset()         { *m = SearchExpressionLevelsResponse{} }
func (m *SearchExpressionLevelsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchExpressionLevelsResponse) ProtoMessage()    {}
func (*SearchExpressionLevelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_df74d95118927638, []int{7}
}

func (m *SearchExpressionLevelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchExpressionLevelsResponse.Unmarshal(m, b)
}
func (m *SearchExpressionLevelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchExpressionLevelsResponse.Marshal(b, m, deterministic)
}
func (m *SearchExpressionLevelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchExpressionLevelsResponse.Merge(m, src)
}
func (m *SearchExpressionLevelsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchExpressionLevelsResponse.Size(m)
}
func (m *SearchExpressionLevelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchExpressionLevelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchExpressionLevelsResponse proto.InternalMessageInfo

func (m *SearchExpressionLevelsResponse) GetExpressionLevels() []*ExpressionLevel {
	if m != nil {
		return m.ExpressionLevels
	}
	return nil
}

func (m *SearchExpressionLevelsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetExpressionLevelRequest struct {
	// The ID of the `ExpressionLevel`.
	ExpressionLevelId    string   `protobuf:"bytes,1,opt,name=expression_level_id,json=expressionLevelId,proto3" json:"expression_level_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetExpressionLevelRequest) Reset()         { *m = GetExpressionLevelRequest{} }
func (m *GetExpressionLevelRequest) String() string { return proto.CompactTextString(m) }
func (*GetExpressionLevelRequest) ProtoMessage()    {}
func (*GetExpressionLevelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_df74d95118927638, []int{8}
}

func (m *GetExpressionLevelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExpressionLevelRequest.Unmarshal(m, b)
}
func (m *GetExpressionLevelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExpressionLevelRequest.Marshal(b, m, deterministic)
}
func (m *GetExpressionLevelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExpressionLevelRequest.Merge(m, src)
}
func (m *GetExpressionLevelRequest) XXX_Size() int {
	return xxx_messageInfo_GetExpressionLevelRequest.Size(m)
}
func (m *GetExpressionLevelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExpressionLevelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetExpressionLevelRequest proto.InternalMessageInfo

func (m *GetExpressionLevelRequest) GetExpressionLevelId() string {
	if m != nil {
		return m.ExpressionLevelId
	}
	return ""
}

func init() {
	proto.RegisterType((*SearchRnaQuantificationSetsRequest)(nil), "candig.SearchRnaQuantificationSetsRequest")
	proto.RegisterType((*SearchRnaQuantificationSetsResponse)(nil), "candig.SearchRnaQuantificationSetsResponse")
	proto.RegisterType((*GetRnaQuantificationSetRequest)(nil), "candig.GetRnaQuantificationSetRequest")
	proto.RegisterType((*SearchRnaQuantificationsRequest)(nil), "candig.SearchRnaQuantificationsRequest")
	proto.RegisterType((*SearchRnaQuantificationsResponse)(nil), "candig.SearchRnaQuantificationsResponse")
	proto.RegisterType((*GetRnaQuantificationRequest)(nil), "candig.GetRnaQuantificationRequest")
	proto.RegisterType((*SearchExpressionLevelsRequest)(nil), "candig.SearchExpressionLevelsRequest")
	proto.RegisterType((*SearchExpressionLevelsResponse)(nil), "candig.SearchExpressionLevelsResponse")
	proto.RegisterType((*GetExpressionLevelRequest)(nil), "candig.GetExpressionLevelRequest")
}

func init() {
	proto.RegisterFile("candig/rna_quantification_service.proto", fileDescriptor_df74d95118927638)
}

var fileDescriptor_df74d95118927638 = []byte{
	// 720 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xcd, 0x4e, 0x13, 0x51,
	0x14, 0xce, 0x2d, 0xb4, 0xd2, 0x83, 0x46, 0xb9, 0xfc, 0x0d, 0xe5, 0xaf, 0x0c, 0x58, 0x2a, 0x9a,
	0x29, 0xa9, 0xc6, 0x08, 0xae, 0x4c, 0x34, 0xa4, 0xea, 0x42, 0x06, 0x76, 0x2e, 0x9a, 0xa1, 0x73,
	0x2c, 0x13, 0xcb, 0x4c, 0x99, 0x7b, 0x21, 0x04, 0x42, 0x4c, 0x5c, 0xb9, 0x72, 0x21, 0x89, 0x1b,
	0x77, 0xba, 0xf0, 0x29, 0x5c, 0xf9, 0x08, 0xbe, 0x82, 0xaf, 0xe0, 0xde, 0xcc, 0x9d, 0x99, 0xb6,
	0x4c, 0xef, 0x9d, 0x92, 0xb0, 0x9c, 0xf3, 0x77, 0xbf, 0xf3, 0x7d, 0x39, 0x5f, 0x06, 0x56, 0x1b,
	0x96, 0x6b, 0x3b, 0xcd, 0x8a, 0xef, 0x5a, 0xf5, 0xc3, 0x23, 0xcb, 0xe5, 0xce, 0x3b, 0xa7, 0x61,
	0x71, 0xc7, 0x73, 0xeb, 0x0c, 0xfd, 0x63, 0xa7, 0x81, 0x46, 0xdb, 0xf7, 0xb8, 0x47, 0x73, 0x61,
	0x61, 0x61, 0x51, 0xd9, 0x10, 0x16, 0x16, 0xe6, 0x9a, 0x9e, 0xd7, 0x6c, 0x61, 0xc5, 0x6a, 0x3b,
	0x15, 0xcb, 0x75, 0x3d, 0x2e, 0x92, 0x2c, 0xcc, 0xea, 0x1f, 0x40, 0xdf, 0x41, 0xcb, 0x6f, 0xec,
	0x9b, 0xae, 0xb5, 0x7d, 0xa9, 0x7d, 0x07, 0x39, 0x33, 0xf1, 0xf0, 0x08, 0x19, 0xa7, 0xf3, 0x00,
	0xb6, 0xc5, 0x2d, 0x86, 0xbc, 0xee, 0xd8, 0x1a, 0x29, 0x92, 0x72, 0xde, 0xcc, 0x47, 0x91, 0x9a,
	0x4d, 0x67, 0x21, 0xdf, 0xb6, 0x9a, 0x58, 0x67, 0xce, 0x29, 0x6a, 0x99, 0x22, 0x29, 0x67, 0xcd,
	0x91, 0x20, 0xb0, 0xe3, 0x9c, 0x62, 0xd0, 0x2b, 0x92, 0xdc, 0x7b, 0x8f, 0xae, 0x36, 0x14, 0xf6,
	0x06, 0x91, 0xdd, 0x20, 0xa0, 0xff, 0x20, 0xb0, 0x9c, 0x8a, 0x80, 0xb5, 0x3d, 0x97, 0x21, 0xdd,
	0x85, 0x69, 0x29, 0x27, 0x9c, 0x69, 0xa4, 0x38, 0x54, 0x1e, 0xad, 0xce, 0x19, 0x21, 0x13, 0x86,
	0x6c, 0x8e, 0x39, 0xe9, 0xcb, 0xa6, 0xd3, 0x12, 0xdc, 0x76, 0xf1, 0x84, 0xd7, 0x7b, 0x10, 0x66,
	0x04, 0xc2, 0x5b, 0x41, 0xf8, 0x4d, 0x07, 0xe5, 0x5b, 0x58, 0xd8, 0x42, 0x2e, 0x9d, 0x1c, 0x51,
	0xb4, 0x01, 0x33, 0x72, 0x7c, 0x5d, 0xc6, 0xa6, 0x64, 0x18, 0x6a, 0xb6, 0xfe, 0x8f, 0xc0, 0xa2,
	0x82, 0x02, 0x76, 0xfd, 0xf1, 0x74, 0x09, 0x6e, 0xee, 0x39, 0x1e, 0xb3, 0x0e, 0xda, 0x2d, 0x0c,
	0xaa, 0x87, 0x45, 0xf5, 0x68, 0x27, 0x76, 0x3d, 0x01, 0x69, 0x01, 0x46, 0xe2, 0x39, 0x5a, 0x56,
	0x24, 0x3b, 0xdf, 0x74, 0x2e, 0x98, 0xcb, 0x1d, 0x74, 0x79, 0xcd, 0xd6, 0x72, 0x71, 0x67, 0x14,
	0xd0, 0xbf, 0x12, 0x28, 0xaa, 0xf7, 0x8e, 0x74, 0x7f, 0x09, 0xe3, 0xfd, 0x8b, 0xc7, 0x9a, 0xcf,
	0x28, 0x35, 0x37, 0x69, 0x1f, 0x1b, 0x57, 0x57, 0x7b, 0x1b, 0x66, 0x65, 0x6a, 0xc7, 0x5a, 0x54,
	0x61, 0x52, 0xa2, 0x45, 0x47, 0x87, 0xf1, 0xbe, 0x97, 0x6b, 0xb6, 0xfe, 0x9b, 0xc0, 0x7c, 0xb8,
	0xeb, 0x8b, 0x93, 0xb6, 0x8f, 0x8c, 0x39, 0x9e, 0xfb, 0x1a, 0x8f, 0xb1, 0xc5, 0xae, 0x31, 0x95,
	0x4e, 0x40, 0xd6, 0xb5, 0x0e, 0x90, 0x69, 0xb9, 0xe2, 0x50, 0x39, 0x6f, 0x86, 0x1f, 0x01, 0xeb,
	0x7c, 0xdf, 0x47, 0xb6, 0xef, 0xb5, 0x6c, 0xa1, 0x57, 0xc6, 0xec, 0x06, 0x2e, 0x6b, 0x3d, 0x9c,
	0xaa, 0x75, 0x36, 0x79, 0xac, 0x9f, 0x09, 0x2c, 0xa8, 0xb6, 0x88, 0xf4, 0x7a, 0x0e, 0x63, 0xd8,
	0xc9, 0xd5, 0x5b, 0x22, 0x19, 0xa9, 0x35, 0x1d, 0xab, 0x95, 0x68, 0x36, 0xef, 0x60, 0x62, 0xda,
	0x95, 0x95, 0x7a, 0x05, 0x33, 0x5b, 0xc8, 0x93, 0xf3, 0x22, 0x46, 0x0d, 0x18, 0x4f, 0x42, 0xe9,
	0xf2, 0x39, 0x96, 0x78, 0xb3, 0x66, 0x57, 0x7f, 0xdd, 0x00, 0x4d, 0x72, 0xe2, 0xc2, 0x75, 0xe9,
	0x4f, 0x02, 0xb3, 0x29, 0x3e, 0x45, 0xd7, 0xe2, 0xe5, 0x06, 0xdb, 0x69, 0xe1, 0xfe, 0x95, 0x6a,
	0x43, 0x42, 0xf5, 0xca, 0xc7, 0x3f, 0x7f, 0x2f, 0x32, 0xf7, 0xf4, 0x95, 0xca, 0xf1, 0xba, 0xf1,
	0xc4, 0x58, 0x0f, 0x9c, 0x3e, 0x71, 0x0d, 0xc8, 0x59, 0x85, 0x89, 0x51, 0x9b, 0x64, 0x8d, 0x7e,
	0x27, 0x30, 0xad, 0x30, 0x2b, 0x5a, 0x8a, 0x5f, 0x4e, 0x77, 0xb3, 0x42, 0xaa, 0x99, 0xea, 0xcf,
	0x04, 0xa4, 0xa7, 0x74, 0x23, 0x1d, 0xd2, 0x99, 0xd2, 0xb1, 0xce, 0xe9, 0x37, 0x02, 0x9a, 0xea,
	0xf6, 0xe9, 0xea, 0x00, 0x7e, 0x3a, 0x44, 0x96, 0x07, 0x17, 0x46, 0x2c, 0x3e, 0x10, 0x90, 0x4b,
	0xfa, 0x92, 0x1a, 0x72, 0x0f, 0x85, 0x5f, 0x08, 0x4c, 0xc8, 0x18, 0xa2, 0xcb, 0x69, 0xfc, 0xc5,
	0xa8, 0xd4, 0xae, 0xa4, 0x6f, 0x0a, 0x18, 0x8f, 0x68, 0x35, 0x05, 0xc6, 0x99, 0xd4, 0x06, 0xce,
	0xe9, 0x05, 0x81, 0x29, 0xf9, 0xf1, 0xd1, 0xbb, 0x97, 0x79, 0x50, 0x58, 0x4c, 0xa1, 0x34, 0xa8,
	0x2c, 0x22, 0x6b, 0x4d, 0xa0, 0x5c, 0xd1, 0x17, 0x63, 0x94, 0xdd, 0x5b, 0x09, 0x0f, 0xba, 0x87,
	0xaa, 0x4f, 0x04, 0x68, 0xff, 0x09, 0xd2, 0xa5, 0x1e, 0xa2, 0xe4, 0xe7, 0x59, 0x50, 0xd9, 0x81,
	0xfe, 0x58, 0x3c, 0xbf, 0x4e, 0x0d, 0xe5, 0xf3, 0x67, 0x92, 0xbb, 0x3e, 0xdf, 0xcb, 0x89, 0x5f,
	0x9a, 0x87, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x6a, 0xbd, 0xe3, 0x03, 0x44, 0x09, 0x00, 0x00,
}
