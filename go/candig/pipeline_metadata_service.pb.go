// Code generated by protoc-gen-go. DO NOT EDIT.
// source: candig/pipeline_metadata_service.proto

package candig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google/api"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ======================================================
// Extraction
// ======================================================
// This request maps to the body of `POST /extractions/search` as JSON.
type SearchExtractionsRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Extractions with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Optionally specify the sample to search within.
	SampleId string `protobuf:"bytes,5,opt,name=sample_id,json=sampleId,proto3" json:"sample_id,omitempty"`
	// Filter on any of the fields
	Filters              []*Filter `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SearchExtractionsRequest) Reset()         { *m = SearchExtractionsRequest{} }
func (m *SearchExtractionsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchExtractionsRequest) ProtoMessage()    {}
func (*SearchExtractionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{0}
}

func (m *SearchExtractionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchExtractionsRequest.Unmarshal(m, b)
}
func (m *SearchExtractionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchExtractionsRequest.Marshal(b, m, deterministic)
}
func (m *SearchExtractionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchExtractionsRequest.Merge(m, src)
}
func (m *SearchExtractionsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchExtractionsRequest.Size(m)
}
func (m *SearchExtractionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchExtractionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchExtractionsRequest proto.InternalMessageInfo

func (m *SearchExtractionsRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchExtractionsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchExtractionsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchExtractionsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchExtractionsRequest) GetSampleId() string {
	if m != nil {
		return m.SampleId
	}
	return ""
}

func (m *SearchExtractionsRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

// This request maps to the URL `GET /extractions/{extraction_id}`.
type GetExtractionRequest struct {
	// The ID of the patient requested
	ExtractionId         string   `protobuf:"bytes,1,opt,name=extraction_id,json=extractionId,proto3" json:"extraction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetExtractionRequest) Reset()         { *m = GetExtractionRequest{} }
func (m *GetExtractionRequest) String() string { return proto.CompactTextString(m) }
func (*GetExtractionRequest) ProtoMessage()    {}
func (*GetExtractionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{1}
}

func (m *GetExtractionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExtractionRequest.Unmarshal(m, b)
}
func (m *GetExtractionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExtractionRequest.Marshal(b, m, deterministic)
}
func (m *GetExtractionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExtractionRequest.Merge(m, src)
}
func (m *GetExtractionRequest) XXX_Size() int {
	return xxx_messageInfo_GetExtractionRequest.Size(m)
}
func (m *GetExtractionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExtractionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetExtractionRequest proto.InternalMessageInfo

func (m *GetExtractionRequest) GetExtractionId() string {
	if m != nil {
		return m.ExtractionId
	}
	return ""
}

//This is the response from `POST /extractions/search` expressed as JSON.
type SearchExtractionsResponse struct {
	// The list of extractions.
	Extractions []*Extraction `protobuf:"bytes,1,rep,name=extractions,proto3" json:"extractions,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchExtractionsResponse) Reset()         { *m = SearchExtractionsResponse{} }
func (m *SearchExtractionsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchExtractionsResponse) ProtoMessage()    {}
func (*SearchExtractionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{2}
}

func (m *SearchExtractionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchExtractionsResponse.Unmarshal(m, b)
}
func (m *SearchExtractionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchExtractionsResponse.Marshal(b, m, deterministic)
}
func (m *SearchExtractionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchExtractionsResponse.Merge(m, src)
}
func (m *SearchExtractionsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchExtractionsResponse.Size(m)
}
func (m *SearchExtractionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchExtractionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchExtractionsResponse proto.InternalMessageInfo

func (m *SearchExtractionsResponse) GetExtractions() []*Extraction {
	if m != nil {
		return m.Extractions
	}
	return nil
}

func (m *SearchExtractionsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Sequencing
// ======================================================
// This request maps to the body of `POST /sequencing/search` as JSON.
type SearchSequencingRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Sequencing with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Option to filter for a sample id
	SampleId string `protobuf:"bytes,3,opt,name=sample_id,json=sampleId,proto3" json:"sample_id,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Filter on any of the fields
	Filters              []*Filter `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SearchSequencingRequest) Reset()         { *m = SearchSequencingRequest{} }
func (m *SearchSequencingRequest) String() string { return proto.CompactTextString(m) }
func (*SearchSequencingRequest) ProtoMessage()    {}
func (*SearchSequencingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{3}
}

func (m *SearchSequencingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSequencingRequest.Unmarshal(m, b)
}
func (m *SearchSequencingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSequencingRequest.Marshal(b, m, deterministic)
}
func (m *SearchSequencingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSequencingRequest.Merge(m, src)
}
func (m *SearchSequencingRequest) XXX_Size() int {
	return xxx_messageInfo_SearchSequencingRequest.Size(m)
}
func (m *SearchSequencingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSequencingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSequencingRequest proto.InternalMessageInfo

func (m *SearchSequencingRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchSequencingRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchSequencingRequest) GetSampleId() string {
	if m != nil {
		return m.SampleId
	}
	return ""
}

func (m *SearchSequencingRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchSequencingRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchSequencingRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

// This request maps to the URL `GET /sequencing/{sequencing_id}`.
type GetSequencingRequest struct {
	// The ID of the sequencing requested
	SequencingId         string   `protobuf:"bytes,1,opt,name=sequencing_id,json=sequencingId,proto3" json:"sequencing_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSequencingRequest) Reset()         { *m = GetSequencingRequest{} }
func (m *GetSequencingRequest) String() string { return proto.CompactTextString(m) }
func (*GetSequencingRequest) ProtoMessage()    {}
func (*GetSequencingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{4}
}

func (m *GetSequencingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSequencingRequest.Unmarshal(m, b)
}
func (m *GetSequencingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSequencingRequest.Marshal(b, m, deterministic)
}
func (m *GetSequencingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSequencingRequest.Merge(m, src)
}
func (m *GetSequencingRequest) XXX_Size() int {
	return xxx_messageInfo_GetSequencingRequest.Size(m)
}
func (m *GetSequencingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSequencingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSequencingRequest proto.InternalMessageInfo

func (m *GetSequencingRequest) GetSequencingId() string {
	if m != nil {
		return m.SequencingId
	}
	return ""
}

//This is the response from `POST /sequencing/search` expressed as JSON.
type SearchSequencingResponse struct {
	// The list of sequencing metadata.
	Sequencing []*Sequencing `protobuf:"bytes,1,rep,name=sequencing,proto3" json:"sequencing,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchSequencingResponse) Reset()         { *m = SearchSequencingResponse{} }
func (m *SearchSequencingResponse) String() string { return proto.CompactTextString(m) }
func (*SearchSequencingResponse) ProtoMessage()    {}
func (*SearchSequencingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{5}
}

func (m *SearchSequencingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSequencingResponse.Unmarshal(m, b)
}
func (m *SearchSequencingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSequencingResponse.Marshal(b, m, deterministic)
}
func (m *SearchSequencingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSequencingResponse.Merge(m, src)
}
func (m *SearchSequencingResponse) XXX_Size() int {
	return xxx_messageInfo_SearchSequencingResponse.Size(m)
}
func (m *SearchSequencingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSequencingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSequencingResponse proto.InternalMessageInfo

func (m *SearchSequencingResponse) GetSequencing() []*Sequencing {
	if m != nil {
		return m.Sequencing
	}
	return nil
}

func (m *SearchSequencingResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Alignment
// ======================================================
// This request maps to the body of `POST /alignments/search` as JSON.
type SearchAlignmentsRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Alignments with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Option to filter for a sample id
	SampleId string `protobuf:"bytes,3,opt,name=sample_id,json=sampleId,proto3" json:"sample_id,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Filter on any of the fields
	Filters              []*Filter `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SearchAlignmentsRequest) Reset()         { *m = SearchAlignmentsRequest{} }
func (m *SearchAlignmentsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchAlignmentsRequest) ProtoMessage()    {}
func (*SearchAlignmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{6}
}

func (m *SearchAlignmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchAlignmentsRequest.Unmarshal(m, b)
}
func (m *SearchAlignmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchAlignmentsRequest.Marshal(b, m, deterministic)
}
func (m *SearchAlignmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchAlignmentsRequest.Merge(m, src)
}
func (m *SearchAlignmentsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchAlignmentsRequest.Size(m)
}
func (m *SearchAlignmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchAlignmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchAlignmentsRequest proto.InternalMessageInfo

func (m *SearchAlignmentsRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchAlignmentsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchAlignmentsRequest) GetSampleId() string {
	if m != nil {
		return m.SampleId
	}
	return ""
}

func (m *SearchAlignmentsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchAlignmentsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchAlignmentsRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

// This request maps to the URL `GET /alignments/{alignment_id}`.
type GetAlignmentRequest struct {
	// The ID of the alignment requested
	AlignmentId          string   `protobuf:"bytes,1,opt,name=alignment_id,json=alignmentId,proto3" json:"alignment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAlignmentRequest) Reset()         { *m = GetAlignmentRequest{} }
func (m *GetAlignmentRequest) String() string { return proto.CompactTextString(m) }
func (*GetAlignmentRequest) ProtoMessage()    {}
func (*GetAlignmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{7}
}

func (m *GetAlignmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAlignmentRequest.Unmarshal(m, b)
}
func (m *GetAlignmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAlignmentRequest.Marshal(b, m, deterministic)
}
func (m *GetAlignmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAlignmentRequest.Merge(m, src)
}
func (m *GetAlignmentRequest) XXX_Size() int {
	return xxx_messageInfo_GetAlignmentRequest.Size(m)
}
func (m *GetAlignmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAlignmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAlignmentRequest proto.InternalMessageInfo

func (m *GetAlignmentRequest) GetAlignmentId() string {
	if m != nil {
		return m.AlignmentId
	}
	return ""
}

//This is the response from `POST /alignments/search` expressed as JSON.
type SearchAlignmentsResponse struct {
	// The list of alignments.
	Alignments []*Alignment `protobuf:"bytes,1,rep,name=alignments,proto3" json:"alignments,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchAlignmentsResponse) Reset()         { *m = SearchAlignmentsResponse{} }
func (m *SearchAlignmentsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchAlignmentsResponse) ProtoMessage()    {}
func (*SearchAlignmentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{8}
}

func (m *SearchAlignmentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchAlignmentsResponse.Unmarshal(m, b)
}
func (m *SearchAlignmentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchAlignmentsResponse.Marshal(b, m, deterministic)
}
func (m *SearchAlignmentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchAlignmentsResponse.Merge(m, src)
}
func (m *SearchAlignmentsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchAlignmentsResponse.Size(m)
}
func (m *SearchAlignmentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchAlignmentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchAlignmentsResponse proto.InternalMessageInfo

func (m *SearchAlignmentsResponse) GetAlignments() []*Alignment {
	if m != nil {
		return m.Alignments
	}
	return nil
}

func (m *SearchAlignmentsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// VariantCalling
// ======================================================
// This request maps to the body of `POST /variantcalling/search` as JSON.
type SearchVariantCallingRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns VariantCalling with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Option to filter for a sample id
	SampleId string `protobuf:"bytes,3,opt,name=sample_id,json=sampleId,proto3" json:"sample_id,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Filter on any of the fields
	Filters              []*Filter `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SearchVariantCallingRequest) Reset()         { *m = SearchVariantCallingRequest{} }
func (m *SearchVariantCallingRequest) String() string { return proto.CompactTextString(m) }
func (*SearchVariantCallingRequest) ProtoMessage()    {}
func (*SearchVariantCallingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{9}
}

func (m *SearchVariantCallingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchVariantCallingRequest.Unmarshal(m, b)
}
func (m *SearchVariantCallingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchVariantCallingRequest.Marshal(b, m, deterministic)
}
func (m *SearchVariantCallingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchVariantCallingRequest.Merge(m, src)
}
func (m *SearchVariantCallingRequest) XXX_Size() int {
	return xxx_messageInfo_SearchVariantCallingRequest.Size(m)
}
func (m *SearchVariantCallingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchVariantCallingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchVariantCallingRequest proto.InternalMessageInfo

func (m *SearchVariantCallingRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchVariantCallingRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchVariantCallingRequest) GetSampleId() string {
	if m != nil {
		return m.SampleId
	}
	return ""
}

func (m *SearchVariantCallingRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchVariantCallingRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchVariantCallingRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

// This request maps to the URL `GET /variantcalling/{variantcalling_id}`.
type GetVariantCallingRequest struct {
	// The ID of the variant calling requested
	VariantcallingId     string   `protobuf:"bytes,1,opt,name=variantcalling_id,json=variantcallingId,proto3" json:"variantcalling_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVariantCallingRequest) Reset()         { *m = GetVariantCallingRequest{} }
func (m *GetVariantCallingRequest) String() string { return proto.CompactTextString(m) }
func (*GetVariantCallingRequest) ProtoMessage()    {}
func (*GetVariantCallingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{10}
}

func (m *GetVariantCallingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVariantCallingRequest.Unmarshal(m, b)
}
func (m *GetVariantCallingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVariantCallingRequest.Marshal(b, m, deterministic)
}
func (m *GetVariantCallingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVariantCallingRequest.Merge(m, src)
}
func (m *GetVariantCallingRequest) XXX_Size() int {
	return xxx_messageInfo_GetVariantCallingRequest.Size(m)
}
func (m *GetVariantCallingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVariantCallingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVariantCallingRequest proto.InternalMessageInfo

func (m *GetVariantCallingRequest) GetVariantcallingId() string {
	if m != nil {
		return m.VariantcallingId
	}
	return ""
}

//This is the response from `POST /variantcalling/search` expressed as JSON.
type SearchVariantCallingResponse struct {
	// The list of variant calling metadata.
	Variantcalling []*VariantCalling `protobuf:"bytes,1,rep,name=variantcalling,proto3" json:"variantcalling,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchVariantCallingResponse) Reset()         { *m = SearchVariantCallingResponse{} }
func (m *SearchVariantCallingResponse) String() string { return proto.CompactTextString(m) }
func (*SearchVariantCallingResponse) ProtoMessage()    {}
func (*SearchVariantCallingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{11}
}

func (m *SearchVariantCallingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchVariantCallingResponse.Unmarshal(m, b)
}
func (m *SearchVariantCallingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchVariantCallingResponse.Marshal(b, m, deterministic)
}
func (m *SearchVariantCallingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchVariantCallingResponse.Merge(m, src)
}
func (m *SearchVariantCallingResponse) XXX_Size() int {
	return xxx_messageInfo_SearchVariantCallingResponse.Size(m)
}
func (m *SearchVariantCallingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchVariantCallingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchVariantCallingResponse proto.InternalMessageInfo

func (m *SearchVariantCallingResponse) GetVariantcalling() []*VariantCalling {
	if m != nil {
		return m.Variantcalling
	}
	return nil
}

func (m *SearchVariantCallingResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// FusionDetection
// ======================================================
// This request maps to the body of `POST /fusiondetection/search` as JSON.
type SearchFusionDetectionRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns FusionDetection with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Option to filter for a sample id
	SampleId string `protobuf:"bytes,3,opt,name=sample_id,json=sampleId,proto3" json:"sample_id,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Filter on any of the fields
	Filters              []*Filter `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SearchFusionDetectionRequest) Reset()         { *m = SearchFusionDetectionRequest{} }
func (m *SearchFusionDetectionRequest) String() string { return proto.CompactTextString(m) }
func (*SearchFusionDetectionRequest) ProtoMessage()    {}
func (*SearchFusionDetectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{12}
}

func (m *SearchFusionDetectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchFusionDetectionRequest.Unmarshal(m, b)
}
func (m *SearchFusionDetectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchFusionDetectionRequest.Marshal(b, m, deterministic)
}
func (m *SearchFusionDetectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchFusionDetectionRequest.Merge(m, src)
}
func (m *SearchFusionDetectionRequest) XXX_Size() int {
	return xxx_messageInfo_SearchFusionDetectionRequest.Size(m)
}
func (m *SearchFusionDetectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchFusionDetectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchFusionDetectionRequest proto.InternalMessageInfo

func (m *SearchFusionDetectionRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchFusionDetectionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchFusionDetectionRequest) GetSampleId() string {
	if m != nil {
		return m.SampleId
	}
	return ""
}

func (m *SearchFusionDetectionRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchFusionDetectionRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchFusionDetectionRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

// This request maps to the URL `GET /fusiondetection/{fusiondetection_id}`.
type GetFusionDetectionRequest struct {
	// The ID of the fusion/sv detection requested
	FusiondetectionId    string   `protobuf:"bytes,1,opt,name=fusiondetection_id,json=fusiondetectionId,proto3" json:"fusiondetection_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFusionDetectionRequest) Reset()         { *m = GetFusionDetectionRequest{} }
func (m *GetFusionDetectionRequest) String() string { return proto.CompactTextString(m) }
func (*GetFusionDetectionRequest) ProtoMessage()    {}
func (*GetFusionDetectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{13}
}

func (m *GetFusionDetectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFusionDetectionRequest.Unmarshal(m, b)
}
func (m *GetFusionDetectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFusionDetectionRequest.Marshal(b, m, deterministic)
}
func (m *GetFusionDetectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFusionDetectionRequest.Merge(m, src)
}
func (m *GetFusionDetectionRequest) XXX_Size() int {
	return xxx_messageInfo_GetFusionDetectionRequest.Size(m)
}
func (m *GetFusionDetectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFusionDetectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFusionDetectionRequest proto.InternalMessageInfo

func (m *GetFusionDetectionRequest) GetFusiondetectionId() string {
	if m != nil {
		return m.FusiondetectionId
	}
	return ""
}

//This is the response from `POST /fusiondetection/search` expressed as JSON.
type SearchFusionDetectionResponse struct {
	// The list of fusion/sv detections.
	Fusiondetection []*FusionDetection `protobuf:"bytes,1,rep,name=fusiondetection,proto3" json:"fusiondetection,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchFusionDetectionResponse) Reset()         { *m = SearchFusionDetectionResponse{} }
func (m *SearchFusionDetectionResponse) String() string { return proto.CompactTextString(m) }
func (*SearchFusionDetectionResponse) ProtoMessage()    {}
func (*SearchFusionDetectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{14}
}

func (m *SearchFusionDetectionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchFusionDetectionResponse.Unmarshal(m, b)
}
func (m *SearchFusionDetectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchFusionDetectionResponse.Marshal(b, m, deterministic)
}
func (m *SearchFusionDetectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchFusionDetectionResponse.Merge(m, src)
}
func (m *SearchFusionDetectionResponse) XXX_Size() int {
	return xxx_messageInfo_SearchFusionDetectionResponse.Size(m)
}
func (m *SearchFusionDetectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchFusionDetectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchFusionDetectionResponse proto.InternalMessageInfo

func (m *SearchFusionDetectionResponse) GetFusiondetection() []*FusionDetection {
	if m != nil {
		return m.Fusiondetection
	}
	return nil
}

func (m *SearchFusionDetectionResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// ExpressionAnalysis
// ======================================================
// This request maps to the body of `POST /expressionanalysis/search` as JSON.
type SearchExpressionAnalysisRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Treatments with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Option to filter for a sample id
	SampleId string `protobuf:"bytes,3,opt,name=sample_id,json=sampleId,proto3" json:"sample_id,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Filter on any of the fields
	Filters              []*Filter `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SearchExpressionAnalysisRequest) Reset()         { *m = SearchExpressionAnalysisRequest{} }
func (m *SearchExpressionAnalysisRequest) String() string { return proto.CompactTextString(m) }
func (*SearchExpressionAnalysisRequest) ProtoMessage()    {}
func (*SearchExpressionAnalysisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{15}
}

func (m *SearchExpressionAnalysisRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchExpressionAnalysisRequest.Unmarshal(m, b)
}
func (m *SearchExpressionAnalysisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchExpressionAnalysisRequest.Marshal(b, m, deterministic)
}
func (m *SearchExpressionAnalysisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchExpressionAnalysisRequest.Merge(m, src)
}
func (m *SearchExpressionAnalysisRequest) XXX_Size() int {
	return xxx_messageInfo_SearchExpressionAnalysisRequest.Size(m)
}
func (m *SearchExpressionAnalysisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchExpressionAnalysisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchExpressionAnalysisRequest proto.InternalMessageInfo

func (m *SearchExpressionAnalysisRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchExpressionAnalysisRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchExpressionAnalysisRequest) GetSampleId() string {
	if m != nil {
		return m.SampleId
	}
	return ""
}

func (m *SearchExpressionAnalysisRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchExpressionAnalysisRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchExpressionAnalysisRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

// This request maps to the URL `GET /expressionanalysis/{expressionanalysis_id}`.
type GetExpressionAnalysisRequest struct {
	// The ID of the expressionanalysis requested
	ExpressionanalysisId string   `protobuf:"bytes,1,opt,name=expressionanalysis_id,json=expressionanalysisId,proto3" json:"expressionanalysis_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetExpressionAnalysisRequest) Reset()         { *m = GetExpressionAnalysisRequest{} }
func (m *GetExpressionAnalysisRequest) String() string { return proto.CompactTextString(m) }
func (*GetExpressionAnalysisRequest) ProtoMessage()    {}
func (*GetExpressionAnalysisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{16}
}

func (m *GetExpressionAnalysisRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExpressionAnalysisRequest.Unmarshal(m, b)
}
func (m *GetExpressionAnalysisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExpressionAnalysisRequest.Marshal(b, m, deterministic)
}
func (m *GetExpressionAnalysisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExpressionAnalysisRequest.Merge(m, src)
}
func (m *GetExpressionAnalysisRequest) XXX_Size() int {
	return xxx_messageInfo_GetExpressionAnalysisRequest.Size(m)
}
func (m *GetExpressionAnalysisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExpressionAnalysisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetExpressionAnalysisRequest proto.InternalMessageInfo

func (m *GetExpressionAnalysisRequest) GetExpressionanalysisId() string {
	if m != nil {
		return m.ExpressionanalysisId
	}
	return ""
}

//This is the response from `POST /expressionanalysis/search` expressed as JSON.
type SearchExpressionAnalysisResponse struct {
	// The list of expression analysis.
	Expressionanalysis []*ExpressionAnalysis `protobuf:"bytes,1,rep,name=expressionanalysis,proto3" json:"expressionanalysis,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchExpressionAnalysisResponse) Reset()         { *m = SearchExpressionAnalysisResponse{} }
func (m *SearchExpressionAnalysisResponse) String() string { return proto.CompactTextString(m) }
func (*SearchExpressionAnalysisResponse) ProtoMessage()    {}
func (*SearchExpressionAnalysisResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb5a4019caa4e1f6, []int{17}
}

func (m *SearchExpressionAnalysisResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchExpressionAnalysisResponse.Unmarshal(m, b)
}
func (m *SearchExpressionAnalysisResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchExpressionAnalysisResponse.Marshal(b, m, deterministic)
}
func (m *SearchExpressionAnalysisResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchExpressionAnalysisResponse.Merge(m, src)
}
func (m *SearchExpressionAnalysisResponse) XXX_Size() int {
	return xxx_messageInfo_SearchExpressionAnalysisResponse.Size(m)
}
func (m *SearchExpressionAnalysisResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchExpressionAnalysisResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchExpressionAnalysisResponse proto.InternalMessageInfo

func (m *SearchExpressionAnalysisResponse) GetExpressionanalysis() []*ExpressionAnalysis {
	if m != nil {
		return m.Expressionanalysis
	}
	return nil
}

func (m *SearchExpressionAnalysisResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func init() {
	proto.RegisterType((*SearchExtractionsRequest)(nil), "candig.SearchExtractionsRequest")
	proto.RegisterType((*GetExtractionRequest)(nil), "candig.GetExtractionRequest")
	proto.RegisterType((*SearchExtractionsResponse)(nil), "candig.SearchExtractionsResponse")
	proto.RegisterType((*SearchSequencingRequest)(nil), "candig.SearchSequencingRequest")
	proto.RegisterType((*GetSequencingRequest)(nil), "candig.GetSequencingRequest")
	proto.RegisterType((*SearchSequencingResponse)(nil), "candig.SearchSequencingResponse")
	proto.RegisterType((*SearchAlignmentsRequest)(nil), "candig.SearchAlignmentsRequest")
	proto.RegisterType((*GetAlignmentRequest)(nil), "candig.GetAlignmentRequest")
	proto.RegisterType((*SearchAlignmentsResponse)(nil), "candig.SearchAlignmentsResponse")
	proto.RegisterType((*SearchVariantCallingRequest)(nil), "candig.SearchVariantCallingRequest")
	proto.RegisterType((*GetVariantCallingRequest)(nil), "candig.GetVariantCallingRequest")
	proto.RegisterType((*SearchVariantCallingResponse)(nil), "candig.SearchVariantCallingResponse")
	proto.RegisterType((*SearchFusionDetectionRequest)(nil), "candig.SearchFusionDetectionRequest")
	proto.RegisterType((*GetFusionDetectionRequest)(nil), "candig.GetFusionDetectionRequest")
	proto.RegisterType((*SearchFusionDetectionResponse)(nil), "candig.SearchFusionDetectionResponse")
	proto.RegisterType((*SearchExpressionAnalysisRequest)(nil), "candig.SearchExpressionAnalysisRequest")
	proto.RegisterType((*GetExpressionAnalysisRequest)(nil), "candig.GetExpressionAnalysisRequest")
	proto.RegisterType((*SearchExpressionAnalysisResponse)(nil), "candig.SearchExpressionAnalysisResponse")
}

func init() {
	proto.RegisterFile("candig/pipeline_metadata_service.proto", fileDescriptor_cb5a4019caa4e1f6)
}

var fileDescriptor_cb5a4019caa4e1f6 = []byte{
	// 1043 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0x4f, 0x6f, 0x1b, 0x45,
	0x14, 0xd7, 0x36, 0x7f, 0x68, 0x5e, 0x92, 0xb6, 0x9e, 0xa6, 0x8d, 0xb3, 0x49, 0x1a, 0x7b, 0x9c,
	0x04, 0x93, 0x06, 0xbb, 0xb8, 0x39, 0x54, 0x45, 0x42, 0x8a, 0x80, 0x5a, 0xae, 0x84, 0x54, 0xc5,
	0x88, 0xab, 0xb5, 0x78, 0xa7, 0x66, 0x85, 0x3d, 0x6b, 0xbc, 0x93, 0xa8, 0xad, 0x65, 0x21, 0x38,
	0xf4, 0x00, 0x27, 0x84, 0xe0, 0xc2, 0xc7, 0xe1, 0x03, 0x80, 0x54, 0x24, 0xbe, 0x00, 0x1f, 0x04,
	0xed, 0xec, 0x8c, 0x67, 0x76, 0x76, 0xd6, 0x09, 0xf4, 0xe4, 0x9b, 0xf5, 0xde, 0x9b, 0xf9, 0xbd,
	0x37, 0xbf, 0x79, 0xf3, 0x7e, 0x6b, 0x38, 0xec, 0x7a, 0xd4, 0x0f, 0x7a, 0xf5, 0x61, 0x30, 0x24,
	0xfd, 0x80, 0x92, 0xce, 0x80, 0x30, 0xcf, 0xf7, 0x98, 0xd7, 0x89, 0xc8, 0xe8, 0x22, 0xe8, 0x92,
	0xda, 0x70, 0x14, 0xb2, 0x10, 0x2d, 0x27, 0x71, 0xee, 0xbd, 0xbc, 0xf8, 0x24, 0xce, 0xbd, 0x2d,
	0xfc, 0xdd, 0x70, 0x30, 0x08, 0xa9, 0x30, 0xee, 0xf4, 0xc2, 0xb0, 0xd7, 0x27, 0x75, 0x6f, 0x18,
	0xd4, 0x3d, 0x4a, 0x43, 0xe6, 0xb1, 0x20, 0xa4, 0x51, 0xe2, 0xc5, 0x7f, 0x3a, 0x50, 0x6c, 0x13,
	0x6f, 0xd4, 0xfd, 0xea, 0xd3, 0x17, 0x6c, 0xe4, 0x75, 0xb9, 0xef, 0x8c, 0x7c, 0x73, 0x4e, 0x22,
	0x86, 0x76, 0x01, 0xe2, 0xdd, 0x23, 0xc2, 0x3a, 0x81, 0x5f, 0x74, 0x4a, 0x4e, 0x75, 0xe5, 0x6c,
	0x45, 0x58, 0x5a, 0x3e, 0x42, 0xb0, 0x48, 0xbd, 0x01, 0x29, 0x5e, 0xe3, 0x0e, 0xfe, 0x1b, 0x6d,
	0xc3, 0xca, 0xd0, 0xeb, 0x91, 0x4e, 0x14, 0xbc, 0x22, 0xc5, 0x85, 0x92, 0x53, 0x5d, 0x3a, 0xbb,
	0x1e, 0x1b, 0xda, 0xc1, 0x2b, 0x12, 0xef, 0xc7, 0x9d, 0x2c, 0xfc, 0x9a, 0xd0, 0xe2, 0x62, 0xb2,
	0x5f, 0x6c, 0xf9, 0x3c, 0x36, 0xc4, 0x6b, 0x23, 0x6f, 0x30, 0xec, 0x93, 0x18, 0x6d, 0x89, 0x7b,
	0xaf, 0x27, 0x86, 0x96, 0x8f, 0xaa, 0xf0, 0xce, 0xf3, 0xa0, 0xcf, 0xc8, 0x28, 0x2a, 0x2e, 0x97,
	0x16, 0xaa, 0xab, 0x8d, 0x1b, 0xb5, 0xa4, 0xda, 0xda, 0x13, 0x6e, 0x3e, 0x93, 0x6e, 0xfc, 0x21,
	0x6c, 0x34, 0x09, 0x53, 0xe5, 0xc8, 0x6a, 0x2a, 0xb0, 0x4e, 0xa6, 0x46, 0x55, 0xd0, 0x9a, 0x32,
	0xb6, 0x7c, 0xfc, 0x12, 0xb6, 0x2c, 0xc7, 0x11, 0x0d, 0x43, 0x1a, 0x11, 0x74, 0x02, 0xab, 0x2a,
	0x38, 0x2a, 0x3a, 0x3c, 0x0f, 0x24, 0xf3, 0xd0, 0x10, 0xf5, 0x30, 0x74, 0x08, 0x37, 0x29, 0x79,
	0xc1, 0x3a, 0x5a, 0xe9, 0xc9, 0x89, 0xad, 0xc7, 0xe6, 0x67, 0xb2, 0x7c, 0xfc, 0x87, 0x03, 0x9b,
	0x09, 0x76, 0x3b, 0xce, 0x98, 0x76, 0x03, 0xda, 0x7b, 0x3b, 0x26, 0xd4, 0x69, 0x2e, 0x18, 0xa7,
	0x99, 0xa2, 0x69, 0x71, 0x26, 0x4d, 0x4b, 0x26, 0x4d, 0xff, 0x95, 0x89, 0x6c, 0x35, 0x15, 0x58,
	0x8f, 0xa6, 0x46, 0x8d, 0x09, 0x65, 0x6c, 0xf9, 0xf8, 0x42, 0x5e, 0x4c, 0x7d, 0xbd, 0x20, 0xa2,
	0x01, 0xa0, 0x62, 0x4d, 0x1e, 0xb4, 0x78, 0x2d, 0xea, 0x7f, 0xd0, 0x70, 0xda, 0x0f, 0x7a, 0x74,
	0x40, 0x28, 0x8b, 0xe6, 0x9b, 0x86, 0x47, 0x70, 0xbb, 0x49, 0xd8, 0xb4, 0x1a, 0x59, 0x4c, 0x19,
	0xd6, 0x3c, 0x69, 0x53, 0xe5, 0xac, 0x4e, 0x6d, 0x2d, 0x1f, 0x9f, 0x4b, 0x0e, 0xf4, 0xa3, 0x10,
	0x1c, 0x7c, 0x00, 0x30, 0x0d, 0x95, 0xbd, 0x50, 0x90, 0x29, 0x28, 0x30, 0x2d, 0xe8, 0xca, 0x14,
	0xbc, 0x71, 0x60, 0x3b, 0xc1, 0xfd, 0xc2, 0x1b, 0x05, 0x1e, 0x65, 0x1f, 0x7b, 0xfd, 0xfe, 0xdc,
	0x77, 0x43, 0x13, 0x8a, 0x4d, 0xc2, 0xec, 0x15, 0xdd, 0x87, 0xc2, 0x45, 0xe2, 0xe8, 0x26, 0x0e,
	0x55, 0xd8, 0xad, 0xb4, 0xa3, 0xe5, 0xe3, 0xd7, 0x0e, 0xec, 0xd8, 0x8f, 0x47, 0x50, 0xf3, 0x11,
	0xdc, 0x48, 0x2f, 0x12, 0xf4, 0xdc, 0x95, 0xa9, 0x19, 0xeb, 0x8c, 0xe8, 0x2b, 0xf3, 0xf4, 0xd7,
	0x34, 0x91, 0x27, 0xe7, 0x51, 0x10, 0xd2, 0x4f, 0x08, 0x23, 0xa9, 0x27, 0x77, 0x3e, 0x89, 0x7a,
	0x0a, 0x5b, 0x4d, 0xc2, 0x72, 0x4a, 0x7a, 0x1f, 0xd0, 0x73, 0xee, 0xf1, 0xa5, 0x47, 0x95, 0x56,
	0x30, 0x3c, 0x2d, 0x1f, 0xff, 0xe0, 0xc0, 0x6e, 0xce, 0x11, 0x09, 0xb2, 0x4e, 0xe1, 0xa6, 0xb1,
	0x4c, 0xb0, 0xb5, 0x39, 0xcd, 0xcf, 0x58, 0x69, 0xc6, 0x5f, 0x99, 0xaf, 0xbf, 0x1d, 0xd8, 0x93,
	0xd3, 0x6d, 0x38, 0x22, 0x51, 0xbc, 0xcb, 0x29, 0xf5, 0xfa, 0x2f, 0xa3, 0x60, 0xce, 0x9f, 0xb8,
	0x36, 0xec, 0xf0, 0x99, 0x9f, 0x57, 0xd5, 0x43, 0xb8, 0x43, 0xa6, 0x4e, 0x4f, 0x38, 0x55, 0x81,
	0x1b, 0x59, 0x67, 0xcb, 0xc7, 0xbf, 0x3a, 0x50, 0xca, 0x3f, 0x2e, 0x41, 0xdf, 0x53, 0x40, 0xd9,
	0xc5, 0x82, 0x41, 0x57, 0x49, 0x83, 0xcc, 0x7a, 0xcb, 0xaa, 0xab, 0xf2, 0xd8, 0xf8, 0x7d, 0x0d,
	0x36, 0x9f, 0x09, 0x0d, 0xf8, 0x99, 0x90, 0x80, 0xed, 0x44, 0x31, 0xa2, 0x6f, 0xa1, 0x90, 0x11,
	0x30, 0xa8, 0xa4, 0x66, 0xa3, 0x5d, 0xea, 0xb9, 0xe5, 0x19, 0x11, 0x49, 0xa5, 0xf8, 0xe0, 0xfb,
	0x37, 0xff, 0xfc, 0x7c, 0x6d, 0x0f, 0xbb, 0xf5, 0x8b, 0x07, 0xb5, 0x47, 0xb5, 0x07, 0x75, 0x4d,
	0xe4, 0xd4, 0x23, 0xbe, 0xec, 0xb1, 0x73, 0x84, 0xc6, 0x70, 0xcb, 0x9c, 0xdb, 0x68, 0x2f, 0xbd,
	0x7b, 0x46, 0x11, 0xb8, 0xa5, 0xfc, 0x00, 0x81, 0xbe, 0xcf, 0xd1, 0xef, 0xe1, 0x2d, 0x89, 0xae,
	0x46, 0xbb, 0x0d, 0x5c, 0x0d, 0x2c, 0x13, 0x3c, 0x33, 0xd5, 0x4d, 0xf0, 0xec, 0xac, 0xcb, 0x82,
	0xab, 0xa1, 0xa6, 0x81, 0xff, 0xe8, 0xc0, 0x86, 0xed, 0x5d, 0x46, 0x95, 0x34, 0x80, 0x75, 0x04,
	0xb8, 0xfb, 0xb3, 0x83, 0x44, 0x26, 0x55, 0x9e, 0x09, 0xc6, 0xbb, 0x32, 0x93, 0xf4, 0xd3, 0xad,
	0x65, 0xf3, 0x93, 0x03, 0x77, 0xad, 0x2f, 0x4f, 0x84, 0x0c, 0x28, 0xfb, 0x4b, 0xe7, 0x1e, 0x5c,
	0x12, 0x25, 0x32, 0x3a, 0xe2, 0x19, 0xed, 0xe3, 0x3d, 0x99, 0x91, 0xf1, 0x3a, 0xe9, 0x27, 0xf4,
	0x9b, 0xf6, 0xb5, 0x61, 0x76, 0x04, 0x7a, 0xd7, 0xbc, 0x82, 0x39, 0xcd, 0xec, 0x56, 0x2f, 0x0f,
	0x14, 0xb9, 0x1d, 0xf3, 0xdc, 0x0e, 0x71, 0x59, 0x5d, 0x59, 0xb3, 0xe9, 0xb4, 0xec, 0x28, 0xac,
	0xa7, 0x3e, 0x1c, 0xd0, 0x8e, 0x04, 0xb2, 0x7d, 0x4f, 0xb8, 0x16, 0xe1, 0x8f, 0xef, 0x73, 0xc0,
	0x03, 0x54, 0xb1, 0xf5, 0xc8, 0x38, 0xf5, 0xf9, 0x31, 0x41, 0x03, 0x8e, 0xa7, 0xb5, 0x89, 0x8e,
	0x97, 0xed, 0x11, 0x8b, 0xc0, 0x95, 0x87, 0x8f, 0xb0, 0xa5, 0x2b, 0xc6, 0x29, 0x8d, 0x3d, 0x41,
	0x01, 0xac, 0xe9, 0x32, 0x10, 0x6d, 0x6b, 0x68, 0xa6, 0x38, 0x74, 0xb3, 0x4a, 0x0e, 0xbf, 0xc7,
	0xb1, 0x2a, 0xa8, 0x6c, 0x69, 0x82, 0xb1, 0xae, 0x24, 0x27, 0xe8, 0x3b, 0x07, 0x0a, 0x19, 0xad,
	0xa3, 0x5e, 0xa1, 0x3c, 0x19, 0xe4, 0xe6, 0x08, 0x14, 0xdc, 0xe0, 0xd0, 0xc7, 0xe8, 0x28, 0xe7,
	0xd6, 0x8f, 0x33, 0xe2, 0x69, 0x82, 0x5e, 0x3b, 0x80, 0xb2, 0x63, 0x1c, 0x95, 0xb5, 0x24, 0x72,
	0x2e, 0x7e, 0xde, 0xe0, 0xc5, 0x27, 0x3c, 0x8d, 0x1a, 0x3a, 0xce, 0xb9, 0xea, 0xf5, 0x71, 0x56,
	0x1a, 0x4c, 0xd0, 0x2f, 0x0e, 0xdc, 0xb1, 0x0e, 0x27, 0xd5, 0x87, 0xb3, 0x66, 0x97, 0x3b, 0x63,
	0x8a, 0xe0, 0xc7, 0x3c, 0xa3, 0x13, 0xd4, 0x98, 0x71, 0xc1, 0xc7, 0xd6, 0xc9, 0x37, 0xf9, 0x72,
	0x99, 0xff, 0x03, 0xf0, 0xf0, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x31, 0xee, 0xd3, 0x08, 0x86,
	0x10, 0x00, 0x00,
}
