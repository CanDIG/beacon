// Code generated by protoc-gen-go. DO NOT EDIT.
// source: candig/clinical_metadata_service.proto

package candig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google/api"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ======================================================
// Patient
// ======================================================
// This request maps to the body of `POST /patients/search` as JSON.
type SearchPatientsRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Patients with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchPatientsRequest) Reset()         { *m = SearchPatientsRequest{} }
func (m *SearchPatientsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchPatientsRequest) ProtoMessage()    {}
func (*SearchPatientsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{0}
}

func (m *SearchPatientsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchPatientsRequest.Unmarshal(m, b)
}
func (m *SearchPatientsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchPatientsRequest.Marshal(b, m, deterministic)
}
func (m *SearchPatientsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchPatientsRequest.Merge(m, src)
}
func (m *SearchPatientsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchPatientsRequest.Size(m)
}
func (m *SearchPatientsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchPatientsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchPatientsRequest proto.InternalMessageInfo

func (m *SearchPatientsRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchPatientsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchPatientsRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchPatientsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchPatientsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /patients/{patient_id}`.
type GetPatientRequest struct {
	// The ID of the patient requested
	PatientId            string   `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPatientRequest) Reset()         { *m = GetPatientRequest{} }
func (m *GetPatientRequest) String() string { return proto.CompactTextString(m) }
func (*GetPatientRequest) ProtoMessage()    {}
func (*GetPatientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{1}
}

func (m *GetPatientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPatientRequest.Unmarshal(m, b)
}
func (m *GetPatientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPatientRequest.Marshal(b, m, deterministic)
}
func (m *GetPatientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPatientRequest.Merge(m, src)
}
func (m *GetPatientRequest) XXX_Size() int {
	return xxx_messageInfo_GetPatientRequest.Size(m)
}
func (m *GetPatientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPatientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPatientRequest proto.InternalMessageInfo

func (m *GetPatientRequest) GetPatientId() string {
	if m != nil {
		return m.PatientId
	}
	return ""
}

//This is the response from `POST /patients/search` expressed as JSON.
type SearchPatientsResponse struct {
	// The list of patients.
	Patients []*Patient `protobuf:"bytes,1,rep,name=patients,proto3" json:"patients,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchPatientsResponse) Reset()         { *m = SearchPatientsResponse{} }
func (m *SearchPatientsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchPatientsResponse) ProtoMessage()    {}
func (*SearchPatientsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{2}
}

func (m *SearchPatientsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchPatientsResponse.Unmarshal(m, b)
}
func (m *SearchPatientsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchPatientsResponse.Marshal(b, m, deterministic)
}
func (m *SearchPatientsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchPatientsResponse.Merge(m, src)
}
func (m *SearchPatientsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchPatientsResponse.Size(m)
}
func (m *SearchPatientsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchPatientsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchPatientsResponse proto.InternalMessageInfo

func (m *SearchPatientsResponse) GetPatients() []*Patient {
	if m != nil {
		return m.Patients
	}
	return nil
}

func (m *SearchPatientsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Enrollment
// ======================================================
// This request maps to the body of `POST /enrollments/search` as JSON.
type SearchEnrollmentsRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Enrollments with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchEnrollmentsRequest) Reset()         { *m = SearchEnrollmentsRequest{} }
func (m *SearchEnrollmentsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchEnrollmentsRequest) ProtoMessage()    {}
func (*SearchEnrollmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{3}
}

func (m *SearchEnrollmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchEnrollmentsRequest.Unmarshal(m, b)
}
func (m *SearchEnrollmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchEnrollmentsRequest.Marshal(b, m, deterministic)
}
func (m *SearchEnrollmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchEnrollmentsRequest.Merge(m, src)
}
func (m *SearchEnrollmentsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchEnrollmentsRequest.Size(m)
}
func (m *SearchEnrollmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchEnrollmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchEnrollmentsRequest proto.InternalMessageInfo

func (m *SearchEnrollmentsRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchEnrollmentsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchEnrollmentsRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchEnrollmentsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchEnrollmentsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /enrollments/{enrollment_id}`.
type GetEnrollmentRequest struct {
	// The ID of the enrollment requested
	EnrollmentId         string   `protobuf:"bytes,1,opt,name=enrollment_id,json=enrollmentId,proto3" json:"enrollment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEnrollmentRequest) Reset()         { *m = GetEnrollmentRequest{} }
func (m *GetEnrollmentRequest) String() string { return proto.CompactTextString(m) }
func (*GetEnrollmentRequest) ProtoMessage()    {}
func (*GetEnrollmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{4}
}

func (m *GetEnrollmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEnrollmentRequest.Unmarshal(m, b)
}
func (m *GetEnrollmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEnrollmentRequest.Marshal(b, m, deterministic)
}
func (m *GetEnrollmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEnrollmentRequest.Merge(m, src)
}
func (m *GetEnrollmentRequest) XXX_Size() int {
	return xxx_messageInfo_GetEnrollmentRequest.Size(m)
}
func (m *GetEnrollmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEnrollmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEnrollmentRequest proto.InternalMessageInfo

func (m *GetEnrollmentRequest) GetEnrollmentId() string {
	if m != nil {
		return m.EnrollmentId
	}
	return ""
}

//This is the response from `POST /enrollments/search` expressed as JSON.
type SearchEnrollmentsResponse struct {
	// The list of enrollments.
	Enrollments []*Enrollment `protobuf:"bytes,1,rep,name=enrollments,proto3" json:"enrollments,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchEnrollmentsResponse) Reset()         { *m = SearchEnrollmentsResponse{} }
func (m *SearchEnrollmentsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchEnrollmentsResponse) ProtoMessage()    {}
func (*SearchEnrollmentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{5}
}

func (m *SearchEnrollmentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchEnrollmentsResponse.Unmarshal(m, b)
}
func (m *SearchEnrollmentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchEnrollmentsResponse.Marshal(b, m, deterministic)
}
func (m *SearchEnrollmentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchEnrollmentsResponse.Merge(m, src)
}
func (m *SearchEnrollmentsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchEnrollmentsResponse.Size(m)
}
func (m *SearchEnrollmentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchEnrollmentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchEnrollmentsResponse proto.InternalMessageInfo

func (m *SearchEnrollmentsResponse) GetEnrollments() []*Enrollment {
	if m != nil {
		return m.Enrollments
	}
	return nil
}

func (m *SearchEnrollmentsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Consent
// ======================================================
// This request maps to the body of `POST /consents/search` as JSON.
type SearchConsentsRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Consents with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchConsentsRequest) Reset()         { *m = SearchConsentsRequest{} }
func (m *SearchConsentsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchConsentsRequest) ProtoMessage()    {}
func (*SearchConsentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{6}
}

func (m *SearchConsentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchConsentsRequest.Unmarshal(m, b)
}
func (m *SearchConsentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchConsentsRequest.Marshal(b, m, deterministic)
}
func (m *SearchConsentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchConsentsRequest.Merge(m, src)
}
func (m *SearchConsentsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchConsentsRequest.Size(m)
}
func (m *SearchConsentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchConsentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchConsentsRequest proto.InternalMessageInfo

func (m *SearchConsentsRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchConsentsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchConsentsRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchConsentsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchConsentsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /consents/{consent_id}`.
type GetConsentRequest struct {
	// The ID of the consent requested
	ConsentId            string   `protobuf:"bytes,1,opt,name=consent_id,json=consentId,proto3" json:"consent_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConsentRequest) Reset()         { *m = GetConsentRequest{} }
func (m *GetConsentRequest) String() string { return proto.CompactTextString(m) }
func (*GetConsentRequest) ProtoMessage()    {}
func (*GetConsentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{7}
}

func (m *GetConsentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConsentRequest.Unmarshal(m, b)
}
func (m *GetConsentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConsentRequest.Marshal(b, m, deterministic)
}
func (m *GetConsentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConsentRequest.Merge(m, src)
}
func (m *GetConsentRequest) XXX_Size() int {
	return xxx_messageInfo_GetConsentRequest.Size(m)
}
func (m *GetConsentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConsentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetConsentRequest proto.InternalMessageInfo

func (m *GetConsentRequest) GetConsentId() string {
	if m != nil {
		return m.ConsentId
	}
	return ""
}

//This is the response from `POST /consents/search` expressed as JSON.
type SearchConsentsResponse struct {
	// The list of consents.
	Consents []*Consent `protobuf:"bytes,1,rep,name=consents,proto3" json:"consents,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchConsentsResponse) Reset()         { *m = SearchConsentsResponse{} }
func (m *SearchConsentsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchConsentsResponse) ProtoMessage()    {}
func (*SearchConsentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{8}
}

func (m *SearchConsentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchConsentsResponse.Unmarshal(m, b)
}
func (m *SearchConsentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchConsentsResponse.Marshal(b, m, deterministic)
}
func (m *SearchConsentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchConsentsResponse.Merge(m, src)
}
func (m *SearchConsentsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchConsentsResponse.Size(m)
}
func (m *SearchConsentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchConsentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchConsentsResponse proto.InternalMessageInfo

func (m *SearchConsentsResponse) GetConsents() []*Consent {
	if m != nil {
		return m.Consents
	}
	return nil
}

func (m *SearchConsentsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Diagnosis
// ======================================================
// This request maps to the body of `POST /diagnoses/search` as JSON.
type SearchDiagnosesRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Diagnoses with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchDiagnosesRequest) Reset()         { *m = SearchDiagnosesRequest{} }
func (m *SearchDiagnosesRequest) String() string { return proto.CompactTextString(m) }
func (*SearchDiagnosesRequest) ProtoMessage()    {}
func (*SearchDiagnosesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{9}
}

func (m *SearchDiagnosesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchDiagnosesRequest.Unmarshal(m, b)
}
func (m *SearchDiagnosesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchDiagnosesRequest.Marshal(b, m, deterministic)
}
func (m *SearchDiagnosesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchDiagnosesRequest.Merge(m, src)
}
func (m *SearchDiagnosesRequest) XXX_Size() int {
	return xxx_messageInfo_SearchDiagnosesRequest.Size(m)
}
func (m *SearchDiagnosesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchDiagnosesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchDiagnosesRequest proto.InternalMessageInfo

func (m *SearchDiagnosesRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchDiagnosesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchDiagnosesRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchDiagnosesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchDiagnosesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /diagnoses/{diagnosis_id}`.
type GetDiagnosisRequest struct {
	// The ID of the diagnosis requested
	DiagnosisId          string   `protobuf:"bytes,1,opt,name=diagnosis_id,json=diagnosisId,proto3" json:"diagnosis_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDiagnosisRequest) Reset()         { *m = GetDiagnosisRequest{} }
func (m *GetDiagnosisRequest) String() string { return proto.CompactTextString(m) }
func (*GetDiagnosisRequest) ProtoMessage()    {}
func (*GetDiagnosisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{10}
}

func (m *GetDiagnosisRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDiagnosisRequest.Unmarshal(m, b)
}
func (m *GetDiagnosisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDiagnosisRequest.Marshal(b, m, deterministic)
}
func (m *GetDiagnosisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDiagnosisRequest.Merge(m, src)
}
func (m *GetDiagnosisRequest) XXX_Size() int {
	return xxx_messageInfo_GetDiagnosisRequest.Size(m)
}
func (m *GetDiagnosisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDiagnosisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDiagnosisRequest proto.InternalMessageInfo

func (m *GetDiagnosisRequest) GetDiagnosisId() string {
	if m != nil {
		return m.DiagnosisId
	}
	return ""
}

//This is the response from `POST /diagnoses/search` expressed as JSON.
type SearchDiagnosesResponse struct {
	// The list of diagnoses.
	Diagnoses []*Diagnosis `protobuf:"bytes,1,rep,name=diagnoses,proto3" json:"diagnoses,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchDiagnosesResponse) Reset()         { *m = SearchDiagnosesResponse{} }
func (m *SearchDiagnosesResponse) String() string { return proto.CompactTextString(m) }
func (*SearchDiagnosesResponse) ProtoMessage()    {}
func (*SearchDiagnosesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{11}
}

func (m *SearchDiagnosesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchDiagnosesResponse.Unmarshal(m, b)
}
func (m *SearchDiagnosesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchDiagnosesResponse.Marshal(b, m, deterministic)
}
func (m *SearchDiagnosesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchDiagnosesResponse.Merge(m, src)
}
func (m *SearchDiagnosesResponse) XXX_Size() int {
	return xxx_messageInfo_SearchDiagnosesResponse.Size(m)
}
func (m *SearchDiagnosesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchDiagnosesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchDiagnosesResponse proto.InternalMessageInfo

func (m *SearchDiagnosesResponse) GetDiagnoses() []*Diagnosis {
	if m != nil {
		return m.Diagnoses
	}
	return nil
}

func (m *SearchDiagnosesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Sample
// ======================================================
// This request maps to the body of `POST /samples/search` as JSON.
type SearchSamplesRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Samples with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchSamplesRequest) Reset()         { *m = SearchSamplesRequest{} }
func (m *SearchSamplesRequest) String() string { return proto.CompactTextString(m) }
func (*SearchSamplesRequest) ProtoMessage()    {}
func (*SearchSamplesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{12}
}

func (m *SearchSamplesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSamplesRequest.Unmarshal(m, b)
}
func (m *SearchSamplesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSamplesRequest.Marshal(b, m, deterministic)
}
func (m *SearchSamplesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSamplesRequest.Merge(m, src)
}
func (m *SearchSamplesRequest) XXX_Size() int {
	return xxx_messageInfo_SearchSamplesRequest.Size(m)
}
func (m *SearchSamplesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSamplesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSamplesRequest proto.InternalMessageInfo

func (m *SearchSamplesRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchSamplesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchSamplesRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchSamplesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchSamplesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /samples/{sample_id}`.
type GetSampleRequest struct {
	// The ID of the sample requested
	SampleId             string   `protobuf:"bytes,1,opt,name=sample_id,json=sampleId,proto3" json:"sample_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSampleRequest) Reset()         { *m = GetSampleRequest{} }
func (m *GetSampleRequest) String() string { return proto.CompactTextString(m) }
func (*GetSampleRequest) ProtoMessage()    {}
func (*GetSampleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{13}
}

func (m *GetSampleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSampleRequest.Unmarshal(m, b)
}
func (m *GetSampleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSampleRequest.Marshal(b, m, deterministic)
}
func (m *GetSampleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSampleRequest.Merge(m, src)
}
func (m *GetSampleRequest) XXX_Size() int {
	return xxx_messageInfo_GetSampleRequest.Size(m)
}
func (m *GetSampleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSampleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSampleRequest proto.InternalMessageInfo

func (m *GetSampleRequest) GetSampleId() string {
	if m != nil {
		return m.SampleId
	}
	return ""
}

//This is the response from `POST /samples/search` expressed as JSON.
type SearchSamplesResponse struct {
	// The list of samples.
	Samples []*Sample `protobuf:"bytes,1,rep,name=samples,proto3" json:"samples,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchSamplesResponse) Reset()         { *m = SearchSamplesResponse{} }
func (m *SearchSamplesResponse) String() string { return proto.CompactTextString(m) }
func (*SearchSamplesResponse) ProtoMessage()    {}
func (*SearchSamplesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{14}
}

func (m *SearchSamplesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSamplesResponse.Unmarshal(m, b)
}
func (m *SearchSamplesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSamplesResponse.Marshal(b, m, deterministic)
}
func (m *SearchSamplesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSamplesResponse.Merge(m, src)
}
func (m *SearchSamplesResponse) XXX_Size() int {
	return xxx_messageInfo_SearchSamplesResponse.Size(m)
}
func (m *SearchSamplesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSamplesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSamplesResponse proto.InternalMessageInfo

func (m *SearchSamplesResponse) GetSamples() []*Sample {
	if m != nil {
		return m.Samples
	}
	return nil
}

func (m *SearchSamplesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Treatment
// ======================================================
// This request maps to the body of `POST /treatments/search` as JSON.
type SearchTreatmentsRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Treatments with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchTreatmentsRequest) Reset()         { *m = SearchTreatmentsRequest{} }
func (m *SearchTreatmentsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchTreatmentsRequest) ProtoMessage()    {}
func (*SearchTreatmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{15}
}

func (m *SearchTreatmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchTreatmentsRequest.Unmarshal(m, b)
}
func (m *SearchTreatmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchTreatmentsRequest.Marshal(b, m, deterministic)
}
func (m *SearchTreatmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchTreatmentsRequest.Merge(m, src)
}
func (m *SearchTreatmentsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchTreatmentsRequest.Size(m)
}
func (m *SearchTreatmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchTreatmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchTreatmentsRequest proto.InternalMessageInfo

func (m *SearchTreatmentsRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchTreatmentsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchTreatmentsRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchTreatmentsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchTreatmentsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /treatments/{treatment_id}`.
type GetTreatmentRequest struct {
	// The ID of the treatment requested
	TreatmentId          string   `protobuf:"bytes,1,opt,name=treatment_id,json=treatmentId,proto3" json:"treatment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTreatmentRequest) Reset()         { *m = GetTreatmentRequest{} }
func (m *GetTreatmentRequest) String() string { return proto.CompactTextString(m) }
func (*GetTreatmentRequest) ProtoMessage()    {}
func (*GetTreatmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{16}
}

func (m *GetTreatmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTreatmentRequest.Unmarshal(m, b)
}
func (m *GetTreatmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTreatmentRequest.Marshal(b, m, deterministic)
}
func (m *GetTreatmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTreatmentRequest.Merge(m, src)
}
func (m *GetTreatmentRequest) XXX_Size() int {
	return xxx_messageInfo_GetTreatmentRequest.Size(m)
}
func (m *GetTreatmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTreatmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTreatmentRequest proto.InternalMessageInfo

func (m *GetTreatmentRequest) GetTreatmentId() string {
	if m != nil {
		return m.TreatmentId
	}
	return ""
}

//This is the response from `POST /treatments/search` expressed as JSON.
type SearchTreatmentsResponse struct {
	// The list of treatments.
	Treatments []*Treatment `protobuf:"bytes,1,rep,name=treatments,proto3" json:"treatments,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchTreatmentsResponse) Reset()         { *m = SearchTreatmentsResponse{} }
func (m *SearchTreatmentsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchTreatmentsResponse) ProtoMessage()    {}
func (*SearchTreatmentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{17}
}

func (m *SearchTreatmentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchTreatmentsResponse.Unmarshal(m, b)
}
func (m *SearchTreatmentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchTreatmentsResponse.Marshal(b, m, deterministic)
}
func (m *SearchTreatmentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchTreatmentsResponse.Merge(m, src)
}
func (m *SearchTreatmentsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchTreatmentsResponse.Size(m)
}
func (m *SearchTreatmentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchTreatmentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchTreatmentsResponse proto.InternalMessageInfo

func (m *SearchTreatmentsResponse) GetTreatments() []*Treatment {
	if m != nil {
		return m.Treatments
	}
	return nil
}

func (m *SearchTreatmentsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Outcome
// ======================================================
// This request maps to the body of `POST /outcomes/search` as JSON.
type SearchOutcomesRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Outcomes with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchOutcomesRequest) Reset()         { *m = SearchOutcomesRequest{} }
func (m *SearchOutcomesRequest) String() string { return proto.CompactTextString(m) }
func (*SearchOutcomesRequest) ProtoMessage()    {}
func (*SearchOutcomesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{18}
}

func (m *SearchOutcomesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchOutcomesRequest.Unmarshal(m, b)
}
func (m *SearchOutcomesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchOutcomesRequest.Marshal(b, m, deterministic)
}
func (m *SearchOutcomesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchOutcomesRequest.Merge(m, src)
}
func (m *SearchOutcomesRequest) XXX_Size() int {
	return xxx_messageInfo_SearchOutcomesRequest.Size(m)
}
func (m *SearchOutcomesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchOutcomesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchOutcomesRequest proto.InternalMessageInfo

func (m *SearchOutcomesRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchOutcomesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchOutcomesRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchOutcomesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchOutcomesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /outcomes/{outcome_id}`.
type GetOutcomeRequest struct {
	// The ID of the outcome requested
	OutcomeId            string   `protobuf:"bytes,1,opt,name=outcome_id,json=outcomeId,proto3" json:"outcome_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOutcomeRequest) Reset()         { *m = GetOutcomeRequest{} }
func (m *GetOutcomeRequest) String() string { return proto.CompactTextString(m) }
func (*GetOutcomeRequest) ProtoMessage()    {}
func (*GetOutcomeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{19}
}

func (m *GetOutcomeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOutcomeRequest.Unmarshal(m, b)
}
func (m *GetOutcomeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOutcomeRequest.Marshal(b, m, deterministic)
}
func (m *GetOutcomeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOutcomeRequest.Merge(m, src)
}
func (m *GetOutcomeRequest) XXX_Size() int {
	return xxx_messageInfo_GetOutcomeRequest.Size(m)
}
func (m *GetOutcomeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOutcomeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOutcomeRequest proto.InternalMessageInfo

func (m *GetOutcomeRequest) GetOutcomeId() string {
	if m != nil {
		return m.OutcomeId
	}
	return ""
}

//This is the response from `POST /outcomes/search` expressed as JSON.
type SearchOutcomesResponse struct {
	// The list of outcomes.
	Outcomes []*Outcome `protobuf:"bytes,1,rep,name=outcomes,proto3" json:"outcomes,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchOutcomesResponse) Reset()         { *m = SearchOutcomesResponse{} }
func (m *SearchOutcomesResponse) String() string { return proto.CompactTextString(m) }
func (*SearchOutcomesResponse) ProtoMessage()    {}
func (*SearchOutcomesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{20}
}

func (m *SearchOutcomesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchOutcomesResponse.Unmarshal(m, b)
}
func (m *SearchOutcomesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchOutcomesResponse.Marshal(b, m, deterministic)
}
func (m *SearchOutcomesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchOutcomesResponse.Merge(m, src)
}
func (m *SearchOutcomesResponse) XXX_Size() int {
	return xxx_messageInfo_SearchOutcomesResponse.Size(m)
}
func (m *SearchOutcomesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchOutcomesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchOutcomesResponse proto.InternalMessageInfo

func (m *SearchOutcomesResponse) GetOutcomes() []*Outcome {
	if m != nil {
		return m.Outcomes
	}
	return nil
}

func (m *SearchOutcomesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Complication
// ======================================================
// This request maps to the body of `POST /complications/search` as JSON.
type SearchComplicationsRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Complications with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchComplicationsRequest) Reset()         { *m = SearchComplicationsRequest{} }
func (m *SearchComplicationsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchComplicationsRequest) ProtoMessage()    {}
func (*SearchComplicationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{21}
}

func (m *SearchComplicationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchComplicationsRequest.Unmarshal(m, b)
}
func (m *SearchComplicationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchComplicationsRequest.Marshal(b, m, deterministic)
}
func (m *SearchComplicationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchComplicationsRequest.Merge(m, src)
}
func (m *SearchComplicationsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchComplicationsRequest.Size(m)
}
func (m *SearchComplicationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchComplicationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchComplicationsRequest proto.InternalMessageInfo

func (m *SearchComplicationsRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchComplicationsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchComplicationsRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchComplicationsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchComplicationsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /complications/{complication_id}`.
type GetComplicationRequest struct {
	// The ID of the complication requested
	ComplicationId       string   `protobuf:"bytes,1,opt,name=complication_id,json=complicationId,proto3" json:"complication_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetComplicationRequest) Reset()         { *m = GetComplicationRequest{} }
func (m *GetComplicationRequest) String() string { return proto.CompactTextString(m) }
func (*GetComplicationRequest) ProtoMessage()    {}
func (*GetComplicationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{22}
}

func (m *GetComplicationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetComplicationRequest.Unmarshal(m, b)
}
func (m *GetComplicationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetComplicationRequest.Marshal(b, m, deterministic)
}
func (m *GetComplicationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetComplicationRequest.Merge(m, src)
}
func (m *GetComplicationRequest) XXX_Size() int {
	return xxx_messageInfo_GetComplicationRequest.Size(m)
}
func (m *GetComplicationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetComplicationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetComplicationRequest proto.InternalMessageInfo

func (m *GetComplicationRequest) GetComplicationId() string {
	if m != nil {
		return m.ComplicationId
	}
	return ""
}

//This is the response from `POST /complications/search` expressed as JSON.
type SearchComplicationsResponse struct {
	// The list of complications.
	Complications []*Complication `protobuf:"bytes,1,rep,name=complications,proto3" json:"complications,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchComplicationsResponse) Reset()         { *m = SearchComplicationsResponse{} }
func (m *SearchComplicationsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchComplicationsResponse) ProtoMessage()    {}
func (*SearchComplicationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{23}
}

func (m *SearchComplicationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchComplicationsResponse.Unmarshal(m, b)
}
func (m *SearchComplicationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchComplicationsResponse.Marshal(b, m, deterministic)
}
func (m *SearchComplicationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchComplicationsResponse.Merge(m, src)
}
func (m *SearchComplicationsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchComplicationsResponse.Size(m)
}
func (m *SearchComplicationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchComplicationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchComplicationsResponse proto.InternalMessageInfo

func (m *SearchComplicationsResponse) GetComplications() []*Complication {
	if m != nil {
		return m.Complications
	}
	return nil
}

func (m *SearchComplicationsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Tumourboard
// ======================================================
// This request maps to the body of `POST /tumourboards/search` as JSON.
type SearchTumourboardsRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Tumourboards with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchTumourboardsRequest) Reset()         { *m = SearchTumourboardsRequest{} }
func (m *SearchTumourboardsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchTumourboardsRequest) ProtoMessage()    {}
func (*SearchTumourboardsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{24}
}

func (m *SearchTumourboardsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchTumourboardsRequest.Unmarshal(m, b)
}
func (m *SearchTumourboardsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchTumourboardsRequest.Marshal(b, m, deterministic)
}
func (m *SearchTumourboardsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchTumourboardsRequest.Merge(m, src)
}
func (m *SearchTumourboardsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchTumourboardsRequest.Size(m)
}
func (m *SearchTumourboardsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchTumourboardsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchTumourboardsRequest proto.InternalMessageInfo

func (m *SearchTumourboardsRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchTumourboardsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchTumourboardsRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchTumourboardsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchTumourboardsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /tumourboards/{tumourboard_id}`.
type GetTumourboardRequest struct {
	// The ID of the tumourboard requested
	TumourboardId        string   `protobuf:"bytes,1,opt,name=tumourboard_id,json=tumourboardId,proto3" json:"tumourboard_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTumourboardRequest) Reset()         { *m = GetTumourboardRequest{} }
func (m *GetTumourboardRequest) String() string { return proto.CompactTextString(m) }
func (*GetTumourboardRequest) ProtoMessage()    {}
func (*GetTumourboardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{25}
}

func (m *GetTumourboardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTumourboardRequest.Unmarshal(m, b)
}
func (m *GetTumourboardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTumourboardRequest.Marshal(b, m, deterministic)
}
func (m *GetTumourboardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTumourboardRequest.Merge(m, src)
}
func (m *GetTumourboardRequest) XXX_Size() int {
	return xxx_messageInfo_GetTumourboardRequest.Size(m)
}
func (m *GetTumourboardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTumourboardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTumourboardRequest proto.InternalMessageInfo

func (m *GetTumourboardRequest) GetTumourboardId() string {
	if m != nil {
		return m.TumourboardId
	}
	return ""
}

//This is the response from `POST /tumourboards/search` expressed as JSON.
type SearchTumourboardsResponse struct {
	// The list of tumourboards.
	Tumourboards []*Tumourboard `protobuf:"bytes,1,rep,name=tumourboards,proto3" json:"tumourboards,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchTumourboardsResponse) Reset()         { *m = SearchTumourboardsResponse{} }
func (m *SearchTumourboardsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchTumourboardsResponse) ProtoMessage()    {}
func (*SearchTumourboardsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{26}
}

func (m *SearchTumourboardsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchTumourboardsResponse.Unmarshal(m, b)
}
func (m *SearchTumourboardsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchTumourboardsResponse.Marshal(b, m, deterministic)
}
func (m *SearchTumourboardsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchTumourboardsResponse.Merge(m, src)
}
func (m *SearchTumourboardsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchTumourboardsResponse.Size(m)
}
func (m *SearchTumourboardsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchTumourboardsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchTumourboardsResponse proto.InternalMessageInfo

func (m *SearchTumourboardsResponse) GetTumourboards() []*Tumourboard {
	if m != nil {
		return m.Tumourboards
	}
	return nil
}

func (m *SearchTumourboardsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Chemotherapy
// ======================================================
// This request maps to the body of `POST /chemotherapies/search` as JSON.
type SearchChemotherapiesRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Chemotherapies with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchChemotherapiesRequest) Reset()         { *m = SearchChemotherapiesRequest{} }
func (m *SearchChemotherapiesRequest) String() string { return proto.CompactTextString(m) }
func (*SearchChemotherapiesRequest) ProtoMessage()    {}
func (*SearchChemotherapiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{27}
}

func (m *SearchChemotherapiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchChemotherapiesRequest.Unmarshal(m, b)
}
func (m *SearchChemotherapiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchChemotherapiesRequest.Marshal(b, m, deterministic)
}
func (m *SearchChemotherapiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchChemotherapiesRequest.Merge(m, src)
}
func (m *SearchChemotherapiesRequest) XXX_Size() int {
	return xxx_messageInfo_SearchChemotherapiesRequest.Size(m)
}
func (m *SearchChemotherapiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchChemotherapiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchChemotherapiesRequest proto.InternalMessageInfo

func (m *SearchChemotherapiesRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchChemotherapiesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchChemotherapiesRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchChemotherapiesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchChemotherapiesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /chemotherapies/{chemotherapy_id}`.
type GetChemotherapyRequest struct {
	// The ID of the chemotherapy requested
	ChemotherapyId       string   `protobuf:"bytes,1,opt,name=chemotherapy_id,json=chemotherapyId,proto3" json:"chemotherapy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChemotherapyRequest) Reset()         { *m = GetChemotherapyRequest{} }
func (m *GetChemotherapyRequest) String() string { return proto.CompactTextString(m) }
func (*GetChemotherapyRequest) ProtoMessage()    {}
func (*GetChemotherapyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{28}
}

func (m *GetChemotherapyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetChemotherapyRequest.Unmarshal(m, b)
}
func (m *GetChemotherapyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetChemotherapyRequest.Marshal(b, m, deterministic)
}
func (m *GetChemotherapyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChemotherapyRequest.Merge(m, src)
}
func (m *GetChemotherapyRequest) XXX_Size() int {
	return xxx_messageInfo_GetChemotherapyRequest.Size(m)
}
func (m *GetChemotherapyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChemotherapyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetChemotherapyRequest proto.InternalMessageInfo

func (m *GetChemotherapyRequest) GetChemotherapyId() string {
	if m != nil {
		return m.ChemotherapyId
	}
	return ""
}

//This is the response from `POST /chemotherapies/search` expressed as JSON.
type SearchChemotherapiesResponse struct {
	// The list of chemotherapies.
	Chemotherapies []*Chemotherapy `protobuf:"bytes,1,rep,name=chemotherapies,proto3" json:"chemotherapies,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchChemotherapiesResponse) Reset()         { *m = SearchChemotherapiesResponse{} }
func (m *SearchChemotherapiesResponse) String() string { return proto.CompactTextString(m) }
func (*SearchChemotherapiesResponse) ProtoMessage()    {}
func (*SearchChemotherapiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{29}
}

func (m *SearchChemotherapiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchChemotherapiesResponse.Unmarshal(m, b)
}
func (m *SearchChemotherapiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchChemotherapiesResponse.Marshal(b, m, deterministic)
}
func (m *SearchChemotherapiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchChemotherapiesResponse.Merge(m, src)
}
func (m *SearchChemotherapiesResponse) XXX_Size() int {
	return xxx_messageInfo_SearchChemotherapiesResponse.Size(m)
}
func (m *SearchChemotherapiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchChemotherapiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchChemotherapiesResponse proto.InternalMessageInfo

func (m *SearchChemotherapiesResponse) GetChemotherapies() []*Chemotherapy {
	if m != nil {
		return m.Chemotherapies
	}
	return nil
}

func (m *SearchChemotherapiesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Radiotherapy
// ======================================================
// This request maps to the body of `POST /radiotherapies/search` as JSON.
type SearchRadiotherapiesRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Radiotherapies with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRadiotherapiesRequest) Reset()         { *m = SearchRadiotherapiesRequest{} }
func (m *SearchRadiotherapiesRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRadiotherapiesRequest) ProtoMessage()    {}
func (*SearchRadiotherapiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{30}
}

func (m *SearchRadiotherapiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRadiotherapiesRequest.Unmarshal(m, b)
}
func (m *SearchRadiotherapiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRadiotherapiesRequest.Marshal(b, m, deterministic)
}
func (m *SearchRadiotherapiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRadiotherapiesRequest.Merge(m, src)
}
func (m *SearchRadiotherapiesRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRadiotherapiesRequest.Size(m)
}
func (m *SearchRadiotherapiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRadiotherapiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRadiotherapiesRequest proto.InternalMessageInfo

func (m *SearchRadiotherapiesRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchRadiotherapiesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchRadiotherapiesRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchRadiotherapiesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchRadiotherapiesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /radiotherapies/{radiotherapy_id}`.
type GetRadiotherapyRequest struct {
	// The ID of the radiotherapy requested
	RadiotherapyId       string   `protobuf:"bytes,1,opt,name=radiotherapy_id,json=radiotherapyId,proto3" json:"radiotherapy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRadiotherapyRequest) Reset()         { *m = GetRadiotherapyRequest{} }
func (m *GetRadiotherapyRequest) String() string { return proto.CompactTextString(m) }
func (*GetRadiotherapyRequest) ProtoMessage()    {}
func (*GetRadiotherapyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{31}
}

func (m *GetRadiotherapyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRadiotherapyRequest.Unmarshal(m, b)
}
func (m *GetRadiotherapyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRadiotherapyRequest.Marshal(b, m, deterministic)
}
func (m *GetRadiotherapyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRadiotherapyRequest.Merge(m, src)
}
func (m *GetRadiotherapyRequest) XXX_Size() int {
	return xxx_messageInfo_GetRadiotherapyRequest.Size(m)
}
func (m *GetRadiotherapyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRadiotherapyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRadiotherapyRequest proto.InternalMessageInfo

func (m *GetRadiotherapyRequest) GetRadiotherapyId() string {
	if m != nil {
		return m.RadiotherapyId
	}
	return ""
}

//This is the response from `POST /radiotherapies/search` expressed as JSON.
type SearchRadiotherapiesResponse struct {
	// The list of radiotherapies.
	Radiotherapies []*Radiotherapy `protobuf:"bytes,1,rep,name=radiotherapies,proto3" json:"radiotherapies,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRadiotherapiesResponse) Reset()         { *m = SearchRadiotherapiesResponse{} }
func (m *SearchRadiotherapiesResponse) String() string { return proto.CompactTextString(m) }
func (*SearchRadiotherapiesResponse) ProtoMessage()    {}
func (*SearchRadiotherapiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{32}
}

func (m *SearchRadiotherapiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRadiotherapiesResponse.Unmarshal(m, b)
}
func (m *SearchRadiotherapiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRadiotherapiesResponse.Marshal(b, m, deterministic)
}
func (m *SearchRadiotherapiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRadiotherapiesResponse.Merge(m, src)
}
func (m *SearchRadiotherapiesResponse) XXX_Size() int {
	return xxx_messageInfo_SearchRadiotherapiesResponse.Size(m)
}
func (m *SearchRadiotherapiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRadiotherapiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRadiotherapiesResponse proto.InternalMessageInfo

func (m *SearchRadiotherapiesResponse) GetRadiotherapies() []*Radiotherapy {
	if m != nil {
		return m.Radiotherapies
	}
	return nil
}

func (m *SearchRadiotherapiesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Surgery
// ======================================================
// This request maps to the body of `POST /surgeries/search` as JSON.
type SearchSurgeriesRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Surgeries with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchSurgeriesRequest) Reset()         { *m = SearchSurgeriesRequest{} }
func (m *SearchSurgeriesRequest) String() string { return proto.CompactTextString(m) }
func (*SearchSurgeriesRequest) ProtoMessage()    {}
func (*SearchSurgeriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{33}
}

func (m *SearchSurgeriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSurgeriesRequest.Unmarshal(m, b)
}
func (m *SearchSurgeriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSurgeriesRequest.Marshal(b, m, deterministic)
}
func (m *SearchSurgeriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSurgeriesRequest.Merge(m, src)
}
func (m *SearchSurgeriesRequest) XXX_Size() int {
	return xxx_messageInfo_SearchSurgeriesRequest.Size(m)
}
func (m *SearchSurgeriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSurgeriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSurgeriesRequest proto.InternalMessageInfo

func (m *SearchSurgeriesRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchSurgeriesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchSurgeriesRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchSurgeriesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchSurgeriesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /surgeries/{surgery_id}`.
type GetSurgeryRequest struct {
	// The ID of the surgery requested
	SurgeryId            string   `protobuf:"bytes,1,opt,name=surgery_id,json=surgeryId,proto3" json:"surgery_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSurgeryRequest) Reset()         { *m = GetSurgeryRequest{} }
func (m *GetSurgeryRequest) String() string { return proto.CompactTextString(m) }
func (*GetSurgeryRequest) ProtoMessage()    {}
func (*GetSurgeryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{34}
}

func (m *GetSurgeryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSurgeryRequest.Unmarshal(m, b)
}
func (m *GetSurgeryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSurgeryRequest.Marshal(b, m, deterministic)
}
func (m *GetSurgeryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSurgeryRequest.Merge(m, src)
}
func (m *GetSurgeryRequest) XXX_Size() int {
	return xxx_messageInfo_GetSurgeryRequest.Size(m)
}
func (m *GetSurgeryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSurgeryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSurgeryRequest proto.InternalMessageInfo

func (m *GetSurgeryRequest) GetSurgeryId() string {
	if m != nil {
		return m.SurgeryId
	}
	return ""
}

//This is the response from `POST /surgeries/search` expressed as JSON.
type SearchSurgeriesResponse struct {
	// The list of surgeries.
	Surgeries []*Surgery `protobuf:"bytes,1,rep,name=surgeries,proto3" json:"surgeries,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchSurgeriesResponse) Reset()         { *m = SearchSurgeriesResponse{} }
func (m *SearchSurgeriesResponse) String() string { return proto.CompactTextString(m) }
func (*SearchSurgeriesResponse) ProtoMessage()    {}
func (*SearchSurgeriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{35}
}

func (m *SearchSurgeriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSurgeriesResponse.Unmarshal(m, b)
}
func (m *SearchSurgeriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSurgeriesResponse.Marshal(b, m, deterministic)
}
func (m *SearchSurgeriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSurgeriesResponse.Merge(m, src)
}
func (m *SearchSurgeriesResponse) XXX_Size() int {
	return xxx_messageInfo_SearchSurgeriesResponse.Size(m)
}
func (m *SearchSurgeriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSurgeriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSurgeriesResponse proto.InternalMessageInfo

func (m *SearchSurgeriesResponse) GetSurgeries() []*Surgery {
	if m != nil {
		return m.Surgeries
	}
	return nil
}

func (m *SearchSurgeriesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Immunotherapy
// ======================================================
// This request maps to the body of `POST /immunotherapies/search` as JSON.
type SearchImmunotherapiesRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Immunotherapies with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchImmunotherapiesRequest) Reset()         { *m = SearchImmunotherapiesRequest{} }
func (m *SearchImmunotherapiesRequest) String() string { return proto.CompactTextString(m) }
func (*SearchImmunotherapiesRequest) ProtoMessage()    {}
func (*SearchImmunotherapiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{36}
}

func (m *SearchImmunotherapiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchImmunotherapiesRequest.Unmarshal(m, b)
}
func (m *SearchImmunotherapiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchImmunotherapiesRequest.Marshal(b, m, deterministic)
}
func (m *SearchImmunotherapiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchImmunotherapiesRequest.Merge(m, src)
}
func (m *SearchImmunotherapiesRequest) XXX_Size() int {
	return xxx_messageInfo_SearchImmunotherapiesRequest.Size(m)
}
func (m *SearchImmunotherapiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchImmunotherapiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchImmunotherapiesRequest proto.InternalMessageInfo

func (m *SearchImmunotherapiesRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchImmunotherapiesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchImmunotherapiesRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchImmunotherapiesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchImmunotherapiesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /immunotherapies/{immunotherapy_id}`.
type GetImmunotherapyRequest struct {
	// The ID of the immunotherapy requested
	ImmunotherapyId      string   `protobuf:"bytes,1,opt,name=immunotherapy_id,json=immunotherapyId,proto3" json:"immunotherapy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetImmunotherapyRequest) Reset()         { *m = GetImmunotherapyRequest{} }
func (m *GetImmunotherapyRequest) String() string { return proto.CompactTextString(m) }
func (*GetImmunotherapyRequest) ProtoMessage()    {}
func (*GetImmunotherapyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{37}
}

func (m *GetImmunotherapyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImmunotherapyRequest.Unmarshal(m, b)
}
func (m *GetImmunotherapyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImmunotherapyRequest.Marshal(b, m, deterministic)
}
func (m *GetImmunotherapyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImmunotherapyRequest.Merge(m, src)
}
func (m *GetImmunotherapyRequest) XXX_Size() int {
	return xxx_messageInfo_GetImmunotherapyRequest.Size(m)
}
func (m *GetImmunotherapyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImmunotherapyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetImmunotherapyRequest proto.InternalMessageInfo

func (m *GetImmunotherapyRequest) GetImmunotherapyId() string {
	if m != nil {
		return m.ImmunotherapyId
	}
	return ""
}

//This is the response from `POST /immunotherapies/search` expressed as JSON.
type SearchImmunotherapiesResponse struct {
	// The list of immunotherapies.
	Immunotherapies []*Immunotherapy `protobuf:"bytes,1,rep,name=immunotherapies,proto3" json:"immunotherapies,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchImmunotherapiesResponse) Reset()         { *m = SearchImmunotherapiesResponse{} }
func (m *SearchImmunotherapiesResponse) String() string { return proto.CompactTextString(m) }
func (*SearchImmunotherapiesResponse) ProtoMessage()    {}
func (*SearchImmunotherapiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{38}
}

func (m *SearchImmunotherapiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchImmunotherapiesResponse.Unmarshal(m, b)
}
func (m *SearchImmunotherapiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchImmunotherapiesResponse.Marshal(b, m, deterministic)
}
func (m *SearchImmunotherapiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchImmunotherapiesResponse.Merge(m, src)
}
func (m *SearchImmunotherapiesResponse) XXX_Size() int {
	return xxx_messageInfo_SearchImmunotherapiesResponse.Size(m)
}
func (m *SearchImmunotherapiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchImmunotherapiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchImmunotherapiesResponse proto.InternalMessageInfo

func (m *SearchImmunotherapiesResponse) GetImmunotherapies() []*Immunotherapy {
	if m != nil {
		return m.Immunotherapies
	}
	return nil
}

func (m *SearchImmunotherapiesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Celltransplant
// ======================================================
// This request maps to the body of `POST /celltransplants/search` as JSON.
type SearchCelltransplantsRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Celltransplants with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchCelltransplantsRequest) Reset()         { *m = SearchCelltransplantsRequest{} }
func (m *SearchCelltransplantsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchCelltransplantsRequest) ProtoMessage()    {}
func (*SearchCelltransplantsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{39}
}

func (m *SearchCelltransplantsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchCelltransplantsRequest.Unmarshal(m, b)
}
func (m *SearchCelltransplantsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchCelltransplantsRequest.Marshal(b, m, deterministic)
}
func (m *SearchCelltransplantsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchCelltransplantsRequest.Merge(m, src)
}
func (m *SearchCelltransplantsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchCelltransplantsRequest.Size(m)
}
func (m *SearchCelltransplantsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchCelltransplantsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchCelltransplantsRequest proto.InternalMessageInfo

func (m *SearchCelltransplantsRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchCelltransplantsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchCelltransplantsRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchCelltransplantsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchCelltransplantsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /celltransplants/{celltransplant_id}`.
type GetCelltransplantRequest struct {
	// The ID of the celltransplant requested
	CelltransplantId     string   `protobuf:"bytes,1,opt,name=celltransplant_id,json=celltransplantId,proto3" json:"celltransplant_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCelltransplantRequest) Reset()         { *m = GetCelltransplantRequest{} }
func (m *GetCelltransplantRequest) String() string { return proto.CompactTextString(m) }
func (*GetCelltransplantRequest) ProtoMessage()    {}
func (*GetCelltransplantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{40}
}

func (m *GetCelltransplantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCelltransplantRequest.Unmarshal(m, b)
}
func (m *GetCelltransplantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCelltransplantRequest.Marshal(b, m, deterministic)
}
func (m *GetCelltransplantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCelltransplantRequest.Merge(m, src)
}
func (m *GetCelltransplantRequest) XXX_Size() int {
	return xxx_messageInfo_GetCelltransplantRequest.Size(m)
}
func (m *GetCelltransplantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCelltransplantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCelltransplantRequest proto.InternalMessageInfo

func (m *GetCelltransplantRequest) GetCelltransplantId() string {
	if m != nil {
		return m.CelltransplantId
	}
	return ""
}

//This is the response from `POST /celltransplants/search` expressed as JSON.
type SearchCelltransplantsResponse struct {
	// The list of celltransplants.
	Celltransplants []*Celltransplant `protobuf:"bytes,1,rep,name=celltransplants,proto3" json:"celltransplants,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchCelltransplantsResponse) Reset()         { *m = SearchCelltransplantsResponse{} }
func (m *SearchCelltransplantsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchCelltransplantsResponse) ProtoMessage()    {}
func (*SearchCelltransplantsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{41}
}

func (m *SearchCelltransplantsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchCelltransplantsResponse.Unmarshal(m, b)
}
func (m *SearchCelltransplantsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchCelltransplantsResponse.Marshal(b, m, deterministic)
}
func (m *SearchCelltransplantsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchCelltransplantsResponse.Merge(m, src)
}
func (m *SearchCelltransplantsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchCelltransplantsResponse.Size(m)
}
func (m *SearchCelltransplantsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchCelltransplantsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchCelltransplantsResponse proto.InternalMessageInfo

func (m *SearchCelltransplantsResponse) GetCelltransplants() []*Celltransplant {
	if m != nil {
		return m.Celltransplants
	}
	return nil
}

func (m *SearchCelltransplantsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Slide
// ======================================================
// This request maps to the body of `POST /slides/search` as JSON.
type SearchSlidesRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Slides with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchSlidesRequest) Reset()         { *m = SearchSlidesRequest{} }
func (m *SearchSlidesRequest) String() string { return proto.CompactTextString(m) }
func (*SearchSlidesRequest) ProtoMessage()    {}
func (*SearchSlidesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{42}
}

func (m *SearchSlidesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSlidesRequest.Unmarshal(m, b)
}
func (m *SearchSlidesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSlidesRequest.Marshal(b, m, deterministic)
}
func (m *SearchSlidesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSlidesRequest.Merge(m, src)
}
func (m *SearchSlidesRequest) XXX_Size() int {
	return xxx_messageInfo_SearchSlidesRequest.Size(m)
}
func (m *SearchSlidesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSlidesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSlidesRequest proto.InternalMessageInfo

func (m *SearchSlidesRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchSlidesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchSlidesRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchSlidesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchSlidesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /slides/{slide_id}`.
type GetSlideRequest struct {
	// The ID of the slide requested
	SlideId              string   `protobuf:"bytes,1,opt,name=slide_id,json=slideId,proto3" json:"slide_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSlideRequest) Reset()         { *m = GetSlideRequest{} }
func (m *GetSlideRequest) String() string { return proto.CompactTextString(m) }
func (*GetSlideRequest) ProtoMessage()    {}
func (*GetSlideRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{43}
}

func (m *GetSlideRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSlideRequest.Unmarshal(m, b)
}
func (m *GetSlideRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSlideRequest.Marshal(b, m, deterministic)
}
func (m *GetSlideRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSlideRequest.Merge(m, src)
}
func (m *GetSlideRequest) XXX_Size() int {
	return xxx_messageInfo_GetSlideRequest.Size(m)
}
func (m *GetSlideRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSlideRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSlideRequest proto.InternalMessageInfo

func (m *GetSlideRequest) GetSlideId() string {
	if m != nil {
		return m.SlideId
	}
	return ""
}

//This is the response from `POST /slides/search` expressed as JSON.
type SearchSlidesResponse struct {
	// The list of slides.
	Slides []*Slide `protobuf:"bytes,1,rep,name=slides,proto3" json:"slides,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchSlidesResponse) Reset()         { *m = SearchSlidesResponse{} }
func (m *SearchSlidesResponse) String() string { return proto.CompactTextString(m) }
func (*SearchSlidesResponse) ProtoMessage()    {}
func (*SearchSlidesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{44}
}

func (m *SearchSlidesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSlidesResponse.Unmarshal(m, b)
}
func (m *SearchSlidesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSlidesResponse.Marshal(b, m, deterministic)
}
func (m *SearchSlidesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSlidesResponse.Merge(m, src)
}
func (m *SearchSlidesResponse) XXX_Size() int {
	return xxx_messageInfo_SearchSlidesResponse.Size(m)
}
func (m *SearchSlidesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSlidesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSlidesResponse proto.InternalMessageInfo

func (m *SearchSlidesResponse) GetSlides() []*Slide {
	if m != nil {
		return m.Slides
	}
	return nil
}

func (m *SearchSlidesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Study
// ======================================================
// This request maps to the body of `POST /studies/search` as JSON.
type SearchStudiesRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Studies with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchStudiesRequest) Reset()         { *m = SearchStudiesRequest{} }
func (m *SearchStudiesRequest) String() string { return proto.CompactTextString(m) }
func (*SearchStudiesRequest) ProtoMessage()    {}
func (*SearchStudiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{45}
}

func (m *SearchStudiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchStudiesRequest.Unmarshal(m, b)
}
func (m *SearchStudiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchStudiesRequest.Marshal(b, m, deterministic)
}
func (m *SearchStudiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchStudiesRequest.Merge(m, src)
}
func (m *SearchStudiesRequest) XXX_Size() int {
	return xxx_messageInfo_SearchStudiesRequest.Size(m)
}
func (m *SearchStudiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchStudiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchStudiesRequest proto.InternalMessageInfo

func (m *SearchStudiesRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchStudiesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchStudiesRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchStudiesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchStudiesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /studies/{study_id}`.
type GetStudyRequest struct {
	// The ID of the study requested
	StudyId              string   `protobuf:"bytes,1,opt,name=study_id,json=studyId,proto3" json:"study_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStudyRequest) Reset()         { *m = GetStudyRequest{} }
func (m *GetStudyRequest) String() string { return proto.CompactTextString(m) }
func (*GetStudyRequest) ProtoMessage()    {}
func (*GetStudyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{46}
}

func (m *GetStudyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStudyRequest.Unmarshal(m, b)
}
func (m *GetStudyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStudyRequest.Marshal(b, m, deterministic)
}
func (m *GetStudyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStudyRequest.Merge(m, src)
}
func (m *GetStudyRequest) XXX_Size() int {
	return xxx_messageInfo_GetStudyRequest.Size(m)
}
func (m *GetStudyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStudyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStudyRequest proto.InternalMessageInfo

func (m *GetStudyRequest) GetStudyId() string {
	if m != nil {
		return m.StudyId
	}
	return ""
}

//This is the response from `POST /studies/search` expressed as JSON.
type SearchStudiesResponse struct {
	// The list of studies.
	Studies []*Study `protobuf:"bytes,1,rep,name=studies,proto3" json:"studies,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchStudiesResponse) Reset()         { *m = SearchStudiesResponse{} }
func (m *SearchStudiesResponse) String() string { return proto.CompactTextString(m) }
func (*SearchStudiesResponse) ProtoMessage()    {}
func (*SearchStudiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{47}
}

func (m *SearchStudiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchStudiesResponse.Unmarshal(m, b)
}
func (m *SearchStudiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchStudiesResponse.Marshal(b, m, deterministic)
}
func (m *SearchStudiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchStudiesResponse.Merge(m, src)
}
func (m *SearchStudiesResponse) XXX_Size() int {
	return xxx_messageInfo_SearchStudiesResponse.Size(m)
}
func (m *SearchStudiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchStudiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchStudiesResponse proto.InternalMessageInfo

func (m *SearchStudiesResponse) GetStudies() []*Study {
	if m != nil {
		return m.Studies
	}
	return nil
}

func (m *SearchStudiesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// ======================================================
// Labtest
// ======================================================
// This request maps to the body of `POST /labtests/search` as JSON.
type SearchLabtestsRequest struct {
	// Optionally specify the dataset to search within.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Returns Labtests with the given name found by case-sensitive string matching.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Filter on any of the fields
	Filters []*Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `nextPageToken` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchLabtestsRequest) Reset()         { *m = SearchLabtestsRequest{} }
func (m *SearchLabtestsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchLabtestsRequest) ProtoMessage()    {}
func (*SearchLabtestsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{48}
}

func (m *SearchLabtestsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchLabtestsRequest.Unmarshal(m, b)
}
func (m *SearchLabtestsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchLabtestsRequest.Marshal(b, m, deterministic)
}
func (m *SearchLabtestsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchLabtestsRequest.Merge(m, src)
}
func (m *SearchLabtestsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchLabtestsRequest.Size(m)
}
func (m *SearchLabtestsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchLabtestsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchLabtestsRequest proto.InternalMessageInfo

func (m *SearchLabtestsRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchLabtestsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchLabtestsRequest) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *SearchLabtestsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchLabtestsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This request maps to the URL `GET /labtests/{labtest_id}`.
type GetLabtestRequest struct {
	// The ID of the labtest requested
	LabtestId            string   `protobuf:"bytes,1,opt,name=labtest_id,json=labtestId,proto3" json:"labtest_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLabtestRequest) Reset()         { *m = GetLabtestRequest{} }
func (m *GetLabtestRequest) String() string { return proto.CompactTextString(m) }
func (*GetLabtestRequest) ProtoMessage()    {}
func (*GetLabtestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{49}
}

func (m *GetLabtestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLabtestRequest.Unmarshal(m, b)
}
func (m *GetLabtestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLabtestRequest.Marshal(b, m, deterministic)
}
func (m *GetLabtestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLabtestRequest.Merge(m, src)
}
func (m *GetLabtestRequest) XXX_Size() int {
	return xxx_messageInfo_GetLabtestRequest.Size(m)
}
func (m *GetLabtestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLabtestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLabtestRequest proto.InternalMessageInfo

func (m *GetLabtestRequest) GetLabtestId() string {
	if m != nil {
		return m.LabtestId
	}
	return ""
}

//This is the response from `POST /labtests/search` expressed as JSON.
type SearchLabtestsResponse struct {
	// The list of labtests.
	Labtests []*Labtest `protobuf:"bytes,1,rep,name=labtests,proto3" json:"labtests,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchLabtestsResponse) Reset()         { *m = SearchLabtestsResponse{} }
func (m *SearchLabtestsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchLabtestsResponse) ProtoMessage()    {}
func (*SearchLabtestsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d5a8304423fcf689, []int{50}
}

func (m *SearchLabtestsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchLabtestsResponse.Unmarshal(m, b)
}
func (m *SearchLabtestsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchLabtestsResponse.Marshal(b, m, deterministic)
}
func (m *SearchLabtestsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchLabtestsResponse.Merge(m, src)
}
func (m *SearchLabtestsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchLabtestsResponse.Size(m)
}
func (m *SearchLabtestsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchLabtestsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchLabtestsResponse proto.InternalMessageInfo

func (m *SearchLabtestsResponse) GetLabtests() []*Labtest {
	if m != nil {
		return m.Labtests
	}
	return nil
}

func (m *SearchLabtestsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func init() {
	proto.RegisterType((*SearchPatientsRequest)(nil), "candig.SearchPatientsRequest")
	proto.RegisterType((*GetPatientRequest)(nil), "candig.GetPatientRequest")
	proto.RegisterType((*SearchPatientsResponse)(nil), "candig.SearchPatientsResponse")
	proto.RegisterType((*SearchEnrollmentsRequest)(nil), "candig.SearchEnrollmentsRequest")
	proto.RegisterType((*GetEnrollmentRequest)(nil), "candig.GetEnrollmentRequest")
	proto.RegisterType((*SearchEnrollmentsResponse)(nil), "candig.SearchEnrollmentsResponse")
	proto.RegisterType((*SearchConsentsRequest)(nil), "candig.SearchConsentsRequest")
	proto.RegisterType((*GetConsentRequest)(nil), "candig.GetConsentRequest")
	proto.RegisterType((*SearchConsentsResponse)(nil), "candig.SearchConsentsResponse")
	proto.RegisterType((*SearchDiagnosesRequest)(nil), "candig.SearchDiagnosesRequest")
	proto.RegisterType((*GetDiagnosisRequest)(nil), "candig.GetDiagnosisRequest")
	proto.RegisterType((*SearchDiagnosesResponse)(nil), "candig.SearchDiagnosesResponse")
	proto.RegisterType((*SearchSamplesRequest)(nil), "candig.SearchSamplesRequest")
	proto.RegisterType((*GetSampleRequest)(nil), "candig.GetSampleRequest")
	proto.RegisterType((*SearchSamplesResponse)(nil), "candig.SearchSamplesResponse")
	proto.RegisterType((*SearchTreatmentsRequest)(nil), "candig.SearchTreatmentsRequest")
	proto.RegisterType((*GetTreatmentRequest)(nil), "candig.GetTreatmentRequest")
	proto.RegisterType((*SearchTreatmentsResponse)(nil), "candig.SearchTreatmentsResponse")
	proto.RegisterType((*SearchOutcomesRequest)(nil), "candig.SearchOutcomesRequest")
	proto.RegisterType((*GetOutcomeRequest)(nil), "candig.GetOutcomeRequest")
	proto.RegisterType((*SearchOutcomesResponse)(nil), "candig.SearchOutcomesResponse")
	proto.RegisterType((*SearchComplicationsRequest)(nil), "candig.SearchComplicationsRequest")
	proto.RegisterType((*GetComplicationRequest)(nil), "candig.GetComplicationRequest")
	proto.RegisterType((*SearchComplicationsResponse)(nil), "candig.SearchComplicationsResponse")
	proto.RegisterType((*SearchTumourboardsRequest)(nil), "candig.SearchTumourboardsRequest")
	proto.RegisterType((*GetTumourboardRequest)(nil), "candig.GetTumourboardRequest")
	proto.RegisterType((*SearchTumourboardsResponse)(nil), "candig.SearchTumourboardsResponse")
	proto.RegisterType((*SearchChemotherapiesRequest)(nil), "candig.SearchChemotherapiesRequest")
	proto.RegisterType((*GetChemotherapyRequest)(nil), "candig.GetChemotherapyRequest")
	proto.RegisterType((*SearchChemotherapiesResponse)(nil), "candig.SearchChemotherapiesResponse")
	proto.RegisterType((*SearchRadiotherapiesRequest)(nil), "candig.SearchRadiotherapiesRequest")
	proto.RegisterType((*GetRadiotherapyRequest)(nil), "candig.GetRadiotherapyRequest")
	proto.RegisterType((*SearchRadiotherapiesResponse)(nil), "candig.SearchRadiotherapiesResponse")
	proto.RegisterType((*SearchSurgeriesRequest)(nil), "candig.SearchSurgeriesRequest")
	proto.RegisterType((*GetSurgeryRequest)(nil), "candig.GetSurgeryRequest")
	proto.RegisterType((*SearchSurgeriesResponse)(nil), "candig.SearchSurgeriesResponse")
	proto.RegisterType((*SearchImmunotherapiesRequest)(nil), "candig.SearchImmunotherapiesRequest")
	proto.RegisterType((*GetImmunotherapyRequest)(nil), "candig.GetImmunotherapyRequest")
	proto.RegisterType((*SearchImmunotherapiesResponse)(nil), "candig.SearchImmunotherapiesResponse")
	proto.RegisterType((*SearchCelltransplantsRequest)(nil), "candig.SearchCelltransplantsRequest")
	proto.RegisterType((*GetCelltransplantRequest)(nil), "candig.GetCelltransplantRequest")
	proto.RegisterType((*SearchCelltransplantsResponse)(nil), "candig.SearchCelltransplantsResponse")
	proto.RegisterType((*SearchSlidesRequest)(nil), "candig.SearchSlidesRequest")
	proto.RegisterType((*GetSlideRequest)(nil), "candig.GetSlideRequest")
	proto.RegisterType((*SearchSlidesResponse)(nil), "candig.SearchSlidesResponse")
	proto.RegisterType((*SearchStudiesRequest)(nil), "candig.SearchStudiesRequest")
	proto.RegisterType((*GetStudyRequest)(nil), "candig.GetStudyRequest")
	proto.RegisterType((*SearchStudiesResponse)(nil), "candig.SearchStudiesResponse")
	proto.RegisterType((*SearchLabtestsRequest)(nil), "candig.SearchLabtestsRequest")
	proto.RegisterType((*GetLabtestRequest)(nil), "candig.GetLabtestRequest")
	proto.RegisterType((*SearchLabtestsResponse)(nil), "candig.SearchLabtestsResponse")
}

func init() {
	proto.RegisterFile("candig/clinical_metadata_service.proto", fileDescriptor_d5a8304423fcf689)
}

var fileDescriptor_d5a8304423fcf689 = []byte{
	// 2011 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x5a, 0x59, 0x6f, 0x1c, 0x4b,
	0x15, 0x56, 0x67, 0xb5, 0x2b, 0x5e, 0xcb, 0xb1, 0x3d, 0x2e, 0x2f, 0x19, 0x97, 0xe3, 0xd8, 0x89,
	0x13, 0x4f, 0x70, 0x90, 0x88, 0x02, 0x62, 0x51, 0x02, 0xd6, 0x48, 0x20, 0x22, 0x3b, 0xf0, 0xc0,
	0x8b, 0xe9, 0x4c, 0x17, 0x76, 0x2b, 0x33, 0xdd, 0xc3, 0x74, 0x4f, 0x88, 0xd3, 0x6a, 0x10, 0x01,
	0x09, 0x10, 0x0f, 0x3c, 0xf0, 0xca, 0x6f, 0x60, 0xbb, 0xdb, 0x0f, 0xb9, 0x7f, 0xe1, 0xfe, 0x90,
	0xab, 0xa9, 0xae, 0xe5, 0xd4, 0x32, 0xbe, 0x23, 0x3f, 0x65, 0xde, 0xe2, 0x53, 0x67, 0xfa, 0xfb,
	0xce, 0xa9, 0x3a, 0xa7, 0xaa, 0xbe, 0x0a, 0xba, 0xd7, 0x0a, 0x93, 0x28, 0x3e, 0x6d, 0xb4, 0xda,
	0x71, 0x12, 0xb7, 0xc2, 0xf6, 0x49, 0x87, 0xe5, 0x61, 0x14, 0xe6, 0xe1, 0x49, 0xc6, 0x7a, 0x6f,
	0xe3, 0x16, 0xdb, 0xef, 0xf6, 0xd2, 0x3c, 0xc5, 0x37, 0x2a, 0x3f, 0xb2, 0x31, 0xcc, 0xbf, 0xf2,
	0x23, 0x0b, 0x72, 0x3c, 0xed, 0x74, 0xd2, 0x44, 0x18, 0xd7, 0x4e, 0xd3, 0xf4, 0xb4, 0xcd, 0x1a,
	0x61, 0x37, 0x6e, 0x84, 0x49, 0x92, 0xe6, 0x61, 0x1e, 0xa7, 0x49, 0x56, 0x8d, 0xd2, 0xff, 0x06,
	0x68, 0xf1, 0x98, 0x85, 0xbd, 0xd6, 0xd9, 0xcb, 0x30, 0x8f, 0x59, 0x92, 0x67, 0x47, 0xec, 0xb7,
	0x7d, 0x96, 0xe5, 0x78, 0x1d, 0xa1, 0xc1, 0xa7, 0x33, 0x96, 0x9f, 0xc4, 0x51, 0x2d, 0xa8, 0x07,
	0xbb, 0x93, 0x47, 0x93, 0xc2, 0xd2, 0x8c, 0x30, 0x46, 0xd7, 0x92, 0xb0, 0xc3, 0x6a, 0x57, 0xf8,
	0x00, 0xff, 0x37, 0xde, 0x45, 0x37, 0x7f, 0x13, 0xb7, 0x73, 0xd6, 0xcb, 0x6a, 0x57, 0xeb, 0x57,
	0x77, 0x6f, 0x1d, 0xcc, 0xec, 0x57, 0x8c, 0xf6, 0x7f, 0xc2, 0xcd, 0x47, 0x72, 0x18, 0xaf, 0xa2,
	0xc9, 0x6e, 0x78, 0xca, 0x4e, 0xb2, 0xf8, 0x3d, 0xab, 0x5d, 0xab, 0x07, 0xbb, 0xd7, 0x8f, 0x26,
	0x06, 0x86, 0xe3, 0xf8, 0x3d, 0x1b, 0x20, 0xf3, 0xc1, 0x3c, 0x7d, 0xc3, 0x92, 0xda, 0xf5, 0x0a,
	0x79, 0x60, 0x79, 0x35, 0x30, 0xd0, 0x03, 0x34, 0x7f, 0xc8, 0x72, 0x41, 0x17, 0xb0, 0xed, 0x56,
	0x16, 0xc0, 0x56, 0x58, 0x9a, 0x11, 0xed, 0xa0, 0x25, 0x3b, 0xca, 0xac, 0x9b, 0x26, 0x19, 0xc3,
	0x7b, 0x68, 0x42, 0xb8, 0x65, 0xb5, 0x80, 0x93, 0x9e, 0x95, 0xa4, 0x25, 0x84, 0x72, 0xc0, 0xf7,
	0xd0, 0x6c, 0xc2, 0xde, 0xe5, 0x27, 0x80, 0x5e, 0x15, 0xff, 0xf4, 0xc0, 0xfc, 0x52, 0x51, 0xfc,
	0x24, 0x40, 0xb5, 0x0a, 0xef, 0xc7, 0x49, 0x2f, 0x6d, 0xb7, 0x3b, 0x63, 0x91, 0xd8, 0xef, 0xa2,
	0xdb, 0x87, 0x2c, 0xd7, 0x8c, 0x25, 0xe1, 0x2d, 0x34, 0xcd, 0x94, 0x51, 0x73, 0x9e, 0xd2, 0xc6,
	0x66, 0x44, 0xcf, 0xd1, 0x8a, 0x27, 0x62, 0x91, 0xe4, 0x6f, 0xa3, 0x5b, 0xda, 0x59, 0xe6, 0x19,
	0xcb, 0x18, 0x00, 0x22, 0x74, 0x1b, 0x39, 0xdb, 0x7a, 0x0d, 0x3f, 0x1f, 0xa0, 0x8d, 0xcf, 0x1a,
	0x16, 0x74, 0x01, 0xdb, 0x56, 0x65, 0x01, 0x6c, 0x85, 0x05, 0xae, 0x61, 0x1d, 0xa5, 0x5e, 0xc3,
	0xc2, 0xcd, 0x59, 0xc3, 0x12, 0x42, 0x39, 0x8c, 0x9c, 0xd5, 0xff, 0x05, 0x12, 0xef, 0x45, 0x1c,
	0x9e, 0x26, 0x69, 0xc6, 0x3e, 0xfe, 0xb4, 0x3e, 0x45, 0x0b, 0x87, 0x2c, 0x17, 0x7c, 0x63, 0xc5,
	0x77, 0x13, 0x4d, 0x45, 0xd2, 0xa6, 0x19, 0xdf, 0x52, 0xb6, 0x66, 0x44, 0x7b, 0x68, 0xd9, 0x09,
	0x56, 0x64, 0xb7, 0x81, 0x26, 0x23, 0x69, 0x14, 0xe9, 0x9d, 0x97, 0xe4, 0x35, 0x94, 0xf6, 0x19,
	0x39, 0xc3, 0xff, 0x09, 0xd0, 0xed, 0x0a, 0xf4, 0x38, 0xec, 0x74, 0xdb, 0x63, 0x90, 0xdf, 0x06,
	0x9a, 0x3b, 0x64, 0x79, 0xc5, 0x56, 0x92, 0x5d, 0x45, 0x93, 0x19, 0x37, 0x68, 0xae, 0x13, 0x95,
	0xa1, 0x19, 0xd1, 0x58, 0x56, 0xa6, 0x8a, 0x50, 0x24, 0x75, 0x17, 0xdd, 0xac, 0x9c, 0x64, 0x4a,
	0x15, 0x5f, 0xf1, 0x75, 0x39, 0x3c, 0x72, 0x36, 0xff, 0x1f, 0xc8, 0x29, 0x7c, 0xd5, 0x63, 0x61,
	0x3e, 0x1e, 0x2d, 0xb7, 0x5a, 0xb0, 0x8a, 0x30, 0x58, 0xb0, 0xb9, 0xb4, 0x81, 0x05, 0xab, 0x6c,
	0xcd, 0x88, 0xf6, 0xe5, 0x0e, 0x03, 0xa3, 0x15, 0xc9, 0xfd, 0x16, 0x42, 0xca, 0xd5, 0x59, 0xb2,
	0x1a, 0x0c, 0x38, 0x5d, 0xa2, 0xd7, 0xfe, 0xbc, 0x9f, 0xb7, 0xd2, 0x0e, 0x1b, 0x97, 0x5e, 0x2b,
	0xe8, 0x02, 0xb6, 0x69, 0x65, 0x01, 0x6c, 0x85, 0x05, 0xf6, 0x5a, 0x1d, 0xa5, 0xee, 0xb5, 0xc2,
	0xcd, 0xe9, 0xb5, 0x12, 0x42, 0x39, 0x8c, 0x9c, 0xd5, 0xcf, 0x02, 0x44, 0x64, 0x6f, 0xef, 0x74,
	0xdb, 0x71, 0xab, 0x3a, 0xa3, 0x7d, 0xf4, 0xa9, 0xfd, 0x11, 0x5a, 0xe2, 0xdb, 0x98, 0xe6, 0x2c,
	0x29, 0xef, 0xa0, 0xd9, 0x16, 0x30, 0x6b, 0xde, 0x33, 0xd0, 0xdc, 0x8c, 0xe8, 0x1f, 0x03, 0xb4,
	0xea, 0x0d, 0x5d, 0xe4, 0xfb, 0x19, 0x9a, 0x86, 0xbf, 0x90, 0x49, 0xbf, 0xad, 0x37, 0x38, 0x00,
	0x6e, 0xba, 0x8e, 0x9c, 0xfe, 0x4f, 0x03, 0x79, 0x78, 0x79, 0xd5, 0xef, 0xa4, 0xfd, 0xde, 0xeb,
	0x34, 0xec, 0x45, 0x1f, 0x7f, 0xf6, 0xbf, 0x8f, 0x16, 0x07, 0xcd, 0x43, 0x53, 0x96, 0x8c, 0xb7,
	0xd1, 0x4c, 0xae, 0xad, 0x9a, 0xf5, 0x34, 0xb0, 0x36, 0x23, 0x5a, 0xca, 0x45, 0x67, 0x46, 0x2d,
	0x12, 0xff, 0x1d, 0x34, 0x05, 0xdc, 0x65, 0xde, 0x17, 0x54, 0x1b, 0x01, 0xb0, 0x86, 0xe3, 0xc8,
	0x59, 0xff, 0x5c, 0xcf, 0xfc, 0x19, 0xeb, 0xa4, 0xf9, 0x19, 0xeb, 0x85, 0xdd, 0x98, 0x8d, 0xcd,
	0xaa, 0xd7, 0xa4, 0xcf, 0xe1, 0xaa, 0x07, 0x66, 0xb8, 0xea, 0x81, 0xb9, 0x19, 0xd1, 0x3f, 0x07,
	0x68, 0xcd, 0x1f, 0xbb, 0xc8, 0xfe, 0xf7, 0x10, 0xfc, 0x49, 0xcc, 0xdc, 0x75, 0x0f, 0xe1, 0x2d,
	0xdf, 0x4b, 0x4c, 0xc1, 0x51, 0x18, 0xc5, 0x63, 0x37, 0x05, 0x80, 0x34, 0x9c, 0x82, 0x1e, 0x30,
	0x83, 0x29, 0x80, 0x66, 0x63, 0x0a, 0xec, 0xd8, 0xf5, 0x14, 0xf4, 0x8c, 0x11, 0x7b, 0x0a, 0x0c,
	0x78, 0xcb, 0xf7, 0x12, 0xc7, 0xec, 0xe3, 0x7e, 0xef, 0x94, 0xf5, 0xe2, 0xb1, 0xd9, 0x51, 0x2b,
	0xbe, 0xe7, 0x80, 0x6d, 0x56, 0x59, 0x00, 0x5b, 0x61, 0x69, 0x46, 0xb4, 0x2b, 0x4f, 0x67, 0x20,
	0x4c, 0x91, 0xe8, 0x47, 0x48, 0xf8, 0xc5, 0xee, 0x9e, 0x2a, 0x41, 0xb4, 0xc7, 0xc8, 0x99, 0xfd,
	0x42, 0x4d, 0x70, 0xb3, 0xd3, 0xe9, 0x27, 0x63, 0xb4, 0xba, 0x5f, 0xa0, 0xe5, 0x43, 0x96, 0x43,
	0xd6, 0x2a, 0xcb, 0xf7, 0xd1, 0x5c, 0x0c, 0xed, 0x9a, 0xf9, 0xac, 0x61, 0x6f, 0x46, 0xf4, 0xaf,
	0x01, 0x5a, 0x1f, 0x12, 0xbf, 0x48, 0xfc, 0x0f, 0x90, 0xf1, 0x23, 0x9d, 0xfe, 0x45, 0x19, 0x95,
	0xc9, 0xc1, 0xf6, 0xbe, 0xc4, 0x54, 0x3c, 0x67, 0xed, 0x76, 0xde, 0x0b, 0x93, 0xac, 0xdb, 0x0e,
	0xc7, 0xe1, 0x80, 0x7e, 0x88, 0x6a, 0x83, 0x5e, 0x6f, 0xb0, 0x96, 0xa4, 0xf7, 0xd0, 0x7c, 0xcb,
	0x18, 0xd0, 0xdc, 0xe7, 0xcc, 0x81, 0x66, 0x44, 0xff, 0xa6, 0x66, 0xc3, 0x49, 0x81, 0x98, 0x8d,
	0x1f, 0xa2, 0x59, 0xf3, 0x57, 0x72, 0x36, 0x96, 0x54, 0xcf, 0x37, 0x69, 0xd8, 0xee, 0x23, 0x4f,
	0xc7, 0xbf, 0x03, 0xb4, 0x20, 0x8a, 0xb1, 0x1d, 0x47, 0x63, 0x50, 0x10, 0x0f, 0xd1, 0xec, 0xa0,
	0xe1, 0x0c, 0xc8, 0x4a, 0xae, 0x2b, 0x68, 0x22, 0x1b, 0xfc, 0xad, 0x99, 0xde, 0xe4, 0x7f, 0x37,
	0x23, 0xca, 0xd4, 0xb5, 0x5a, 0x44, 0x27, 0x12, 0xbc, 0x8d, 0x6e, 0x70, 0x17, 0x99, 0xd7, 0x69,
	0xd5, 0x64, 0xf8, 0x87, 0xc5, 0xe0, 0x65, 0xae, 0xef, 0x79, 0x3f, 0x8a, 0xc7, 0x27, 0x8d, 0x79,
	0x3f, 0x3a, 0x87, 0x69, 0x1c, 0xfc, 0x0d, 0xd3, 0x38, 0xf8, 0xbb, 0x19, 0xd1, 0x33, 0x75, 0x77,
	0x97, 0xe1, 0x89, 0x3c, 0xee, 0x20, 0xee, 0x13, 0x7b, 0x12, 0xc9, 0x3f, 0x2d, 0x47, 0x2f, 0x71,
	0xa9, 0xfc, 0x69, 0xf8, 0x3a, 0x67, 0xd9, 0xd8, 0x08, 0x78, 0x82, 0x2e, 0x60, 0xdb, 0xae, 0x2c,
	0x80, 0xad, 0xb0, 0xc0, 0x4b, 0xa5, 0x8e, 0x52, 0x5f, 0x2a, 0x85, 0x9b, 0xb3, 0x01, 0x4a, 0x08,
	0xe5, 0x30, 0x6a, 0x56, 0x0f, 0xfe, 0x75, 0x07, 0x2d, 0x3f, 0x17, 0x2f, 0x05, 0x3f, 0x13, 0x0f,
	0x05, 0xc7, 0xd5, 0xbb, 0x02, 0xce, 0xd0, 0x8c, 0xa9, 0x87, 0xe3, 0x75, 0x35, 0x87, 0xbe, 0xd7,
	0x00, 0xb2, 0x31, 0x6c, 0xb8, 0x8a, 0x80, 0xd2, 0x0f, 0x5f, 0x7e, 0xf5, 0xcf, 0x2b, 0x6b, 0x74,
	0xb9, 0xf1, 0xf6, 0xf1, 0xfe, 0xd3, 0xfd, 0xc7, 0x0d, 0xa9, 0x99, 0x37, 0x32, 0xfe, 0x83, 0x67,
	0xc1, 0x03, 0xfc, 0x07, 0x34, 0xef, 0x48, 0xc4, 0xb8, 0x6e, 0x7e, 0xd8, 0xd5, 0xcb, 0xc9, 0xe6,
	0x05, 0x1e, 0x02, 0x7d, 0x9b, 0xa3, 0xdf, 0xa1, 0x44, 0xa2, 0x03, 0x19, 0x19, 0x10, 0x50, 0x51,
	0x4b, 0x05, 0xd5, 0x8e, 0xda, 0xd2, 0x8f, 0xed, 0xa8, 0x6d, 0xe1, 0xd5, 0x8d, 0x5a, 0xaa, 0xac,
	0x00, 0xf4, 0x77, 0x68, 0xd6, 0x52, 0x16, 0xb1, 0xf5, 0x59, 0x5b, 0x5f, 0x25, 0x77, 0x86, 0x8e,
	0x0b, 0xdc, 0x2d, 0x8e, 0xbb, 0x4e, 0x6b, 0x12, 0x57, 0x89, 0x8f, 0x00, 0x38, 0x45, 0xd3, 0x86,
	0xf6, 0x86, 0xd7, 0xcc, 0xcf, 0x9a, 0xa2, 0x23, 0x59, 0x1f, 0x32, 0x2a, 0x20, 0x37, 0x39, 0xe4,
	0x2a, 0x5d, 0x92, 0x90, 0x42, 0x9f, 0x03, 0x80, 0x05, 0x9a, 0xb3, 0x25, 0x29, 0x6c, 0x85, 0xe2,
	0x48, 0x73, 0xa4, 0x3e, 0xdc, 0x41, 0x20, 0xdf, 0xe5, 0xc8, 0x1b, 0x74, 0x45, 0x22, 0x6b, 0xd9,
	0xca, 0x37, 0xb7, 0x52, 0xb1, 0xb1, 0xe7, 0xd6, 0xd2, 0xab, 0xec, 0xb9, 0xb5, 0x85, 0x1e, 0x77,
	0x6e, 0xa5, 0xaa, 0x03, 0x40, 0xff, 0xa2, 0x36, 0x52, 0x43, 0xbc, 0xc0, 0xd4, 0x5e, 0x37, 0xae,
	0xa8, 0x43, 0xb6, 0x2e, 0xf4, 0x11, 0x24, 0x76, 0x38, 0x89, 0x4d, 0xba, 0xa6, 0x17, 0x18, 0x70,
	0x03, 0x4c, 0xfe, 0x14, 0x20, 0xec, 0x5e, 0xe6, 0xb1, 0x55, 0x3b, 0x1e, 0x79, 0x83, 0xd0, 0x8b,
	0x5c, 0x04, 0x8d, 0x7b, 0x9c, 0x46, 0x9d, 0xae, 0xaa, 0x29, 0x00, 0x5e, 0x80, 0xc5, 0x09, 0x42,
	0xfa, 0x69, 0x0e, 0xaf, 0xc8, 0x2f, 0x3b, 0xcf, 0x75, 0xc4, 0x7e, 0x63, 0x93, 0x15, 0x8c, 0xd7,
	0x9d, 0xfe, 0x51, 0xe8, 0x77, 0xbd, 0x12, 0x27, 0x68, 0xda, 0x78, 0xa2, 0xd2, 0x6b, 0xda, 0xf7,
	0x72, 0x45, 0x3c, 0x4f, 0x4c, 0x74, 0x8f, 0x23, 0x6d, 0xe3, 0x2d, 0x5f, 0xaf, 0x28, 0x8c, 0x87,
	0xae, 0x52, 0x04, 0x24, 0xea, 0xde, 0x08, 0xc8, 0x7c, 0xbb, 0x21, 0xf6, 0x83, 0x8b, 0x1b, 0x90,
	0x6a, 0x0d, 0x85, 0x7e, 0xe4, 0x29, 0xf1, 0x19, 0x9a, 0x82, 0x2f, 0x16, 0x78, 0x15, 0x40, 0xd8,
	0xef, 0x18, 0xc4, 0x7d, 0x76, 0xa0, 0xbb, 0x1c, 0x86, 0xe2, 0xba, 0xdb, 0x09, 0x0a, 0xf8, 0xe6,
	0x51, 0xe2, 0x5f, 0xa1, 0x49, 0xa5, 0xdd, 0xe3, 0x1a, 0x80, 0x31, 0xe4, 0x7c, 0x62, 0xe9, 0xf0,
	0xb2, 0xd5, 0xe0, 0x55, 0xbb, 0xee, 0x0b, 0xa5, 0xfa, 0x97, 0x38, 0xe6, 0x51, 0xa8, 0xda, 0x35,
	0xa2, 0xb0, 0xc5, 0x6d, 0xe2, 0x2a, 0xd1, 0xf4, 0x3e, 0x07, 0xd9, 0xc2, 0x9b, 0x9e, 0x12, 0x2f,
	0xa0, 0x12, 0x2e, 0x67, 0x44, 0x54, 0xab, 0x31, 0x23, 0xa6, 0xc2, 0x4b, 0x6c, 0x59, 0xd6, 0x9d,
	0x11, 0x55, 0xd0, 0x85, 0x96, 0x82, 0x4b, 0xfc, 0x8e, 0x1f, 0x92, 0x60, 0x39, 0xea, 0x7e, 0xed,
	0x17, 0x3b, 0x89, 0x57, 0x8c, 0xa4, 0x0d, 0x8e, 0x77, 0x1f, 0xef, 0xf8, 0x6b, 0xb7, 0xb0, 0xf4,
	0xd1, 0x72, 0xd0, 0xc2, 0x4c, 0x3d, 0x4f, 0xb7, 0x30, 0xaf, 0xce, 0x47, 0x7c, 0x62, 0x1c, 0x7d,
	0xc4, 0x61, 0x77, 0xf0, 0xb6, 0xb7, 0x56, 0x0b, 0x53, 0x18, 0x2c, 0xf1, 0xdf, 0xd5, 0x29, 0xd6,
	0x54, 0xa2, 0xb0, 0xdd, 0x9f, 0x7c, 0x1a, 0x1d, 0xb9, 0x7b, 0xb1, 0x93, 0x68, 0x1f, 0x62, 0x91,
	0x52, 0x5d, 0x0b, 0x86, 0x1f, 0x68, 0x20, 0x9a, 0x8d, 0x29, 0xca, 0xd8, 0x6c, 0xbc, 0x72, 0x95,
	0xcd, 0xc6, 0xaf, 0xeb, 0xb8, 0x6c, 0x4c, 0xe5, 0xc6, 0xb7, 0x75, 0x2b, 0xcd, 0xc2, 0xde, 0xba,
	0x6d, 0xcd, 0xc6, 0xde, 0xba, 0x1d, 0xb1, 0xc3, 0xdd, 0xba, 0x95, 0xb0, 0x01, 0x80, 0xff, 0xa1,
	0x0e, 0xc4, 0xd6, 0xd5, 0x1d, 0x5b, 0x21, 0xfa, 0x95, 0x0d, 0xb2, 0xfd, 0x0d, 0x5e, 0x82, 0x8b,
	0x28, 0x3b, 0xba, 0x21, 0xb9, 0x58, 0xf7, 0x7b, 0x2f, 0x23, 0xeb, 0xfa, 0x6a, 0x33, 0xf2, 0x5f,
	0xf0, 0x6d, 0x46, 0x43, 0xee, 0xc0, 0x2e, 0x23, 0xeb, 0x8a, 0x0b, 0x18, 0xbd, 0x41, 0x53, 0xf0,
	0x96, 0xa7, 0x7b, 0x8e, 0xe7, 0x66, 0x4b, 0xd6, 0xfc, 0x83, 0x02, 0xb5, 0xce, 0x51, 0x09, 0x5d,
	0x54, 0x73, 0xc2, 0xc7, 0xbd, 0x67, 0x29, 0x71, 0xb5, 0xb1, 0x3f, 0x68, 0xdc, 0x00, 0x9d, 0xb3,
	0x94, 0x79, 0x81, 0xf2, 0x9c, 0xa5, 0x2a, 0x07, 0xdf, 0x71, 0x46, 0xde, 0x15, 0xec, 0xe3, 0x8c,
	0x75, 0x53, 0xb2, 0x8f, 0x33, 0xf6, 0x15, 0xc3, 0x3d, 0xce, 0xc8, 0xfb, 0x04, 0x00, 0x3d, 0xaf,
	0x5a, 0x1f, 0x50, 0x96, 0xcd, 0xd6, 0xe7, 0x2a, 0xde, 0xc4, 0xab, 0x47, 0xd3, 0xc7, 0x1c, 0xec,
	0x01, 0xde, 0x1d, 0x52, 0xf0, 0x85, 0xa5, 0x92, 0x97, 0x02, 0x1a, 0x2a, 0xaa, 0x06, 0xb4, 0x47,
	0xe9, 0x25, 0x5e, 0x1d, 0xd6, 0x85, 0xb6, 0xaa, 0xbb, 0xb0, 0xd4, 0xe1, 0x12, 0xff, 0x9a, 0xef,
	0x28, 0x42, 0x68, 0x34, 0x76, 0x14, 0x53, 0xe1, 0x24, 0xb6, 0x28, 0x29, 0x8f, 0x45, 0x78, 0xc3,
	0xad, 0xe5, 0x42, 0x6b, 0xa1, 0x25, 0xfe, 0x3d, 0x7f, 0x36, 0x37, 0xb4, 0x34, 0x7d, 0x30, 0x1e,
	0xa2, 0xf4, 0x11, 0xbf, 0x06, 0x47, 0x0f, 0x38, 0xe6, 0x43, 0xfc, 0x60, 0x58, 0xcd, 0x16, 0xb6,
	0x3e, 0x58, 0xe2, 0x0f, 0x41, 0xf5, 0xdf, 0x4d, 0x8c, 0x5a, 0xd2, 0x37, 0xaf, 0x61, 0x02, 0x17,
	0x19, 0x22, 0x3c, 0xd1, 0x27, 0x9c, 0xc3, 0x23, 0xbc, 0x37, 0xac, 0x4a, 0x0b, 0x47, 0x17, 0x2b,
	0xf1, 0x2f, 0xd0, 0x84, 0xd4, 0x70, 0xf0, 0x32, 0x4c, 0x32, 0x50, 0x75, 0x88, 0x29, 0xc9, 0xc8,
	0x42, 0xc1, 0x2b, 0x56, 0x61, 0x16, 0x52, 0xfa, 0x29, 0xf1, 0x2f, 0xab, 0xcf, 0xe6, 0xfd, 0xe8,
	0xdc, 0xfc, 0x2c, 0x50, 0x39, 0x88, 0x29, 0x50, 0xc8, 0x5a, 0xc0, 0xc4, 0xae, 0xbf, 0x42, 0x6a,
	0x21, 0xf2, 0x9c, 0x21, 0xca, 0xc8, 0x58, 0x15, 0xe6, 0xa5, 0x9f, 0xd8, 0x37, 0x75, 0xf7, 0x9c,
	0xa1, 0x2a, 0xad, 0xd0, 0xea, 0x40, 0xf9, 0xfa, 0x06, 0xff, 0x0f, 0x78, 0x4f, 0xbe, 0x0e, 0x00,
	0x00, 0xff, 0xff, 0x94, 0x98, 0xb5, 0x4d, 0x05, 0x28, 0x00, 0x00,
}
