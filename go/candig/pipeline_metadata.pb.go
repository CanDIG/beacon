// Code generated by protoc-gen-go. DO NOT EDIT.
// source: candig/pipeline_metadata.proto

package candig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Extraction struct {
	// This is unique in the context of the server instance.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The ID of the dataset this object belongs to.
	DatasetId string `protobuf:"bytes,2,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// This is a label or symbolic identifier for this object.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// This attribute contains human readable text.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was created.
	Created string `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated.
	Updated string `protobuf:"bytes,6,opt,name=updated,proto3" json:"updated,omitempty"`
	// A map of additional information.
	Attributes           *Attributes `protobuf:"bytes,7,opt,name=attributes,proto3" json:"attributes,omitempty"`
	SampleId             string      `protobuf:"bytes,8,opt,name=sampleId,proto3" json:"sampleId,omitempty"`
	SampleIdTier         int32       `protobuf:"varint,9,opt,name=sampleIdTier,proto3" json:"sampleIdTier,omitempty"`
	RnaBlood             string      `protobuf:"bytes,10,opt,name=rnaBlood,proto3" json:"rnaBlood,omitempty"`
	RnaBloodTier         int32       `protobuf:"varint,11,opt,name=rnaBloodTier,proto3" json:"rnaBloodTier,omitempty"`
	DnaBlood             string      `protobuf:"bytes,12,opt,name=dnaBlood,proto3" json:"dnaBlood,omitempty"`
	DnaBloodTier         int32       `protobuf:"varint,13,opt,name=dnaBloodTier,proto3" json:"dnaBloodTier,omitempty"`
	RnaTissue            string      `protobuf:"bytes,14,opt,name=rnaTissue,proto3" json:"rnaTissue,omitempty"`
	RnaTissueTier        int32       `protobuf:"varint,15,opt,name=rnaTissueTier,proto3" json:"rnaTissueTier,omitempty"`
	DnaTissue            string      `protobuf:"bytes,16,opt,name=dnaTissue,proto3" json:"dnaTissue,omitempty"`
	DnaTissueTier        int32       `protobuf:"varint,17,opt,name=dnaTissueTier,proto3" json:"dnaTissueTier,omitempty"`
	ExtractionId         string      `protobuf:"bytes,18,opt,name=extractionId,proto3" json:"extractionId,omitempty"`
	ExtractionIdTier     int32       `protobuf:"varint,19,opt,name=extractionIdTier,proto3" json:"extractionIdTier,omitempty"`
	Site                 string      `protobuf:"bytes,20,opt,name=site,proto3" json:"site,omitempty"`
	SiteTier             int32       `protobuf:"varint,21,opt,name=siteTier,proto3" json:"siteTier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Extraction) Reset()         { *m = Extraction{} }
func (m *Extraction) String() string { return proto.CompactTextString(m) }
func (*Extraction) ProtoMessage()    {}
func (*Extraction) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ac0c6020818ef23, []int{0}
}

func (m *Extraction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Extraction.Unmarshal(m, b)
}
func (m *Extraction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Extraction.Marshal(b, m, deterministic)
}
func (m *Extraction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Extraction.Merge(m, src)
}
func (m *Extraction) XXX_Size() int {
	return xxx_messageInfo_Extraction.Size(m)
}
func (m *Extraction) XXX_DiscardUnknown() {
	xxx_messageInfo_Extraction.DiscardUnknown(m)
}

var xxx_messageInfo_Extraction proto.InternalMessageInfo

func (m *Extraction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Extraction) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *Extraction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Extraction) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Extraction) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Extraction) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

func (m *Extraction) GetAttributes() *Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Extraction) GetSampleId() string {
	if m != nil {
		return m.SampleId
	}
	return ""
}

func (m *Extraction) GetSampleIdTier() int32 {
	if m != nil {
		return m.SampleIdTier
	}
	return 0
}

func (m *Extraction) GetRnaBlood() string {
	if m != nil {
		return m.RnaBlood
	}
	return ""
}

func (m *Extraction) GetRnaBloodTier() int32 {
	if m != nil {
		return m.RnaBloodTier
	}
	return 0
}

func (m *Extraction) GetDnaBlood() string {
	if m != nil {
		return m.DnaBlood
	}
	return ""
}

func (m *Extraction) GetDnaBloodTier() int32 {
	if m != nil {
		return m.DnaBloodTier
	}
	return 0
}

func (m *Extraction) GetRnaTissue() string {
	if m != nil {
		return m.RnaTissue
	}
	return ""
}

func (m *Extraction) GetRnaTissueTier() int32 {
	if m != nil {
		return m.RnaTissueTier
	}
	return 0
}

func (m *Extraction) GetDnaTissue() string {
	if m != nil {
		return m.DnaTissue
	}
	return ""
}

func (m *Extraction) GetDnaTissueTier() int32 {
	if m != nil {
		return m.DnaTissueTier
	}
	return 0
}

func (m *Extraction) GetExtractionId() string {
	if m != nil {
		return m.ExtractionId
	}
	return ""
}

func (m *Extraction) GetExtractionIdTier() int32 {
	if m != nil {
		return m.ExtractionIdTier
	}
	return 0
}

func (m *Extraction) GetSite() string {
	if m != nil {
		return m.Site
	}
	return ""
}

func (m *Extraction) GetSiteTier() int32 {
	if m != nil {
		return m.SiteTier
	}
	return 0
}

type Sequencing struct {
	// This is unique in the context of the server instance.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The ID of the dataset this object belongs to.
	DatasetId string `protobuf:"bytes,2,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// This is a label or symbolic identifier for this object.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// This attribute contains human readable text.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was created.
	Created string `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated.
	Updated string `protobuf:"bytes,6,opt,name=updated,proto3" json:"updated,omitempty"`
	// A map of additional information.
	Attributes           *Attributes `protobuf:"bytes,7,opt,name=attributes,proto3" json:"attributes,omitempty"`
	SampleId             string      `protobuf:"bytes,8,opt,name=sampleId,proto3" json:"sampleId,omitempty"`
	SampleIdTier         int32       `protobuf:"varint,9,opt,name=sampleIdTier,proto3" json:"sampleIdTier,omitempty"`
	DnaLibraryKit        string      `protobuf:"bytes,10,opt,name=dnaLibraryKit,proto3" json:"dnaLibraryKit,omitempty"`
	DnaLibraryKitTier    int32       `protobuf:"varint,11,opt,name=dnaLibraryKitTier,proto3" json:"dnaLibraryKitTier,omitempty"`
	DnaSeqPlatform       string      `protobuf:"bytes,12,opt,name=dnaSeqPlatform,proto3" json:"dnaSeqPlatform,omitempty"`
	DnaSeqPlatformTier   int32       `protobuf:"varint,13,opt,name=dnaSeqPlatformTier,proto3" json:"dnaSeqPlatformTier,omitempty"`
	DnaReadLength        string      `protobuf:"bytes,14,opt,name=dnaReadLength,proto3" json:"dnaReadLength,omitempty"`
	DnaReadLengthTier    int32       `protobuf:"varint,15,opt,name=dnaReadLengthTier,proto3" json:"dnaReadLengthTier,omitempty"`
	RnaLibraryKit        string      `protobuf:"bytes,16,opt,name=rnaLibraryKit,proto3" json:"rnaLibraryKit,omitempty"`
	RnaLibraryKitTier    int32       `protobuf:"varint,17,opt,name=rnaLibraryKitTier,proto3" json:"rnaLibraryKitTier,omitempty"`
	RnaSeqPlatform       string      `protobuf:"bytes,18,opt,name=rnaSeqPlatform,proto3" json:"rnaSeqPlatform,omitempty"`
	RnaSeqPlatformTier   int32       `protobuf:"varint,19,opt,name=rnaSeqPlatformTier,proto3" json:"rnaSeqPlatformTier,omitempty"`
	RnaReadLength        string      `protobuf:"bytes,20,opt,name=rnaReadLength,proto3" json:"rnaReadLength,omitempty"`
	RnaReadLengthTier    int32       `protobuf:"varint,21,opt,name=rnaReadLengthTier,proto3" json:"rnaReadLengthTier,omitempty"`
	PcrCycles            string      `protobuf:"bytes,22,opt,name=pcrCycles,proto3" json:"pcrCycles,omitempty"`
	PcrCyclesTier        int32       `protobuf:"varint,23,opt,name=pcrCyclesTier,proto3" json:"pcrCyclesTier,omitempty"`
	SequencingId         string      `protobuf:"bytes,24,opt,name=sequencingId,proto3" json:"sequencingId,omitempty"`
	SequencingIdTier     int32       `protobuf:"varint,25,opt,name=sequencingIdTier,proto3" json:"sequencingIdTier,omitempty"`
	ExtractionId         string      `protobuf:"bytes,26,opt,name=extractionId,proto3" json:"extractionId,omitempty"`
	ExtractionIdTier     int32       `protobuf:"varint,27,opt,name=extractionIdTier,proto3" json:"extractionIdTier,omitempty"`
	Site                 string      `protobuf:"bytes,28,opt,name=site,proto3" json:"site,omitempty"`
	SiteTier             int32       `protobuf:"varint,29,opt,name=siteTier,proto3" json:"siteTier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Sequencing) Reset()         { *m = Sequencing{} }
func (m *Sequencing) String() string { return proto.CompactTextString(m) }
func (*Sequencing) ProtoMessage()    {}
func (*Sequencing) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ac0c6020818ef23, []int{1}
}

func (m *Sequencing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sequencing.Unmarshal(m, b)
}
func (m *Sequencing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sequencing.Marshal(b, m, deterministic)
}
func (m *Sequencing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sequencing.Merge(m, src)
}
func (m *Sequencing) XXX_Size() int {
	return xxx_messageInfo_Sequencing.Size(m)
}
func (m *Sequencing) XXX_DiscardUnknown() {
	xxx_messageInfo_Sequencing.DiscardUnknown(m)
}

var xxx_messageInfo_Sequencing proto.InternalMessageInfo

func (m *Sequencing) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Sequencing) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *Sequencing) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Sequencing) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Sequencing) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Sequencing) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

func (m *Sequencing) GetAttributes() *Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Sequencing) GetSampleId() string {
	if m != nil {
		return m.SampleId
	}
	return ""
}

func (m *Sequencing) GetSampleIdTier() int32 {
	if m != nil {
		return m.SampleIdTier
	}
	return 0
}

func (m *Sequencing) GetDnaLibraryKit() string {
	if m != nil {
		return m.DnaLibraryKit
	}
	return ""
}

func (m *Sequencing) GetDnaLibraryKitTier() int32 {
	if m != nil {
		return m.DnaLibraryKitTier
	}
	return 0
}

func (m *Sequencing) GetDnaSeqPlatform() string {
	if m != nil {
		return m.DnaSeqPlatform
	}
	return ""
}

func (m *Sequencing) GetDnaSeqPlatformTier() int32 {
	if m != nil {
		return m.DnaSeqPlatformTier
	}
	return 0
}

func (m *Sequencing) GetDnaReadLength() string {
	if m != nil {
		return m.DnaReadLength
	}
	return ""
}

func (m *Sequencing) GetDnaReadLengthTier() int32 {
	if m != nil {
		return m.DnaReadLengthTier
	}
	return 0
}

func (m *Sequencing) GetRnaLibraryKit() string {
	if m != nil {
		return m.RnaLibraryKit
	}
	return ""
}

func (m *Sequencing) GetRnaLibraryKitTier() int32 {
	if m != nil {
		return m.RnaLibraryKitTier
	}
	return 0
}

func (m *Sequencing) GetRnaSeqPlatform() string {
	if m != nil {
		return m.RnaSeqPlatform
	}
	return ""
}

func (m *Sequencing) GetRnaSeqPlatformTier() int32 {
	if m != nil {
		return m.RnaSeqPlatformTier
	}
	return 0
}

func (m *Sequencing) GetRnaReadLength() string {
	if m != nil {
		return m.RnaReadLength
	}
	return ""
}

func (m *Sequencing) GetRnaReadLengthTier() int32 {
	if m != nil {
		return m.RnaReadLengthTier
	}
	return 0
}

func (m *Sequencing) GetPcrCycles() string {
	if m != nil {
		return m.PcrCycles
	}
	return ""
}

func (m *Sequencing) GetPcrCyclesTier() int32 {
	if m != nil {
		return m.PcrCyclesTier
	}
	return 0
}

func (m *Sequencing) GetSequencingId() string {
	if m != nil {
		return m.SequencingId
	}
	return ""
}

func (m *Sequencing) GetSequencingIdTier() int32 {
	if m != nil {
		return m.SequencingIdTier
	}
	return 0
}

func (m *Sequencing) GetExtractionId() string {
	if m != nil {
		return m.ExtractionId
	}
	return ""
}

func (m *Sequencing) GetExtractionIdTier() int32 {
	if m != nil {
		return m.ExtractionIdTier
	}
	return 0
}

func (m *Sequencing) GetSite() string {
	if m != nil {
		return m.Site
	}
	return ""
}

func (m *Sequencing) GetSiteTier() int32 {
	if m != nil {
		return m.SiteTier
	}
	return 0
}

type Alignment struct {
	// This is unique in the context of the server instance.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The ID of the dataset this object belongs to.
	DatasetId string `protobuf:"bytes,2,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// This is a label or symbolic identifier for this object.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// This attribute contains human readable text.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was created.
	Created string `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated.
	Updated string `protobuf:"bytes,6,opt,name=updated,proto3" json:"updated,omitempty"`
	// A map of additional information.
	Attributes            *Attributes `protobuf:"bytes,7,opt,name=attributes,proto3" json:"attributes,omitempty"`
	SampleId              string      `protobuf:"bytes,8,opt,name=sampleId,proto3" json:"sampleId,omitempty"`
	SampleIdTier          int32       `protobuf:"varint,9,opt,name=sampleIdTier,proto3" json:"sampleIdTier,omitempty"`
	InHousePipeline       string      `protobuf:"bytes,10,opt,name=inHousePipeline,proto3" json:"inHousePipeline,omitempty"`
	InHousePipelineTier   int32       `protobuf:"varint,11,opt,name=inHousePipelineTier,proto3" json:"inHousePipelineTier,omitempty"`
	AlignmentTool         string      `protobuf:"bytes,12,opt,name=alignmentTool,proto3" json:"alignmentTool,omitempty"`
	AlignmentToolTier     int32       `protobuf:"varint,13,opt,name=alignmentToolTier,proto3" json:"alignmentToolTier,omitempty"`
	MergeTool             string      `protobuf:"bytes,14,opt,name=mergeTool,proto3" json:"mergeTool,omitempty"`
	MergeToolTier         int32       `protobuf:"varint,15,opt,name=mergeToolTier,proto3" json:"mergeToolTier,omitempty"`
	MarkDuplicates        string      `protobuf:"bytes,16,opt,name=markDuplicates,proto3" json:"markDuplicates,omitempty"`
	MarkDuplicatesTier    int32       `protobuf:"varint,17,opt,name=markDuplicatesTier,proto3" json:"markDuplicatesTier,omitempty"`
	RealignerTarget       string      `protobuf:"bytes,18,opt,name=realignerTarget,proto3" json:"realignerTarget,omitempty"`
	RealignerTargetTier   int32       `protobuf:"varint,19,opt,name=realignerTargetTier,proto3" json:"realignerTargetTier,omitempty"`
	IndelRealigner        string      `protobuf:"bytes,20,opt,name=indelRealigner,proto3" json:"indelRealigner,omitempty"`
	IndelRealignerTier    int32       `protobuf:"varint,21,opt,name=indelRealignerTier,proto3" json:"indelRealignerTier,omitempty"`
	BaseRecalibrator      string      `protobuf:"bytes,22,opt,name=baseRecalibrator,proto3" json:"baseRecalibrator,omitempty"`
	BaseRecalibratorTier  int32       `protobuf:"varint,23,opt,name=baseRecalibratorTier,proto3" json:"baseRecalibratorTier,omitempty"`
	PrintReads            string      `protobuf:"bytes,24,opt,name=printReads,proto3" json:"printReads,omitempty"`
	PrintReadsTier        int32       `protobuf:"varint,25,opt,name=printReadsTier,proto3" json:"printReadsTier,omitempty"`
	IdxStats              string      `protobuf:"bytes,26,opt,name=idxStats,proto3" json:"idxStats,omitempty"`
	IdxStatsTier          int32       `protobuf:"varint,27,opt,name=idxStatsTier,proto3" json:"idxStatsTier,omitempty"`
	FlagStat              string      `protobuf:"bytes,28,opt,name=flagStat,proto3" json:"flagStat,omitempty"`
	FlagStatTier          int32       `protobuf:"varint,29,opt,name=flagStatTier,proto3" json:"flagStatTier,omitempty"`
	Coverage              string      `protobuf:"bytes,30,opt,name=coverage,proto3" json:"coverage,omitempty"`
	CoverageTier          int32       `protobuf:"varint,31,opt,name=coverageTier,proto3" json:"coverageTier,omitempty"`
	InsertSizeMetrics     string      `protobuf:"bytes,32,opt,name=insertSizeMetrics,proto3" json:"insertSizeMetrics,omitempty"`
	InsertSizeMetricsTier int32       `protobuf:"varint,33,opt,name=insertSizeMetricsTier,proto3" json:"insertSizeMetricsTier,omitempty"`
	Fastqc                string      `protobuf:"bytes,34,opt,name=fastqc,proto3" json:"fastqc,omitempty"`
	FastqcTier            int32       `protobuf:"varint,35,opt,name=fastqcTier,proto3" json:"fastqcTier,omitempty"`
	Reference             string      `protobuf:"bytes,36,opt,name=reference,proto3" json:"reference,omitempty"`
	ReferenceTier         int32       `protobuf:"varint,37,opt,name=referenceTier,proto3" json:"referenceTier,omitempty"`
	AlignmentId           string      `protobuf:"bytes,38,opt,name=alignmentId,proto3" json:"alignmentId,omitempty"`
	AlignmentIdTier       int32       `protobuf:"varint,39,opt,name=alignmentIdTier,proto3" json:"alignmentIdTier,omitempty"`
	SequencingId          string      `protobuf:"bytes,40,opt,name=sequencingId,proto3" json:"sequencingId,omitempty"`
	SequencingIdTier      int32       `protobuf:"varint,41,opt,name=sequencingIdTier,proto3" json:"sequencingIdTier,omitempty"`
	Site                  string      `protobuf:"bytes,42,opt,name=site,proto3" json:"site,omitempty"`
	SiteTier              int32       `protobuf:"varint,43,opt,name=siteTier,proto3" json:"siteTier,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}    `json:"-"`
	XXX_unrecognized      []byte      `json:"-"`
	XXX_sizecache         int32       `json:"-"`
}

func (m *Alignment) Reset()         { *m = Alignment{} }
func (m *Alignment) String() string { return proto.CompactTextString(m) }
func (*Alignment) ProtoMessage()    {}
func (*Alignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ac0c6020818ef23, []int{2}
}

func (m *Alignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Alignment.Unmarshal(m, b)
}
func (m *Alignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Alignment.Marshal(b, m, deterministic)
}
func (m *Alignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Alignment.Merge(m, src)
}
func (m *Alignment) XXX_Size() int {
	return xxx_messageInfo_Alignment.Size(m)
}
func (m *Alignment) XXX_DiscardUnknown() {
	xxx_messageInfo_Alignment.DiscardUnknown(m)
}

var xxx_messageInfo_Alignment proto.InternalMessageInfo

func (m *Alignment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Alignment) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *Alignment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Alignment) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Alignment) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Alignment) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

func (m *Alignment) GetAttributes() *Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Alignment) GetSampleId() string {
	if m != nil {
		return m.SampleId
	}
	return ""
}

func (m *Alignment) GetSampleIdTier() int32 {
	if m != nil {
		return m.SampleIdTier
	}
	return 0
}

func (m *Alignment) GetInHousePipeline() string {
	if m != nil {
		return m.InHousePipeline
	}
	return ""
}

func (m *Alignment) GetInHousePipelineTier() int32 {
	if m != nil {
		return m.InHousePipelineTier
	}
	return 0
}

func (m *Alignment) GetAlignmentTool() string {
	if m != nil {
		return m.AlignmentTool
	}
	return ""
}

func (m *Alignment) GetAlignmentToolTier() int32 {
	if m != nil {
		return m.AlignmentToolTier
	}
	return 0
}

func (m *Alignment) GetMergeTool() string {
	if m != nil {
		return m.MergeTool
	}
	return ""
}

func (m *Alignment) GetMergeToolTier() int32 {
	if m != nil {
		return m.MergeToolTier
	}
	return 0
}

func (m *Alignment) GetMarkDuplicates() string {
	if m != nil {
		return m.MarkDuplicates
	}
	return ""
}

func (m *Alignment) GetMarkDuplicatesTier() int32 {
	if m != nil {
		return m.MarkDuplicatesTier
	}
	return 0
}

func (m *Alignment) GetRealignerTarget() string {
	if m != nil {
		return m.RealignerTarget
	}
	return ""
}

func (m *Alignment) GetRealignerTargetTier() int32 {
	if m != nil {
		return m.RealignerTargetTier
	}
	return 0
}

func (m *Alignment) GetIndelRealigner() string {
	if m != nil {
		return m.IndelRealigner
	}
	return ""
}

func (m *Alignment) GetIndelRealignerTier() int32 {
	if m != nil {
		return m.IndelRealignerTier
	}
	return 0
}

func (m *Alignment) GetBaseRecalibrator() string {
	if m != nil {
		return m.BaseRecalibrator
	}
	return ""
}

func (m *Alignment) GetBaseRecalibratorTier() int32 {
	if m != nil {
		return m.BaseRecalibratorTier
	}
	return 0
}

func (m *Alignment) GetPrintReads() string {
	if m != nil {
		return m.PrintReads
	}
	return ""
}

func (m *Alignment) GetPrintReadsTier() int32 {
	if m != nil {
		return m.PrintReadsTier
	}
	return 0
}

func (m *Alignment) GetIdxStats() string {
	if m != nil {
		return m.IdxStats
	}
	return ""
}

func (m *Alignment) GetIdxStatsTier() int32 {
	if m != nil {
		return m.IdxStatsTier
	}
	return 0
}

func (m *Alignment) GetFlagStat() string {
	if m != nil {
		return m.FlagStat
	}
	return ""
}

func (m *Alignment) GetFlagStatTier() int32 {
	if m != nil {
		return m.FlagStatTier
	}
	return 0
}

func (m *Alignment) GetCoverage() string {
	if m != nil {
		return m.Coverage
	}
	return ""
}

func (m *Alignment) GetCoverageTier() int32 {
	if m != nil {
		return m.CoverageTier
	}
	return 0
}

func (m *Alignment) GetInsertSizeMetrics() string {
	if m != nil {
		return m.InsertSizeMetrics
	}
	return ""
}

func (m *Alignment) GetInsertSizeMetricsTier() int32 {
	if m != nil {
		return m.InsertSizeMetricsTier
	}
	return 0
}

func (m *Alignment) GetFastqc() string {
	if m != nil {
		return m.Fastqc
	}
	return ""
}

func (m *Alignment) GetFastqcTier() int32 {
	if m != nil {
		return m.FastqcTier
	}
	return 0
}

func (m *Alignment) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *Alignment) GetReferenceTier() int32 {
	if m != nil {
		return m.ReferenceTier
	}
	return 0
}

func (m *Alignment) GetAlignmentId() string {
	if m != nil {
		return m.AlignmentId
	}
	return ""
}

func (m *Alignment) GetAlignmentIdTier() int32 {
	if m != nil {
		return m.AlignmentIdTier
	}
	return 0
}

func (m *Alignment) GetSequencingId() string {
	if m != nil {
		return m.SequencingId
	}
	return ""
}

func (m *Alignment) GetSequencingIdTier() int32 {
	if m != nil {
		return m.SequencingIdTier
	}
	return 0
}

func (m *Alignment) GetSite() string {
	if m != nil {
		return m.Site
	}
	return ""
}

func (m *Alignment) GetSiteTier() int32 {
	if m != nil {
		return m.SiteTier
	}
	return 0
}

type VariantCalling struct {
	// This is unique in the context of the server instance.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The ID of the dataset this object belongs to.
	DatasetId string `protobuf:"bytes,2,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// This is a label or symbolic identifier for this object.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// This attribute contains human readable text.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was created.
	Created string `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated.
	Updated string `protobuf:"bytes,6,opt,name=updated,proto3" json:"updated,omitempty"`
	// A map of additional information.
	Attributes           *Attributes `protobuf:"bytes,7,opt,name=attributes,proto3" json:"attributes,omitempty"`
	SampleId             string      `protobuf:"bytes,8,opt,name=sampleId,proto3" json:"sampleId,omitempty"`
	SampleIdTier         int32       `protobuf:"varint,9,opt,name=sampleIdTier,proto3" json:"sampleIdTier,omitempty"`
	InHousePipeline      string      `protobuf:"bytes,10,opt,name=inHousePipeline,proto3" json:"inHousePipeline,omitempty"`
	InHousePipelineTier  int32       `protobuf:"varint,11,opt,name=inHousePipelineTier,proto3" json:"inHousePipelineTier,omitempty"`
	VariantCaller        string      `protobuf:"bytes,12,opt,name=variantCaller,proto3" json:"variantCaller,omitempty"`
	VariantCallerTier    int32       `protobuf:"varint,13,opt,name=variantCallerTier,proto3" json:"variantCallerTier,omitempty"`
	Tabulate             string      `protobuf:"bytes,14,opt,name=tabulate,proto3" json:"tabulate,omitempty"`
	TabulateTier         int32       `protobuf:"varint,15,opt,name=tabulateTier,proto3" json:"tabulateTier,omitempty"`
	Annotation           string      `protobuf:"bytes,16,opt,name=annotation,proto3" json:"annotation,omitempty"`
	AnnotationTier       int32       `protobuf:"varint,17,opt,name=annotationTier,proto3" json:"annotationTier,omitempty"`
	MergeTool            string      `protobuf:"bytes,18,opt,name=mergeTool,proto3" json:"mergeTool,omitempty"`
	MergeToolTier        int32       `protobuf:"varint,19,opt,name=mergeToolTier,proto3" json:"mergeToolTier,omitempty"`
	RdaToTab             string      `protobuf:"bytes,20,opt,name=rdaToTab,proto3" json:"rdaToTab,omitempty"`
	RdaToTabTier         int32       `protobuf:"varint,21,opt,name=rdaToTabTier,proto3" json:"rdaToTabTier,omitempty"`
	Delly                string      `protobuf:"bytes,22,opt,name=delly,proto3" json:"delly,omitempty"`
	DellyTier            int32       `protobuf:"varint,23,opt,name=dellyTier,proto3" json:"dellyTier,omitempty"`
	PostFilter           string      `protobuf:"bytes,24,opt,name=postFilter,proto3" json:"postFilter,omitempty"`
	PostFilterTier       int32       `protobuf:"varint,25,opt,name=postFilterTier,proto3" json:"postFilterTier,omitempty"`
	ClipFilter           string      `protobuf:"bytes,26,opt,name=clipFilter,proto3" json:"clipFilter,omitempty"`
	ClipFilterTier       int32       `protobuf:"varint,27,opt,name=clipFilterTier,proto3" json:"clipFilterTier,omitempty"`
	Cosmic               string      `protobuf:"bytes,28,opt,name=cosmic,proto3" json:"cosmic,omitempty"`
	CosmicTier           int32       `protobuf:"varint,29,opt,name=cosmicTier,proto3" json:"cosmicTier,omitempty"`
	DbSnp                string      `protobuf:"bytes,30,opt,name=dbSnp,proto3" json:"dbSnp,omitempty"`
	DbSnpTier            int32       `protobuf:"varint,31,opt,name=dbSnpTier,proto3" json:"dbSnpTier,omitempty"`
	VariantCallingId     string      `protobuf:"bytes,32,opt,name=variantCallingId,proto3" json:"variantCallingId,omitempty"`
	VariantCallingIdTier int32       `protobuf:"varint,33,opt,name=variantCallingIdTier,proto3" json:"variantCallingIdTier,omitempty"`
	AlignmentId          string      `protobuf:"bytes,34,opt,name=alignmentId,proto3" json:"alignmentId,omitempty"`
	AlignmentIdTier      int32       `protobuf:"varint,35,opt,name=alignmentIdTier,proto3" json:"alignmentIdTier,omitempty"`
	Site                 string      `protobuf:"bytes,36,opt,name=site,proto3" json:"site,omitempty"`
	SiteTier             int32       `protobuf:"varint,37,opt,name=siteTier,proto3" json:"siteTier,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VariantCalling) Reset()         { *m = VariantCalling{} }
func (m *VariantCalling) String() string { return proto.CompactTextString(m) }
func (*VariantCalling) ProtoMessage()    {}
func (*VariantCalling) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ac0c6020818ef23, []int{3}
}

func (m *VariantCalling) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VariantCalling.Unmarshal(m, b)
}
func (m *VariantCalling) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VariantCalling.Marshal(b, m, deterministic)
}
func (m *VariantCalling) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VariantCalling.Merge(m, src)
}
func (m *VariantCalling) XXX_Size() int {
	return xxx_messageInfo_VariantCalling.Size(m)
}
func (m *VariantCalling) XXX_DiscardUnknown() {
	xxx_messageInfo_VariantCalling.DiscardUnknown(m)
}

var xxx_messageInfo_VariantCalling proto.InternalMessageInfo

func (m *VariantCalling) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VariantCalling) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *VariantCalling) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VariantCalling) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *VariantCalling) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *VariantCalling) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

func (m *VariantCalling) GetAttributes() *Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *VariantCalling) GetSampleId() string {
	if m != nil {
		return m.SampleId
	}
	return ""
}

func (m *VariantCalling) GetSampleIdTier() int32 {
	if m != nil {
		return m.SampleIdTier
	}
	return 0
}

func (m *VariantCalling) GetInHousePipeline() string {
	if m != nil {
		return m.InHousePipeline
	}
	return ""
}

func (m *VariantCalling) GetInHousePipelineTier() int32 {
	if m != nil {
		return m.InHousePipelineTier
	}
	return 0
}

func (m *VariantCalling) GetVariantCaller() string {
	if m != nil {
		return m.VariantCaller
	}
	return ""
}

func (m *VariantCalling) GetVariantCallerTier() int32 {
	if m != nil {
		return m.VariantCallerTier
	}
	return 0
}

func (m *VariantCalling) GetTabulate() string {
	if m != nil {
		return m.Tabulate
	}
	return ""
}

func (m *VariantCalling) GetTabulateTier() int32 {
	if m != nil {
		return m.TabulateTier
	}
	return 0
}

func (m *VariantCalling) GetAnnotation() string {
	if m != nil {
		return m.Annotation
	}
	return ""
}

func (m *VariantCalling) GetAnnotationTier() int32 {
	if m != nil {
		return m.AnnotationTier
	}
	return 0
}

func (m *VariantCalling) GetMergeTool() string {
	if m != nil {
		return m.MergeTool
	}
	return ""
}

func (m *VariantCalling) GetMergeToolTier() int32 {
	if m != nil {
		return m.MergeToolTier
	}
	return 0
}

func (m *VariantCalling) GetRdaToTab() string {
	if m != nil {
		return m.RdaToTab
	}
	return ""
}

func (m *VariantCalling) GetRdaToTabTier() int32 {
	if m != nil {
		return m.RdaToTabTier
	}
	return 0
}

func (m *VariantCalling) GetDelly() string {
	if m != nil {
		return m.Delly
	}
	return ""
}

func (m *VariantCalling) GetDellyTier() int32 {
	if m != nil {
		return m.DellyTier
	}
	return 0
}

func (m *VariantCalling) GetPostFilter() string {
	if m != nil {
		return m.PostFilter
	}
	return ""
}

func (m *VariantCalling) GetPostFilterTier() int32 {
	if m != nil {
		return m.PostFilterTier
	}
	return 0
}

func (m *VariantCalling) GetClipFilter() string {
	if m != nil {
		return m.ClipFilter
	}
	return ""
}

func (m *VariantCalling) GetClipFilterTier() int32 {
	if m != nil {
		return m.ClipFilterTier
	}
	return 0
}

func (m *VariantCalling) GetCosmic() string {
	if m != nil {
		return m.Cosmic
	}
	return ""
}

func (m *VariantCalling) GetCosmicTier() int32 {
	if m != nil {
		return m.CosmicTier
	}
	return 0
}

func (m *VariantCalling) GetDbSnp() string {
	if m != nil {
		return m.DbSnp
	}
	return ""
}

func (m *VariantCalling) GetDbSnpTier() int32 {
	if m != nil {
		return m.DbSnpTier
	}
	return 0
}

func (m *VariantCalling) GetVariantCallingId() string {
	if m != nil {
		return m.VariantCallingId
	}
	return ""
}

func (m *VariantCalling) GetVariantCallingIdTier() int32 {
	if m != nil {
		return m.VariantCallingIdTier
	}
	return 0
}

func (m *VariantCalling) GetAlignmentId() string {
	if m != nil {
		return m.AlignmentId
	}
	return ""
}

func (m *VariantCalling) GetAlignmentIdTier() int32 {
	if m != nil {
		return m.AlignmentIdTier
	}
	return 0
}

func (m *VariantCalling) GetSite() string {
	if m != nil {
		return m.Site
	}
	return ""
}

func (m *VariantCalling) GetSiteTier() int32 {
	if m != nil {
		return m.SiteTier
	}
	return 0
}

type FusionDetection struct {
	// This is unique in the context of the server instance.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The ID of the dataset this object belongs to.
	DatasetId string `protobuf:"bytes,2,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// This is a label or symbolic identifier for this object.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// This attribute contains human readable text.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was created.
	Created string `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated.
	Updated string `protobuf:"bytes,6,opt,name=updated,proto3" json:"updated,omitempty"`
	// A map of additional information.
	Attributes            *Attributes `protobuf:"bytes,7,opt,name=attributes,proto3" json:"attributes,omitempty"`
	SampleId              string      `protobuf:"bytes,8,opt,name=sampleId,proto3" json:"sampleId,omitempty"`
	SampleIdTier          int32       `protobuf:"varint,9,opt,name=sampleIdTier,proto3" json:"sampleIdTier,omitempty"`
	InHousePipeline       string      `protobuf:"bytes,10,opt,name=inHousePipeline,proto3" json:"inHousePipeline,omitempty"`
	InHousePipelineTier   int32       `protobuf:"varint,11,opt,name=inHousePipelineTier,proto3" json:"inHousePipelineTier,omitempty"`
	SvDetection           string      `protobuf:"bytes,12,opt,name=svDetection,proto3" json:"svDetection,omitempty"`
	SvDetectionTier       int32       `protobuf:"varint,13,opt,name=svDetectionTier,proto3" json:"svDetectionTier,omitempty"`
	FusionDetection       string      `protobuf:"bytes,14,opt,name=fusionDetection,proto3" json:"fusionDetection,omitempty"`
	FusionDetectionTier   int32       `protobuf:"varint,15,opt,name=fusionDetectionTier,proto3" json:"fusionDetectionTier,omitempty"`
	Realignment           string      `protobuf:"bytes,16,opt,name=realignment,proto3" json:"realignment,omitempty"`
	RealignmentTier       int32       `protobuf:"varint,17,opt,name=realignmentTier,proto3" json:"realignmentTier,omitempty"`
	Annotation            string      `protobuf:"bytes,18,opt,name=annotation,proto3" json:"annotation,omitempty"`
	AnnotationTier        int32       `protobuf:"varint,19,opt,name=annotationTier,proto3" json:"annotationTier,omitempty"`
	GenomeReference       string      `protobuf:"bytes,20,opt,name=genomeReference,proto3" json:"genomeReference,omitempty"`
	GenomeReferenceTier   int32       `protobuf:"varint,21,opt,name=genomeReferenceTier,proto3" json:"genomeReferenceTier,omitempty"`
	GeneModels            string      `protobuf:"bytes,22,opt,name=geneModels,proto3" json:"geneModels,omitempty"`
	GeneModelsTier        int32       `protobuf:"varint,23,opt,name=geneModelsTier,proto3" json:"geneModelsTier,omitempty"`
	FusionDetectionId     string      `protobuf:"bytes,24,opt,name=fusionDetectionId,proto3" json:"fusionDetectionId,omitempty"`
	FusionDetectionIdTier int32       `protobuf:"varint,25,opt,name=fusionDetectionIdTier,proto3" json:"fusionDetectionIdTier,omitempty"`
	AlignmentId           string      `protobuf:"bytes,26,opt,name=alignmentId,proto3" json:"alignmentId,omitempty"`
	AlignmentIdTier       int32       `protobuf:"varint,27,opt,name=alignmentIdTier,proto3" json:"alignmentIdTier,omitempty"`
	Site                  string      `protobuf:"bytes,28,opt,name=site,proto3" json:"site,omitempty"`
	SiteTier              int32       `protobuf:"varint,29,opt,name=siteTier,proto3" json:"siteTier,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}    `json:"-"`
	XXX_unrecognized      []byte      `json:"-"`
	XXX_sizecache         int32       `json:"-"`
}

func (m *FusionDetection) Reset()         { *m = FusionDetection{} }
func (m *FusionDetection) String() string { return proto.CompactTextString(m) }
func (*FusionDetection) ProtoMessage()    {}
func (*FusionDetection) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ac0c6020818ef23, []int{4}
}

func (m *FusionDetection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FusionDetection.Unmarshal(m, b)
}
func (m *FusionDetection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FusionDetection.Marshal(b, m, deterministic)
}
func (m *FusionDetection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FusionDetection.Merge(m, src)
}
func (m *FusionDetection) XXX_Size() int {
	return xxx_messageInfo_FusionDetection.Size(m)
}
func (m *FusionDetection) XXX_DiscardUnknown() {
	xxx_messageInfo_FusionDetection.DiscardUnknown(m)
}

var xxx_messageInfo_FusionDetection proto.InternalMessageInfo

func (m *FusionDetection) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FusionDetection) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *FusionDetection) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FusionDetection) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *FusionDetection) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *FusionDetection) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

func (m *FusionDetection) GetAttributes() *Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *FusionDetection) GetSampleId() string {
	if m != nil {
		return m.SampleId
	}
	return ""
}

func (m *FusionDetection) GetSampleIdTier() int32 {
	if m != nil {
		return m.SampleIdTier
	}
	return 0
}

func (m *FusionDetection) GetInHousePipeline() string {
	if m != nil {
		return m.InHousePipeline
	}
	return ""
}

func (m *FusionDetection) GetInHousePipelineTier() int32 {
	if m != nil {
		return m.InHousePipelineTier
	}
	return 0
}

func (m *FusionDetection) GetSvDetection() string {
	if m != nil {
		return m.SvDetection
	}
	return ""
}

func (m *FusionDetection) GetSvDetectionTier() int32 {
	if m != nil {
		return m.SvDetectionTier
	}
	return 0
}

func (m *FusionDetection) GetFusionDetection() string {
	if m != nil {
		return m.FusionDetection
	}
	return ""
}

func (m *FusionDetection) GetFusionDetectionTier() int32 {
	if m != nil {
		return m.FusionDetectionTier
	}
	return 0
}

func (m *FusionDetection) GetRealignment() string {
	if m != nil {
		return m.Realignment
	}
	return ""
}

func (m *FusionDetection) GetRealignmentTier() int32 {
	if m != nil {
		return m.RealignmentTier
	}
	return 0
}

func (m *FusionDetection) GetAnnotation() string {
	if m != nil {
		return m.Annotation
	}
	return ""
}

func (m *FusionDetection) GetAnnotationTier() int32 {
	if m != nil {
		return m.AnnotationTier
	}
	return 0
}

func (m *FusionDetection) GetGenomeReference() string {
	if m != nil {
		return m.GenomeReference
	}
	return ""
}

func (m *FusionDetection) GetGenomeReferenceTier() int32 {
	if m != nil {
		return m.GenomeReferenceTier
	}
	return 0
}

func (m *FusionDetection) GetGeneModels() string {
	if m != nil {
		return m.GeneModels
	}
	return ""
}

func (m *FusionDetection) GetGeneModelsTier() int32 {
	if m != nil {
		return m.GeneModelsTier
	}
	return 0
}

func (m *FusionDetection) GetFusionDetectionId() string {
	if m != nil {
		return m.FusionDetectionId
	}
	return ""
}

func (m *FusionDetection) GetFusionDetectionIdTier() int32 {
	if m != nil {
		return m.FusionDetectionIdTier
	}
	return 0
}

func (m *FusionDetection) GetAlignmentId() string {
	if m != nil {
		return m.AlignmentId
	}
	return ""
}

func (m *FusionDetection) GetAlignmentIdTier() int32 {
	if m != nil {
		return m.AlignmentIdTier
	}
	return 0
}

func (m *FusionDetection) GetSite() string {
	if m != nil {
		return m.Site
	}
	return ""
}

func (m *FusionDetection) GetSiteTier() int32 {
	if m != nil {
		return m.SiteTier
	}
	return 0
}

type ExpressionAnalysis struct {
	// This is unique in the context of the server instance.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The ID of the dataset this object belongs to.
	DatasetId string `protobuf:"bytes,2,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// This is a label or symbolic identifier for this object.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// This attribute contains human readable text.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was created.
	Created string `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this record was updated.
	Updated string `protobuf:"bytes,6,opt,name=updated,proto3" json:"updated,omitempty"`
	// A map of additional information.
	Attributes               *Attributes `protobuf:"bytes,7,opt,name=attributes,proto3" json:"attributes,omitempty"`
	SampleId                 string      `protobuf:"bytes,8,opt,name=sampleId,proto3" json:"sampleId,omitempty"`
	SampleIdTier             int32       `protobuf:"varint,9,opt,name=sampleIdTier,proto3" json:"sampleIdTier,omitempty"`
	ReadLength               string      `protobuf:"bytes,10,opt,name=readLength,proto3" json:"readLength,omitempty"`
	ReadLengthTier           int32       `protobuf:"varint,11,opt,name=readLengthTier,proto3" json:"readLengthTier,omitempty"`
	Reference                string      `protobuf:"bytes,12,opt,name=reference,proto3" json:"reference,omitempty"`
	ReferenceTier            int32       `protobuf:"varint,13,opt,name=referenceTier,proto3" json:"referenceTier,omitempty"`
	AlignmentTool            string      `protobuf:"bytes,14,opt,name=alignmentTool,proto3" json:"alignmentTool,omitempty"`
	AlignmentToolTier        int32       `protobuf:"varint,15,opt,name=alignmentToolTier,proto3" json:"alignmentToolTier,omitempty"`
	BamHandling              string      `protobuf:"bytes,16,opt,name=bamHandling,proto3" json:"bamHandling,omitempty"`
	BamHandlingTier          int32       `protobuf:"varint,17,opt,name=bamHandlingTier,proto3" json:"bamHandlingTier,omitempty"`
	ExpressionEstimation     string      `protobuf:"bytes,18,opt,name=expressionEstimation,proto3" json:"expressionEstimation,omitempty"`
	ExpressionEstimationTier int32       `protobuf:"varint,19,opt,name=expressionEstimationTier,proto3" json:"expressionEstimationTier,omitempty"`
	ExpressionAnalysisId     string      `protobuf:"bytes,20,opt,name=expressionAnalysisId,proto3" json:"expressionAnalysisId,omitempty"`
	ExpressionAnalysisIdTier int32       `protobuf:"varint,21,opt,name=expressionAnalysisIdTier,proto3" json:"expressionAnalysisIdTier,omitempty"`
	SequencingId             string      `protobuf:"bytes,22,opt,name=sequencingId,proto3" json:"sequencingId,omitempty"`
	SequencingIdTier         int32       `protobuf:"varint,23,opt,name=sequencingIdTier,proto3" json:"sequencingIdTier,omitempty"`
	Site                     string      `protobuf:"bytes,24,opt,name=site,proto3" json:"site,omitempty"`
	SiteTier                 int32       `protobuf:"varint,25,opt,name=siteTier,proto3" json:"siteTier,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}    `json:"-"`
	XXX_unrecognized         []byte      `json:"-"`
	XXX_sizecache            int32       `json:"-"`
}

func (m *ExpressionAnalysis) Reset()         { *m = ExpressionAnalysis{} }
func (m *ExpressionAnalysis) String() string { return proto.CompactTextString(m) }
func (*ExpressionAnalysis) ProtoMessage()    {}
func (*ExpressionAnalysis) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ac0c6020818ef23, []int{5}
}

func (m *ExpressionAnalysis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpressionAnalysis.Unmarshal(m, b)
}
func (m *ExpressionAnalysis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpressionAnalysis.Marshal(b, m, deterministic)
}
func (m *ExpressionAnalysis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpressionAnalysis.Merge(m, src)
}
func (m *ExpressionAnalysis) XXX_Size() int {
	return xxx_messageInfo_ExpressionAnalysis.Size(m)
}
func (m *ExpressionAnalysis) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpressionAnalysis.DiscardUnknown(m)
}

var xxx_messageInfo_ExpressionAnalysis proto.InternalMessageInfo

func (m *ExpressionAnalysis) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ExpressionAnalysis) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *ExpressionAnalysis) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExpressionAnalysis) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ExpressionAnalysis) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *ExpressionAnalysis) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

func (m *ExpressionAnalysis) GetAttributes() *Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *ExpressionAnalysis) GetSampleId() string {
	if m != nil {
		return m.SampleId
	}
	return ""
}

func (m *ExpressionAnalysis) GetSampleIdTier() int32 {
	if m != nil {
		return m.SampleIdTier
	}
	return 0
}

func (m *ExpressionAnalysis) GetReadLength() string {
	if m != nil {
		return m.ReadLength
	}
	return ""
}

func (m *ExpressionAnalysis) GetReadLengthTier() int32 {
	if m != nil {
		return m.ReadLengthTier
	}
	return 0
}

func (m *ExpressionAnalysis) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *ExpressionAnalysis) GetReferenceTier() int32 {
	if m != nil {
		return m.ReferenceTier
	}
	return 0
}

func (m *ExpressionAnalysis) GetAlignmentTool() string {
	if m != nil {
		return m.AlignmentTool
	}
	return ""
}

func (m *ExpressionAnalysis) GetAlignmentToolTier() int32 {
	if m != nil {
		return m.AlignmentToolTier
	}
	return 0
}

func (m *ExpressionAnalysis) GetBamHandling() string {
	if m != nil {
		return m.BamHandling
	}
	return ""
}

func (m *ExpressionAnalysis) GetBamHandlingTier() int32 {
	if m != nil {
		return m.BamHandlingTier
	}
	return 0
}

func (m *ExpressionAnalysis) GetExpressionEstimation() string {
	if m != nil {
		return m.ExpressionEstimation
	}
	return ""
}

func (m *ExpressionAnalysis) GetExpressionEstimationTier() int32 {
	if m != nil {
		return m.ExpressionEstimationTier
	}
	return 0
}

func (m *ExpressionAnalysis) GetExpressionAnalysisId() string {
	if m != nil {
		return m.ExpressionAnalysisId
	}
	return ""
}

func (m *ExpressionAnalysis) GetExpressionAnalysisIdTier() int32 {
	if m != nil {
		return m.ExpressionAnalysisIdTier
	}
	return 0
}

func (m *ExpressionAnalysis) GetSequencingId() string {
	if m != nil {
		return m.SequencingId
	}
	return ""
}

func (m *ExpressionAnalysis) GetSequencingIdTier() int32 {
	if m != nil {
		return m.SequencingIdTier
	}
	return 0
}

func (m *ExpressionAnalysis) GetSite() string {
	if m != nil {
		return m.Site
	}
	return ""
}

func (m *ExpressionAnalysis) GetSiteTier() int32 {
	if m != nil {
		return m.SiteTier
	}
	return 0
}

func init() {
	proto.RegisterType((*Extraction)(nil), "candig.Extraction")
	proto.RegisterType((*Sequencing)(nil), "candig.Sequencing")
	proto.RegisterType((*Alignment)(nil), "candig.Alignment")
	proto.RegisterType((*VariantCalling)(nil), "candig.VariantCalling")
	proto.RegisterType((*FusionDetection)(nil), "candig.FusionDetection")
	proto.RegisterType((*ExpressionAnalysis)(nil), "candig.ExpressionAnalysis")
}

func init() { proto.RegisterFile("candig/pipeline_metadata.proto", fileDescriptor_4ac0c6020818ef23) }

var fileDescriptor_4ac0c6020818ef23 = []byte{
	// 1477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x99, 0xcd, 0x72, 0x14, 0x37,
	0x10, 0xc7, 0xcb, 0x04, 0x1b, 0xaf, 0x6c, 0x6c, 0x90, 0x0d, 0x0c, 0x06, 0x9c, 0x8d, 0xf9, 0x88,
	0x43, 0x52, 0x4e, 0x8a, 0xe4, 0x94, 0x1b, 0xe1, 0xa3, 0xd8, 0x0a, 0x54, 0x51, 0xeb, 0xad, 0x5c,
	0x29, 0xed, 0x48, 0xde, 0xa8, 0x32, 0xa3, 0x59, 0x34, 0x5a, 0x97, 0x9d, 0xb7, 0xc9, 0x3d, 0xbc,
	0x40, 0xde, 0x27, 0xef, 0x91, 0x6a, 0x49, 0xa3, 0x6d, 0x69, 0x66, 0xe3, 0x3d, 0x71, 0xf2, 0x4d,
	0xfd, 0x6f, 0x77, 0x8f, 0x34, 0xd3, 0xfa, 0xb5, 0xb4, 0x26, 0xfb, 0x39, 0x53, 0x5c, 0x4e, 0xbe,
	0x9f, 0xca, 0xa9, 0x28, 0xa4, 0x12, 0x1f, 0x4a, 0x61, 0x18, 0x67, 0x86, 0x1d, 0x4d, 0x75, 0x65,
	0x2a, 0xba, 0xe6, 0xfc, 0x7b, 0x3b, 0xfe, 0xef, 0xf2, 0xaa, 0x2c, 0x2b, 0xe5, 0x9c, 0x07, 0x7f,
	0xad, 0x12, 0xf2, 0xea, 0xcc, 0x68, 0x96, 0x1b, 0x59, 0x29, 0xba, 0x45, 0xae, 0x48, 0x9e, 0xad,
	0xf4, 0x57, 0x0e, 0x7b, 0xc3, 0x2b, 0x92, 0xd3, 0x07, 0x84, 0x40, 0xa6, 0x5a, 0x98, 0x0f, 0x92,
	0x67, 0x57, 0xac, 0xde, 0xf3, 0xca, 0x80, 0x53, 0x4a, 0xae, 0x2a, 0x56, 0x8a, 0xec, 0x0b, 0xeb,
	0xb0, 0x63, 0xda, 0x27, 0x1b, 0x5c, 0xd4, 0xb9, 0x96, 0x53, 0xc8, 0x98, 0x5d, 0xb5, 0x2e, 0x2c,
	0xd1, 0x8c, 0x5c, 0xcb, 0xb5, 0x60, 0x46, 0xf0, 0x6c, 0xd5, 0x7a, 0x1b, 0x13, 0x3c, 0xb3, 0x29,
	0xb7, 0x9e, 0x35, 0xe7, 0xf1, 0x26, 0x7d, 0x46, 0x08, 0x33, 0x46, 0xcb, 0xf1, 0xcc, 0x88, 0x3a,
	0xbb, 0xd6, 0x5f, 0x39, 0xdc, 0x78, 0x46, 0x8f, 0xdc, 0x8a, 0x8e, 0x9e, 0x07, 0xcf, 0x10, 0xfd,
	0x15, 0xdd, 0x23, 0xeb, 0x35, 0x2b, 0xa7, 0x85, 0x18, 0xf0, 0x6c, 0xdd, 0xa6, 0x0b, 0x36, 0x3d,
	0x20, 0x9b, 0xcd, 0x78, 0x24, 0x85, 0xce, 0x7a, 0xfd, 0x95, 0xc3, 0xd5, 0x61, 0xa4, 0x41, 0xbc,
	0x56, 0xec, 0x97, 0xa2, 0xaa, 0x78, 0x46, 0x5c, 0x7c, 0x63, 0x43, 0x7c, 0x33, 0xb6, 0xf1, 0x1b,
	0x2e, 0x1e, 0x6b, 0x10, 0xcf, 0x9b, 0xf8, 0x4d, 0x17, 0xcf, 0x51, 0x3c, 0xc7, 0xf1, 0xd7, 0x5d,
	0x3c, 0xd6, 0xe8, 0x7d, 0xd2, 0xd3, 0x8a, 0x8d, 0x64, 0x5d, 0xcf, 0x44, 0xb6, 0xe5, 0xde, 0x7d,
	0x10, 0xe8, 0x23, 0x72, 0x3d, 0x18, 0x36, 0xc5, 0xb6, 0x4d, 0x11, 0x8b, 0x90, 0x83, 0x87, 0x1c,
	0x37, 0xfc, 0xf7, 0xc3, 0x39, 0x78, 0x94, 0xe3, 0xa6, 0xcb, 0x11, 0x89, 0x30, 0x57, 0x11, 0x4a,
	0x64, 0xc0, 0x33, 0x6a, 0xd3, 0x44, 0x1a, 0x7d, 0x4a, 0x6e, 0x60, 0xdb, 0x26, 0xdb, 0xb1, 0xc9,
	0x5a, 0x3a, 0x54, 0x4d, 0x2d, 0x8d, 0xc8, 0x76, 0x5d, 0xd5, 0xc0, 0xd8, 0x7e, 0x2b, 0x69, 0xdc,
	0x24, 0x6e, 0xd9, 0xb8, 0x60, 0x1f, 0x7c, 0x5a, 0x27, 0xe4, 0x58, 0x7c, 0x9c, 0x09, 0x95, 0x4b,
	0x35, 0xb9, 0xac, 0x51, 0x5c, 0xa3, 0xee, 0x0b, 0xbe, 0x95, 0x63, 0xcd, 0xf4, 0xf9, 0xaf, 0xd2,
	0xf8, 0x42, 0x8d, 0x45, 0xfa, 0x1d, 0xb9, 0x19, 0x09, 0xa8, 0x64, 0xdb, 0x0e, 0xfa, 0x84, 0x6c,
	0x71, 0xc5, 0x8e, 0xc5, 0xc7, 0xf7, 0x05, 0x33, 0x27, 0x95, 0x2e, 0x7d, 0xf5, 0x26, 0x2a, 0x3d,
	0x22, 0x34, 0x56, 0x50, 0x25, 0x77, 0x78, 0xfc, 0x5c, 0x87, 0x82, 0xf1, 0xb7, 0x42, 0x4d, 0xcc,
	0xef, 0xbe, 0xa6, 0x63, 0xd1, 0xcf, 0x75, 0x2e, 0xa0, 0xda, 0x6e, 0x3b, 0xfc, 0x2e, 0x40, 0xeb,
	0x77, 0x35, 0x1e, 0x8b, 0x90, 0x53, 0xb7, 0xd6, 0xef, 0x6a, 0xbd, 0xed, 0x80, 0xf5, 0xeb, 0x78,
	0xfd, 0xae, 0xe2, 0x13, 0x15, 0xd6, 0xaf, 0xdb, 0xeb, 0x77, 0x55, 0xdf, 0xe1, 0xf1, 0x73, 0x45,
	0xeb, 0xdf, 0x0d, 0x73, 0x8d, 0xd7, 0xaf, 0x5b, 0xeb, 0xbf, 0x15, 0xe6, 0x9a, 0xac, 0xff, 0x3e,
	0xe9, 0x4d, 0x73, 0xfd, 0xe2, 0x3c, 0x2f, 0x44, 0x9d, 0xdd, 0x76, 0xb5, 0x1f, 0x04, 0x78, 0x62,
	0x30, 0x6c, 0x9e, 0x3b, 0x6e, 0x7f, 0x47, 0xa2, 0xad, 0xb3, 0xb0, 0xbd, 0x06, 0x3c, 0xcb, 0xdc,
	0xfe, 0xc6, 0x1a, 0xec, 0x6f, 0x6c, 0xdb, 0x64, 0x77, 0xdd, 0xfe, 0x4e, 0xf5, 0x16, 0x2f, 0xf6,
	0x96, 0xe4, 0xc5, 0xbd, 0x0b, 0x78, 0x71, 0x7f, 0x01, 0x2f, 0x1e, 0x24, 0xbc, 0xf8, 0x7b, 0x93,
	0xf4, 0x9e, 0x17, 0x72, 0xa2, 0x4a, 0xa1, 0xcc, 0x25, 0x2e, 0x30, 0x2e, 0x0e, 0xc9, 0xb6, 0x54,
	0x6f, 0xaa, 0x59, 0x2d, 0xde, 0xfb, 0xd3, 0x82, 0x07, 0x46, 0x2a, 0xd3, 0x1f, 0xc8, 0x4e, 0x22,
	0x21, 0x68, 0x74, 0xb9, 0xa0, 0xd8, 0x58, 0xf3, 0xd6, 0x47, 0x55, 0x55, 0x78, 0x6a, 0xc4, 0x22,
	0x94, 0x77, 0x24, 0x20, 0x66, 0xb4, 0x1d, 0x50, 0xde, 0xa5, 0xd0, 0x13, 0x61, 0xf3, 0xf9, 0x16,
	0x18, 0x04, 0x78, 0x62, 0x30, 0x70, 0x0b, 0x8c, 0x44, 0xd8, 0xce, 0x25, 0xd3, 0x7f, 0xbc, 0x9c,
	0x4d, 0x0b, 0x99, 0x33, 0x78, 0xd7, 0x8e, 0x11, 0x89, 0x0a, 0xdb, 0x39, 0x56, 0x10, 0x25, 0x3a,
	0x3c, 0xf0, 0x2e, 0xb5, 0xb0, 0x53, 0x16, 0x7a, 0xc4, 0xf4, 0x44, 0x18, 0xcf, 0x89, 0x54, 0x86,
	0x77, 0x99, 0x48, 0x88, 0x14, 0x5d, 0x2e, 0x98, 0xb3, 0x54, 0x5c, 0x14, 0xc3, 0xc6, 0xe7, 0x59,
	0x91, 0xa8, 0x30, 0xe7, 0x58, 0x41, 0xb4, 0xe8, 0xf0, 0xc0, 0xb6, 0x1b, 0xb3, 0x5a, 0x0c, 0x45,
	0xce, 0x0a, 0x80, 0x9e, 0xa9, 0xb4, 0xa7, 0x46, 0x4b, 0xa7, 0xcf, 0xc8, 0x6e, 0xaa, 0x21, 0x86,
	0x74, 0xfa, 0xe8, 0x3e, 0x21, 0x53, 0x2d, 0x95, 0x01, 0x4a, 0xd5, 0x1e, 0x24, 0x48, 0x81, 0x75,
	0xcd, 0x2d, 0x04, 0x91, 0x44, 0x85, 0x3a, 0x97, 0xfc, 0xec, 0xd8, 0x30, 0x53, 0x7b, 0x7c, 0x04,
	0x1b, 0xea, 0xbc, 0x19, 0x23, 0x6c, 0x44, 0x1a, 0xc4, 0x9f, 0x14, 0x6c, 0x02, 0x82, 0xc7, 0x46,
	0xb0, 0x21, 0xbe, 0x19, 0x23, 0x7c, 0x44, 0x1a, 0xc4, 0xe7, 0xd5, 0xa9, 0xd0, 0x6c, 0x22, 0xb2,
	0x7d, 0x17, 0xdf, 0xd8, 0x10, 0xdf, 0x8c, 0x6d, 0xfc, 0x97, 0x2e, 0x1e, 0x6b, 0x50, 0xe5, 0x52,
	0xd5, 0x42, 0x9b, 0x63, 0xf9, 0xa7, 0x78, 0x27, 0x8c, 0x96, 0x79, 0x9d, 0xf5, 0x6d, 0xa2, 0xb6,
	0x83, 0xfe, 0x44, 0x6e, 0xb5, 0x44, 0x9b, 0xfa, 0x2b, 0x9b, 0xba, 0xdb, 0x49, 0x6f, 0x93, 0xb5,
	0x13, 0x56, 0x9b, 0x8f, 0x79, 0x76, 0x60, 0x13, 0x7b, 0x0b, 0xbe, 0x81, 0x1b, 0xd9, 0x14, 0x0f,
	0x6d, 0x0a, 0xa4, 0xd8, 0x63, 0xa5, 0x38, 0x11, 0x5a, 0xa8, 0x5c, 0x64, 0x8f, 0xfc, 0xb1, 0xb2,
	0x11, 0x6c, 0x93, 0x6a, 0x0c, 0x9b, 0xe0, 0xb1, 0x3f, 0x56, 0x62, 0x11, 0x88, 0x18, 0x36, 0xeb,
	0x80, 0x67, 0x4f, 0x1c, 0x11, 0x91, 0x04, 0xbb, 0x03, 0x99, 0x36, 0xd3, 0xd7, 0x36, 0x53, 0x2a,
	0xb7, 0xda, 0xcf, 0xe1, 0x92, 0xed, 0xe7, 0x9b, 0x05, 0xed, 0xa7, 0x69, 0x17, 0x4f, 0x17, 0xb4,
	0x8b, 0x6f, 0x93, 0x76, 0xf1, 0x6f, 0x8f, 0x6c, 0xfd, 0xc6, 0xb4, 0x64, 0xca, 0xbc, 0x60, 0x45,
	0x71, 0x79, 0xc4, 0xfc, 0xbc, 0x3d, 0xe3, 0x74, 0xfe, 0xea, 0x85, 0x6e, 0x7a, 0x46, 0x24, 0xc2,
	0x6e, 0x8a, 0x04, 0xdc, 0x33, 0x5a, 0x0e, 0x58, 0xaf, 0x61, 0xe3, 0x59, 0xc1, 0x4c, 0x73, 0x6b,
	0x0a, 0x36, 0xac, 0xb7, 0x19, 0xa3, 0x86, 0x11, 0x69, 0xb0, 0x7f, 0x98, 0x52, 0x95, 0x61, 0xf6,
	0xc3, 0xb9, 0x5e, 0x81, 0x14, 0x60, 0xd8, 0xdc, 0x42, 0x3d, 0x22, 0x51, 0xe3, 0xde, 0x45, 0x2f,
	0xec, 0x5d, 0x3b, 0x5d, 0xbd, 0x0b, 0xae, 0xa0, 0x9c, 0x8d, 0xaa, 0x11, 0x1b, 0xfb, 0x0e, 0x10,
	0x6c, 0x7b, 0x05, 0xf5, 0x63, 0x44, 0xfd, 0x48, 0xa3, 0xbb, 0x64, 0x95, 0x8b, 0xa2, 0x38, 0xf7,
	0x90, 0x77, 0x86, 0xbd, 0x14, 0xc2, 0x00, 0xe1, 0x7c, 0x2e, 0x58, 0x86, 0x57, 0xb5, 0x79, 0x2d,
	0x0b, 0x23, 0x74, 0x60, 0x78, 0x50, 0x2c, 0xc3, 0x83, 0x15, 0x31, 0x3c, 0x52, 0x21, 0x4f, 0x5e,
	0xc8, 0xa9, 0xcf, 0xe3, 0x28, 0x8e, 0x14, 0xc8, 0x33, 0xb7, 0x10, 0xc9, 0x13, 0x15, 0x38, 0x97,
	0x57, 0x75, 0x29, 0x73, 0x4f, 0x72, 0x6f, 0xd9, 0xfc, 0x76, 0x84, 0x28, 0x8e, 0x14, 0xbb, 0xf6,
	0xf1, 0xb1, 0x9a, 0x7a, 0x80, 0x3b, 0xc3, 0xae, 0x1d, 0x06, 0x08, 0xdd, 0x73, 0x01, 0x38, 0x73,
	0x1a, 0xa1, 0x60, 0xc0, 0x3d, 0xb6, 0x5b, 0x3a, 0xf4, 0xc7, 0x54, 0x43, 0xd0, 0xee, 0xf4, 0xa5,
	0xdc, 0x3c, 0x58, 0x8a, 0x9b, 0x0f, 0xbb, 0xb9, 0xd9, 0x70, 0xee, 0xd1, 0x02, 0xce, 0x3d, 0x4e,
	0x38, 0xf7, 0xcf, 0x3a, 0xd9, 0x7e, 0x3d, 0xab, 0x65, 0xa5, 0x5e, 0x0a, 0x23, 0x2e, 0x7f, 0xef,
	0xf9, 0xac, 0xa0, 0xeb, 0x93, 0x8d, 0xfa, 0x34, 0xbc, 0x77, 0x8f, 0x39, 0x2c, 0xc1, 0xd3, 0x91,
	0x89, 0x10, 0x97, 0xca, 0xf0, 0x97, 0x27, 0xf1, 0x77, 0xf4, 0x9c, 0x4b, 0x65, 0x98, 0x67, 0x22,
	0x21, 0xea, 0x75, 0xb9, 0x60, 0x9e, 0xfe, 0x3c, 0x0a, 0x95, 0xe6, 0xe9, 0x87, 0x25, 0x74, 0xec,
	0xb5, 0x27, 0xf5, 0x39, 0xff, 0x52, 0x39, 0x01, 0x29, 0x5d, 0x02, 0xa4, 0x3b, 0x9d, 0x20, 0x3d,
	0x24, 0xdb, 0x13, 0xa1, 0xaa, 0x52, 0x0c, 0xc3, 0xb1, 0xc5, 0xb1, 0x30, 0x95, 0x61, 0xbd, 0x89,
	0x84, 0xc8, 0xd8, 0xe5, 0x82, 0x39, 0x4e, 0x84, 0x12, 0xef, 0x2a, 0x2e, 0x8a, 0xe6, 0x02, 0x8d,
	0x14, 0x98, 0xe3, 0xdc, 0x42, 0xbc, 0x4c, 0x54, 0x68, 0x51, 0xc9, 0xeb, 0x0c, 0x17, 0xe9, 0xb6,
	0x03, 0x0e, 0x7c, 0x2d, 0x11, 0x91, 0xb4, 0xdb, 0x99, 0xc2, 0x63, 0x6f, 0x29, 0x78, 0xdc, 0xfb,
	0x7f, 0x78, 0x2c, 0x7b, 0xa7, 0xfe, 0x74, 0x8d, 0xd0, 0x57, 0x67, 0x53, 0x2d, 0x6a, 0x98, 0xd9,
	0x73, 0xc5, 0x8a, 0xf3, 0x5a, 0xd6, 0x97, 0xfc, 0xc0, 0xfc, 0xd8, 0x27, 0x44, 0xcf, 0x7f, 0xdc,
	0x71, 0xe8, 0x40, 0x8a, 0xfd, 0x5d, 0x29, 0xfe, 0x59, 0xc7, 0x01, 0x23, 0x51, 0xe3, 0x03, 0xfa,
	0xe6, 0x85, 0x07, 0xf4, 0xeb, 0x5d, 0x07, 0xf4, 0xd6, 0x65, 0x7c, 0x6b, 0xe9, 0xcb, 0xf8, 0xf6,
	0xa2, 0xcb, 0x78, 0x9f, 0x6c, 0x8c, 0x59, 0xf9, 0x86, 0x29, 0x0e, 0x1d, 0xad, 0x61, 0x03, 0x92,
	0xa0, 0xfe, 0x90, 0x89, 0xd9, 0x90, 0xc8, 0xd0, 0x3c, 0x45, 0x28, 0xa7, 0x57, 0xb5, 0x91, 0x25,
	0xa6, 0x44, 0xa7, 0x8f, 0xfe, 0x4c, 0xb2, 0x2e, 0x1d, 0x91, 0x63, 0xa1, 0x3f, 0x7e, 0x5e, 0x53,
	0xbe, 0x03, 0xee, 0x41, 0xd2, 0xe9, 0x8b, 0x9f, 0x37, 0xd7, 0x11, 0x52, 0x16, 0xfa, 0x5b, 0x97,
	0x9a, 0xdb, 0x4b, 0x5e, 0x6a, 0xee, 0x5c, 0x70, 0xa9, 0xc9, 0x16, 0xec, 0xd7, 0xbb, 0xf1, 0x7e,
	0x1d, 0xaf, 0xd9, 0x7f, 0xef, 0xfc, 0xf8, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x05, 0x4a, 0xd8,
	0xb9, 0x1d, 0x1a, 0x00, 0x00,
}
