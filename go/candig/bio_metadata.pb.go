// Code generated by protoc-gen-go. DO NOT EDIT.
// source: candig/bio_metadata.proto

package candig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Individual struct {
	// The Individual's :ref:`id <apidesign_object_ids>`. This is unique in the
	// context of the server instance.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The ID of the dataset this Individual belongs to.
	DatasetId string `protobuf:"bytes,2,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// The Individual's name. This is a label or symbolic identifier for the individual.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The Individual's description. This attribute contains human readable text.
	// The "description" attributes should not contain any structured data.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this Individual's record
	// was created.
	Created string `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this Individual record
	// was updated.
	Updated string `protobuf:"bytes,6,opt,name=updated,proto3" json:"updated,omitempty"`
	// For a representation of an NCBI Taxon ID as an OntologyTerm, see
	// NCBITaxon Ontology
	//   http://www.obofoundry.org/ontology/ncbitaxon.html
	// For example, 'Homo sapiens' has the ID 9606. The NCBITaxon ontology ID for
	// this is NCBITaxon:9606, which has the URI
	// http://purl.obolibrary.org/obo/NCBITaxon_9606
	Species *OntologyTerm `protobuf:"bytes,7,opt,name=species,proto3" json:"species,omitempty"`
	// The genetic sex of this individual.
	// Use `null` when unknown or not applicable.
	// Recommended: PATO http://purl.obolibrary.org/obo/PATO_0020001; PATO_0020002
	Sex *OntologyTerm `protobuf:"bytes,8,opt,name=sex,proto3" json:"sex,omitempty"`
	// A map of additional information regarding the Individual.
	Attributes *Attributes `protobuf:"bytes,10,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// String format: PRO-ddddda
	PatientId string `protobuf:"bytes,11,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	// Can be array of strings later
	RegionalProfilingCentre string `protobuf:"bytes,12,opt,name=regional_profiling_centre,json=regionalProfilingCentre,proto3" json:"regional_profiling_centre,omitempty"`
	//
	Diagnosis *OntologyTerm `protobuf:"bytes,13,opt,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	// pathology_type: [metastatic, primary, recurrent, relapse]
	PathologyType string `protobuf:"bytes,14,opt,name=pathology_type,json=pathologyType,proto3" json:"pathology_type,omitempty"`
	//enrollment_approval_date: date (YYYY-MM-DD)
	EnrollmentApprovalDate string `protobuf:"bytes,15,opt,name=enrollment_approval_date,json=enrollmentApprovalDate,proto3" json:"enrollment_approval_date,omitempty"`
	//enrollment_approval_initials: string
	EnrollmentApprovalInitials string `protobuf:"bytes,16,opt,name=enrollment_approval_initials,json=enrollmentApprovalInitials,proto3" json:"enrollment_approval_initials,omitempty"`
	//date_of_upload_to_sFTP: date (YYYY-MM-DD)
	DateOfUploadToSFTP string `protobuf:"bytes,17,opt,name=date_of_upload_to_sFTP,json=dateOfUploadToSFTP,proto3" json:"date_of_upload_to_sFTP,omitempty"`
	//tumor_board_presentation_date: date (YYYY-MM-DD) andchar [W, R, P]
	TumorBoardPresentationDateAndAnalyses string `protobuf:"bytes,18,opt,name=tumor_board_presentation_date_and_analyses,json=tumorBoardPresentationDateAndAnalyses,proto3" json:"tumor_board_presentation_date_and_analyses,omitempty"`
	//comments: string (edited)
	Comments             string   `protobuf:"bytes,19,opt,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Individual) Reset()         { *m = Individual{} }
func (m *Individual) String() string { return proto.CompactTextString(m) }
func (*Individual) ProtoMessage()    {}
func (*Individual) Descriptor() ([]byte, []int) {
	return fileDescriptor_9565be33ecf125b1, []int{0}
}

func (m *Individual) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Individual.Unmarshal(m, b)
}
func (m *Individual) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Individual.Marshal(b, m, deterministic)
}
func (m *Individual) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Individual.Merge(m, src)
}
func (m *Individual) XXX_Size() int {
	return xxx_messageInfo_Individual.Size(m)
}
func (m *Individual) XXX_DiscardUnknown() {
	xxx_messageInfo_Individual.DiscardUnknown(m)
}

var xxx_messageInfo_Individual proto.InternalMessageInfo

func (m *Individual) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Individual) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *Individual) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Individual) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Individual) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Individual) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

func (m *Individual) GetSpecies() *OntologyTerm {
	if m != nil {
		return m.Species
	}
	return nil
}

func (m *Individual) GetSex() *OntologyTerm {
	if m != nil {
		return m.Sex
	}
	return nil
}

func (m *Individual) GetAttributes() *Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Individual) GetPatientId() string {
	if m != nil {
		return m.PatientId
	}
	return ""
}

func (m *Individual) GetRegionalProfilingCentre() string {
	if m != nil {
		return m.RegionalProfilingCentre
	}
	return ""
}

func (m *Individual) GetDiagnosis() *OntologyTerm {
	if m != nil {
		return m.Diagnosis
	}
	return nil
}

func (m *Individual) GetPathologyType() string {
	if m != nil {
		return m.PathologyType
	}
	return ""
}

func (m *Individual) GetEnrollmentApprovalDate() string {
	if m != nil {
		return m.EnrollmentApprovalDate
	}
	return ""
}

func (m *Individual) GetEnrollmentApprovalInitials() string {
	if m != nil {
		return m.EnrollmentApprovalInitials
	}
	return ""
}

func (m *Individual) GetDateOfUploadToSFTP() string {
	if m != nil {
		return m.DateOfUploadToSFTP
	}
	return ""
}

func (m *Individual) GetTumorBoardPresentationDateAndAnalyses() string {
	if m != nil {
		return m.TumorBoardPresentationDateAndAnalyses
	}
	return ""
}

func (m *Individual) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

type Biosample struct {
	// The Biosample :ref:`id <apidesign_object_ids>`. This is unique in the
	// context of the server instance.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The ID of the dataset this Biosample belongs to.
	DatasetId string `protobuf:"bytes,2,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// The Biosample's name This is a label or symbolic identifier for the biosample.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// The biosample's description. This attribute contains human readable text.
	// The "description" attributes should not contain any structured data.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// OntologyTerm describing the primary disease associated with this Biosample.
	Disease *OntologyTerm `protobuf:"bytes,5,opt,name=disease,proto3" json:"disease,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this Biosample record
	// was created.
	Created string `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	// The :ref:`ISO 8601<metadata_date_time>` time at which this Biosample record was
	// updated.
	Updated string `protobuf:"bytes,7,opt,name=updated,proto3" json:"updated,omitempty"`
	// The individual this biosample was derived from.
	IndividualId string `protobuf:"bytes,8,opt,name=individual_id,json=individualId,proto3" json:"individual_id,omitempty"`
	// A map of additional information about the Biosample.
	Attributes *Attributes `protobuf:"bytes,10,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// An age object describing the age of the individual this biosample was
	// derived from at the time of collection. The Age object allows the encoding
	// of the age either as ISO8601 duraion or time interval (preferred), or
	// as ontology term object.
	IndividualAgeAtCollection *Age `protobuf:"bytes,11,opt,name=individual_age_at_collection,json=individualAgeAtCollection,proto3" json:"individual_age_at_collection,omitempty"`
	//estimated_tumor_content: string(%)
	EstimatedTumorContent string `protobuf:"bytes,12,opt,name=estimated_tumor_content,json=estimatedTumorContent,proto3" json:"estimated_tumor_content,omitempty"`
	//normal_sample_source: string
	NormalSampleSource string `protobuf:"bytes,13,opt,name=normal_sample_source,json=normalSampleSource,proto3" json:"normal_sample_source,omitempty"`
	//biopsy_data: date (YYYY-MM-DD)
	BiopsyData string `protobuf:"bytes,14,opt,name=biopsy_data,json=biopsyData,proto3" json:"biopsy_data,omitempty"`
	//tumor_biopsy_anatomical_site: string
	TumorBiopsyAnatomicalSite string `protobuf:"bytes,15,opt,name=tumor_biopsy_anatomical_site,json=tumorBiopsyAnatomicalSite,proto3" json:"tumor_biopsy_anatomical_site,omitempty"`
	//biopsy_type: string
	BiopsyType string `protobuf:"bytes,16,opt,name=biopsy_type,json=biopsyType,proto3" json:"biopsy_type,omitempty"`
	//sample_shipment_date: date (YYYY-MM-DD)
	SampleShipmentDate   string   `protobuf:"bytes,17,opt,name=sample_shipment_date,json=sampleShipmentDate,proto3" json:"sample_shipment_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Biosample) Reset()         { *m = Biosample{} }
func (m *Biosample) String() string { return proto.CompactTextString(m) }
func (*Biosample) ProtoMessage()    {}
func (*Biosample) Descriptor() ([]byte, []int) {
	return fileDescriptor_9565be33ecf125b1, []int{1}
}

func (m *Biosample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Biosample.Unmarshal(m, b)
}
func (m *Biosample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Biosample.Marshal(b, m, deterministic)
}
func (m *Biosample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Biosample.Merge(m, src)
}
func (m *Biosample) XXX_Size() int {
	return xxx_messageInfo_Biosample.Size(m)
}
func (m *Biosample) XXX_DiscardUnknown() {
	xxx_messageInfo_Biosample.DiscardUnknown(m)
}

var xxx_messageInfo_Biosample proto.InternalMessageInfo

func (m *Biosample) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Biosample) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *Biosample) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Biosample) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Biosample) GetDisease() *OntologyTerm {
	if m != nil {
		return m.Disease
	}
	return nil
}

func (m *Biosample) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Biosample) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

func (m *Biosample) GetIndividualId() string {
	if m != nil {
		return m.IndividualId
	}
	return ""
}

func (m *Biosample) GetAttributes() *Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Biosample) GetIndividualAgeAtCollection() *Age {
	if m != nil {
		return m.IndividualAgeAtCollection
	}
	return nil
}

func (m *Biosample) GetEstimatedTumorContent() string {
	if m != nil {
		return m.EstimatedTumorContent
	}
	return ""
}

func (m *Biosample) GetNormalSampleSource() string {
	if m != nil {
		return m.NormalSampleSource
	}
	return ""
}

func (m *Biosample) GetBiopsyData() string {
	if m != nil {
		return m.BiopsyData
	}
	return ""
}

func (m *Biosample) GetTumorBiopsyAnatomicalSite() string {
	if m != nil {
		return m.TumorBiopsyAnatomicalSite
	}
	return ""
}

func (m *Biosample) GetBiopsyType() string {
	if m != nil {
		return m.BiopsyType
	}
	return ""
}

func (m *Biosample) GetSampleShipmentDate() string {
	if m != nil {
		return m.SampleShipmentDate
	}
	return ""
}

type Age struct {
	// The :ref:`ISO 8601<metadata_date_time>` age of this object as ISO8601
	// duration or time intervals. The use of time intervals makes an additional
	// anchor unnecessary (i.e. DOB and age can be represented as start-anchored
	// time interval, e.g. 1967-11-21/P40Y10M05D)
	// TODO: Anonymous reference time attribute/pointer?
	Age string `protobuf:"bytes,1,opt,name=age,proto3" json:"age,omitempty"`
	// HPO is recommended, for example, subclasses of
	// http://purl.obolibrary.org/obo/HP_0011007
	AgeClass             *OntologyTerm `protobuf:"bytes,2,opt,name=age_class,json=ageClass,proto3" json:"age_class,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Age) Reset()         { *m = Age{} }
func (m *Age) String() string { return proto.CompactTextString(m) }
func (*Age) ProtoMessage()    {}
func (*Age) Descriptor() ([]byte, []int) {
	return fileDescriptor_9565be33ecf125b1, []int{2}
}

func (m *Age) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Age.Unmarshal(m, b)
}
func (m *Age) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Age.Marshal(b, m, deterministic)
}
func (m *Age) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Age.Merge(m, src)
}
func (m *Age) XXX_Size() int {
	return xxx_messageInfo_Age.Size(m)
}
func (m *Age) XXX_DiscardUnknown() {
	xxx_messageInfo_Age.DiscardUnknown(m)
}

var xxx_messageInfo_Age proto.InternalMessageInfo

func (m *Age) GetAge() string {
	if m != nil {
		return m.Age
	}
	return ""
}

func (m *Age) GetAgeClass() *OntologyTerm {
	if m != nil {
		return m.AgeClass
	}
	return nil
}

func init() {
	proto.RegisterType((*Individual)(nil), "candig.Individual")
	proto.RegisterType((*Biosample)(nil), "candig.Biosample")
	proto.RegisterType((*Age)(nil), "candig.Age")
}

func init() { proto.RegisterFile("candig/bio_metadata.proto", fileDescriptor_9565be33ecf125b1) }

var fileDescriptor_9565be33ecf125b1 = []byte{
	// 734 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x95, 0x51, 0x6f, 0x1b, 0x45,
	0x10, 0xc7, 0x95, 0xa4, 0xb5, 0xe3, 0x71, 0x13, 0xc2, 0x36, 0xb4, 0xeb, 0x28, 0x88, 0x28, 0xa8,
	0xa8, 0xe2, 0xc1, 0x14, 0x23, 0x21, 0xc4, 0x0b, 0x5c, 0x5d, 0x55, 0x32, 0x42, 0xaa, 0x65, 0x9b,
	0x07, 0x9e, 0x56, 0xe3, 0xdb, 0xc9, 0x75, 0xa5, 0xbb, 0xdd, 0xd5, 0xed, 0xba, 0xc2, 0x5f, 0x82,
	0x0f, 0xc0, 0xa7, 0x45, 0x3b, 0x77, 0x3e, 0x1b, 0x41, 0xf2, 0xc0, 0x43, 0xdf, 0xbc, 0xf3, 0xfb,
	0xcf, 0xce, 0xec, 0xdc, 0xfc, 0x65, 0x18, 0xe5, 0x68, 0xb5, 0x29, 0xbe, 0x59, 0x1b, 0xa7, 0x2a,
	0x8a, 0xa8, 0x31, 0xe2, 0xd8, 0xd7, 0x2e, 0x3a, 0xd1, 0x6b, 0xd0, 0xd5, 0xd3, 0x56, 0x92, 0xbb,
	0xaa, 0x72, 0xb6, 0x81, 0xb7, 0x7f, 0xf6, 0x00, 0x66, 0x56, 0x9b, 0x0f, 0x46, 0x6f, 0xb0, 0x14,
	0xe7, 0x70, 0x6c, 0xb4, 0x3c, 0xba, 0x39, 0x7a, 0x39, 0x58, 0x1c, 0x1b, 0x2d, 0x3e, 0x07, 0x48,
	0x37, 0x05, 0x8a, 0xca, 0x68, 0x79, 0xcc, 0xf1, 0x41, 0x1b, 0x99, 0x69, 0x21, 0xe0, 0x91, 0xc5,
	0x8a, 0xe4, 0x09, 0x03, 0xfe, 0x2d, 0x6e, 0x60, 0xa8, 0x29, 0xe4, 0xb5, 0xf1, 0xd1, 0x38, 0x2b,
	0x1f, 0x31, 0x3a, 0x0c, 0x09, 0x09, 0xfd, 0xbc, 0x26, 0x8c, 0xa4, 0xe5, 0x63, 0xa6, 0xbb, 0x63,
	0x22, 0x1b, 0xaf, 0x99, 0xf4, 0x1a, 0xd2, 0x1e, 0xc5, 0x18, 0xfa, 0xc1, 0x53, 0x6e, 0x28, 0xc8,
	0xfe, 0xcd, 0xd1, 0xcb, 0xe1, 0xe4, 0x72, 0xdc, 0x3c, 0x67, 0xfc, 0xce, 0x46, 0x57, 0xba, 0x62,
	0xbb, 0xa2, 0xba, 0x5a, 0xec, 0x44, 0xe2, 0x2b, 0x38, 0x09, 0xf4, 0x87, 0x3c, 0x7d, 0x40, 0x9b,
	0x04, 0x62, 0x02, 0x80, 0x31, 0xd6, 0x66, 0xbd, 0x89, 0x14, 0x24, 0xb0, 0x5c, 0xec, 0xe4, 0x59,
	0x47, 0x16, 0x07, 0xaa, 0x34, 0x14, 0x8f, 0xd1, 0x90, 0xe5, 0xa1, 0x0c, 0x9b, 0xa1, 0xb4, 0x91,
	0x99, 0x16, 0x3f, 0xc2, 0xa8, 0xa6, 0xc2, 0x38, 0x8b, 0xa5, 0xf2, 0xb5, 0xbb, 0x33, 0xa5, 0xb1,
	0x85, 0xca, 0xc9, 0xc6, 0x9a, 0xe4, 0x13, 0x56, 0x3f, 0xdf, 0x09, 0xe6, 0x3b, 0x3e, 0x65, 0x2c,
	0x26, 0x30, 0xd0, 0x06, 0x0b, 0xeb, 0x82, 0x09, 0xf2, 0xec, 0x81, 0xe6, 0xf7, 0x32, 0xf1, 0x02,
	0xce, 0x3d, 0xc6, 0xf7, 0xcc, 0x54, 0xdc, 0x7a, 0x92, 0xe7, 0x5c, 0xe4, 0xac, 0x8b, 0xae, 0xb6,
	0x9e, 0xc4, 0x0f, 0x20, 0xc9, 0xd6, 0xae, 0x2c, 0xab, 0xd4, 0x38, 0x7a, 0x5f, 0xbb, 0x0f, 0x58,
	0xaa, 0x34, 0x5e, 0xf9, 0x09, 0x27, 0x3c, 0xdb, 0xf3, 0xac, 0xc5, 0x6f, 0x30, 0x92, 0xf8, 0x19,
	0xae, 0xff, 0x2b, 0xd3, 0x58, 0x13, 0x0d, 0x96, 0x41, 0x5e, 0x70, 0xf6, 0xd5, 0xbf, 0xb3, 0x67,
	0xad, 0x42, 0x4c, 0xe0, 0x59, 0xaa, 0xa3, 0xdc, 0x9d, 0xda, 0xf8, 0xd2, 0xa1, 0x56, 0xd1, 0xa9,
	0xf0, 0x76, 0x35, 0x97, 0x9f, 0x72, 0xae, 0x48, 0xf4, 0xdd, 0xdd, 0x6f, 0xcc, 0x56, 0x6e, 0xf9,
	0x76, 0x35, 0x17, 0xbf, 0xc3, 0xd7, 0x71, 0x53, 0xb9, 0x5a, 0xad, 0x1d, 0xd6, 0x5a, 0xf9, 0x9a,
	0x02, 0xd9, 0x88, 0x69, 0x83, 0xb8, 0x69, 0x85, 0x56, 0x2b, 0xb4, 0x58, 0x6e, 0x03, 0x05, 0x29,
	0xf8, 0x9e, 0x17, 0x9c, 0xf1, 0x3a, 0x25, 0xcc, 0x0f, 0xf4, 0xe9, 0x15, 0x99, 0xd5, 0x59, 0x2b,
	0x16, 0x57, 0x70, 0x9a, 0x4c, 0x40, 0x36, 0x06, 0xf9, 0x94, 0x13, 0xbb, 0xf3, 0xed, 0x5f, 0x8f,
	0x61, 0xf0, 0xda, 0xb8, 0x80, 0x95, 0x2f, 0xe9, 0xe3, 0xf8, 0x61, 0x0c, 0x7d, 0x6d, 0x02, 0x61,
	0x20, 0xf6, 0xc3, 0xbd, 0xbb, 0xdd, 0x8a, 0x0e, 0xfd, 0xd3, 0xbb, 0xd7, 0x3f, 0xfd, 0x7f, 0xfa,
	0xe7, 0x4b, 0x38, 0x33, 0x9d, 0xcd, 0x53, 0xef, 0xa7, 0xcc, 0x9f, 0xec, 0x83, 0x33, 0xfd, 0xbf,
	0xcc, 0xf0, 0x2b, 0x5c, 0x1f, 0x5c, 0x8c, 0x05, 0x29, 0x8c, 0x2a, 0x77, 0x65, 0x49, 0x39, 0xbf,
	0x77, 0xc8, 0xb7, 0x0c, 0xbb, 0x5b, 0x0a, 0x5a, 0x8c, 0xf6, 0x09, 0x59, 0x41, 0x59, 0x9c, 0x76,
	0x6a, 0xf1, 0x3d, 0x3c, 0xa7, 0x10, 0x4d, 0x95, 0x7a, 0x56, 0xcd, 0xe7, 0xcf, 0x9d, 0x8d, 0x64,
	0x63, 0xeb, 0x9c, 0xcf, 0x3a, 0xbc, 0x4a, 0x74, 0xda, 0x40, 0xf1, 0x0a, 0x2e, 0xad, 0xab, 0x2b,
	0x2c, 0x55, 0xf3, 0xe1, 0x54, 0x70, 0x9b, 0x3a, 0x27, 0xb6, 0xd0, 0x60, 0x21, 0x1a, 0xb6, 0x64,
	0xb4, 0x64, 0x22, 0xbe, 0x80, 0xe1, 0xda, 0x38, 0x1f, 0xb6, 0x69, 0x99, 0xb0, 0xb5, 0x0c, 0x34,
	0xa1, 0x37, 0x18, 0x51, 0xfc, 0x04, 0xd7, 0xed, 0xfe, 0x35, 0x32, 0xb4, 0x18, 0x5d, 0x65, 0xf2,
	0x54, 0xc3, 0x74, 0x9e, 0x19, 0x35, 0x1b, 0xc7, 0x92, 0xac, 0x53, 0x2c, 0x4d, 0x3c, 0xac, 0xc0,
	0xa6, 0xbc, 0x38, 0xac, 0xc0, 0x8e, 0x7c, 0x05, 0x97, 0xbb, 0x6e, 0xdf, 0x1b, 0xcf, 0xe6, 0x62,
	0x37, 0xb6, 0x9e, 0x68, 0xd8, 0xb2, 0x45, 0x69, 0x87, 0x6f, 0x7f, 0x81, 0x93, 0xac, 0x20, 0x71,
	0x01, 0x27, 0x58, 0x50, 0xbb, 0x96, 0xe9, 0xa7, 0xf8, 0x16, 0x06, 0x69, 0xf4, 0x79, 0x89, 0x21,
	0xf0, 0x5a, 0xde, 0xb7, 0x44, 0xa7, 0x58, 0xd0, 0x34, 0xa9, 0xd6, 0x3d, 0xfe, 0x03, 0xf8, 0xee,
	0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xce, 0x49, 0x59, 0xfa, 0x3a, 0x06, 0x00, 0x00,
}
