// Code generated by protoc-gen-go. DO NOT EDIT.
// source: candig/sequence_annotations.proto

package candig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Node in the annotation graph that annotates a contiguous region of a
// sequence.
type Feature struct {
	// Id of this annotation node.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// An optional name to provide for the feature.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The gene symbol the feature occurs on. This field may be
	// replaced with a more generic representation in a future version.
	GeneSymbol string `protobuf:"bytes,3,opt,name=gene_symbol,json=geneSymbol,proto3" json:"gene_symbol,omitempty"`
	// Parent Id of this node. Set to empty string if node has no parent.
	ParentId string `protobuf:"bytes,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Ordered array of Child Ids of this node. Since not all child nodes are
	// ordered by genomic coordinates, this can't always be reconstructed from
	// parent_id's of the children alone.
	ChildIds []string `protobuf:"bytes,5,rep,name=child_ids,json=childIds,proto3" json:"child_ids,omitempty"`
	// Identifier for the containing feature set.
	FeatureSetId string `protobuf:"bytes,6,opt,name=feature_set_id,json=featureSetId,proto3" json:"feature_set_id,omitempty"`
	// The reference on which this feature occurs (e.g. `chr20` or `X`).
	ReferenceName string `protobuf:"bytes,7,opt,name=reference_name,json=referenceName,proto3" json:"reference_name,omitempty"`
	// The start position at which this feature occurs (0-based). This
	// corresponds to the first base of the string of reference bases. Genomic
	// positions are non-negative integers less than reference length. Features
	// spanning the join of circular genomes are represented as two features one
	// on each side of the join (position 0).
	Start int64 `protobuf:"varint,8,opt,name=start,proto3" json:"start,omitempty"`
	// The end position (exclusive), resulting in [start, end) closed-open
	// interval. This is typically calculated by `start +
	// reference_bases.length`.
	End int64 `protobuf:"varint,9,opt,name=end,proto3" json:"end,omitempty"`
	// The strand on which the feature is present.
	Strand Strand `protobuf:"varint,10,opt,name=strand,proto3,enum=candig.Strand" json:"strand,omitempty"`
	// Feature that is annotated by this region.  Normally, this will be a term
	// in the Sequence Ontology.
	FeatureType *OntologyTerm `protobuf:"bytes,11,opt,name=feature_type,json=featureType,proto3" json:"feature_type,omitempty"`
	// Name/value attributes of the annotation.  Attribute names follow the GFF3
	// naming convention of reserved names starting with an upper cases character,
	// and user-define names start with lower-case.  Most GFF3 pre-defined
	// attributes apply, the exceptions are ID and Parent, which are defined as
	// fields. Additional, the following attributes are added:
	//   * Score - the GFF3 score column
	//   * Phase - the GFF3 phase column for CDS features.
	Attributes           *Attributes `protobuf:"bytes,12,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Feature) Reset()         { *m = Feature{} }
func (m *Feature) String() string { return proto.CompactTextString(m) }
func (*Feature) ProtoMessage()    {}
func (*Feature) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d48ecbff5bdda86, []int{0}
}

func (m *Feature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Feature.Unmarshal(m, b)
}
func (m *Feature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Feature.Marshal(b, m, deterministic)
}
func (m *Feature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Feature.Merge(m, src)
}
func (m *Feature) XXX_Size() int {
	return xxx_messageInfo_Feature.Size(m)
}
func (m *Feature) XXX_DiscardUnknown() {
	xxx_messageInfo_Feature.DiscardUnknown(m)
}

var xxx_messageInfo_Feature proto.InternalMessageInfo

func (m *Feature) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Feature) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Feature) GetGeneSymbol() string {
	if m != nil {
		return m.GeneSymbol
	}
	return ""
}

func (m *Feature) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *Feature) GetChildIds() []string {
	if m != nil {
		return m.ChildIds
	}
	return nil
}

func (m *Feature) GetFeatureSetId() string {
	if m != nil {
		return m.FeatureSetId
	}
	return ""
}

func (m *Feature) GetReferenceName() string {
	if m != nil {
		return m.ReferenceName
	}
	return ""
}

func (m *Feature) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Feature) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *Feature) GetStrand() Strand {
	if m != nil {
		return m.Strand
	}
	return Strand_STRAND_UNSPECIFIED
}

func (m *Feature) GetFeatureType() *OntologyTerm {
	if m != nil {
		return m.FeatureType
	}
	return nil
}

func (m *Feature) GetAttributes() *Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// A set of sequence features annotations.
type FeatureSet struct {
	// The ID of this annotation set.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The ID of the dataset this annotation set belongs to.
	DatasetId string `protobuf:"bytes,2,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// The ID of the reference set which defines the coordinate-space for this
	// set of annotations.
	ReferenceSetId string `protobuf:"bytes,3,opt,name=reference_set_id,json=referenceSetId,proto3" json:"reference_set_id,omitempty"`
	// The display name for this annotation set.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// The source URI describing the file from which this annotation set was
	// generated, if any.
	SourceUri string `protobuf:"bytes,5,opt,name=source_uri,json=sourceUri,proto3" json:"source_uri,omitempty"`
	// A map of additional Feature Set information.
	Attributes           *Attributes `protobuf:"bytes,12,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FeatureSet) Reset()         { *m = FeatureSet{} }
func (m *FeatureSet) String() string { return proto.CompactTextString(m) }
func (*FeatureSet) ProtoMessage()    {}
func (*FeatureSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d48ecbff5bdda86, []int{1}
}

func (m *FeatureSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureSet.Unmarshal(m, b)
}
func (m *FeatureSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureSet.Marshal(b, m, deterministic)
}
func (m *FeatureSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureSet.Merge(m, src)
}
func (m *FeatureSet) XXX_Size() int {
	return xxx_messageInfo_FeatureSet.Size(m)
}
func (m *FeatureSet) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureSet.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureSet proto.InternalMessageInfo

func (m *FeatureSet) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FeatureSet) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *FeatureSet) GetReferenceSetId() string {
	if m != nil {
		return m.ReferenceSetId
	}
	return ""
}

func (m *FeatureSet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FeatureSet) GetSourceUri() string {
	if m != nil {
		return m.SourceUri
	}
	return ""
}

func (m *FeatureSet) GetAttributes() *Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// This message defines a format for exchanging continuous valued signal data,
// such as those produced experimentally (e.g. ChIP-Seq data) or through
// calculations (e.g. conservation scores). It can be used, for example,
// to share data from Wiggle, BigWig, and BedGraph sources.
type Continuous struct {
	// The start position at which this signal occurs (0-based). This
	// corresponds to the first base of the string of reference bases. Genomic
	// positions are non-negative integers less than the reference length.
	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	// The contiguous data values. Unsampled bases are given as NaN.
	Values []float64 `protobuf:"fixed64,2,rep,packed,name=values,proto3" json:"values,omitempty"`
	// Identifier for the containing continous set.
	ContinuousSetId string `protobuf:"bytes,3,opt,name=continuous_set_id,json=continuousSetId,proto3" json:"continuous_set_id,omitempty"`
	// The reference on which this signal is defined (e.g. `chr20` or `X`).
	ReferenceName        string   `protobuf:"bytes,4,opt,name=reference_name,json=referenceName,proto3" json:"reference_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Continuous) Reset()         { *m = Continuous{} }
func (m *Continuous) String() string { return proto.CompactTextString(m) }
func (*Continuous) ProtoMessage()    {}
func (*Continuous) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d48ecbff5bdda86, []int{2}
}

func (m *Continuous) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Continuous.Unmarshal(m, b)
}
func (m *Continuous) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Continuous.Marshal(b, m, deterministic)
}
func (m *Continuous) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Continuous.Merge(m, src)
}
func (m *Continuous) XXX_Size() int {
	return xxx_messageInfo_Continuous.Size(m)
}
func (m *Continuous) XXX_DiscardUnknown() {
	xxx_messageInfo_Continuous.DiscardUnknown(m)
}

var xxx_messageInfo_Continuous proto.InternalMessageInfo

func (m *Continuous) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Continuous) GetValues() []float64 {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *Continuous) GetContinuousSetId() string {
	if m != nil {
		return m.ContinuousSetId
	}
	return ""
}

func (m *Continuous) GetReferenceName() string {
	if m != nil {
		return m.ReferenceName
	}
	return ""
}

// A set of Continous messages. Continuous values can be sent
// as a single Continuous message containing all values or a series
// of Continuous messages to either limit the size of the values array
// or to skip NaN values.
type ContinuousSet struct {
	// The ID of this annotation set.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The ID of the dataset this annotation set belongs to.
	DatasetId string `protobuf:"bytes,2,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// The ID of the reference set which defines the coordinate-space for this
	// set of annotations.
	ReferenceSetId string `protobuf:"bytes,3,opt,name=reference_set_id,json=referenceSetId,proto3" json:"reference_set_id,omitempty"`
	// The display name for this annotation set.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// The source URI describing the file from which this annotation set was
	// generated, if any.
	SourceUri string `protobuf:"bytes,5,opt,name=source_uri,json=sourceUri,proto3" json:"source_uri,omitempty"`
	// A map of additional Feature Set information.
	Attributes           *Attributes `protobuf:"bytes,12,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ContinuousSet) Reset()         { *m = ContinuousSet{} }
func (m *ContinuousSet) String() string { return proto.CompactTextString(m) }
func (*ContinuousSet) ProtoMessage()    {}
func (*ContinuousSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d48ecbff5bdda86, []int{3}
}

func (m *ContinuousSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContinuousSet.Unmarshal(m, b)
}
func (m *ContinuousSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContinuousSet.Marshal(b, m, deterministic)
}
func (m *ContinuousSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContinuousSet.Merge(m, src)
}
func (m *ContinuousSet) XXX_Size() int {
	return xxx_messageInfo_ContinuousSet.Size(m)
}
func (m *ContinuousSet) XXX_DiscardUnknown() {
	xxx_messageInfo_ContinuousSet.DiscardUnknown(m)
}

var xxx_messageInfo_ContinuousSet proto.InternalMessageInfo

func (m *ContinuousSet) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContinuousSet) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *ContinuousSet) GetReferenceSetId() string {
	if m != nil {
		return m.ReferenceSetId
	}
	return ""
}

func (m *ContinuousSet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContinuousSet) GetSourceUri() string {
	if m != nil {
		return m.SourceUri
	}
	return ""
}

func (m *ContinuousSet) GetAttributes() *Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func init() {
	proto.RegisterType((*Feature)(nil), "candig.Feature")
	proto.RegisterType((*FeatureSet)(nil), "candig.FeatureSet")
	proto.RegisterType((*Continuous)(nil), "candig.Continuous")
	proto.RegisterType((*ContinuousSet)(nil), "candig.ContinuousSet")
}

func init() { proto.RegisterFile("candig/sequence_annotations.proto", fileDescriptor_1d48ecbff5bdda86) }

var fileDescriptor_1d48ecbff5bdda86 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x53, 0x4f, 0x8b, 0x13, 0x31,
	0x14, 0x27, 0x9d, 0x76, 0x76, 0xfb, 0xba, 0x3b, 0xae, 0x71, 0x91, 0xa0, 0x2c, 0x8e, 0x45, 0x65,
	0xf0, 0x50, 0xa1, 0x1e, 0x3c, 0xcb, 0xc2, 0x42, 0x2f, 0x0a, 0xd3, 0xf5, 0x3c, 0xa4, 0x93, 0xb7,
	0x35, 0xd0, 0x49, 0x6a, 0x92, 0x11, 0xfa, 0x21, 0xbc, 0xf8, 0xb9, 0x04, 0xbf, 0x92, 0x4c, 0x92,
	0xb6, 0x23, 0xea, 0xc5, 0xdb, 0xde, 0x26, 0xbf, 0x3f, 0xe1, 0xbd, 0xdf, 0x2f, 0x03, 0xcf, 0x6b,
	0xae, 0x84, 0x5c, 0xbf, 0xb1, 0xf8, 0xa5, 0x45, 0x55, 0x63, 0xc5, 0x95, 0xd2, 0x8e, 0x3b, 0xa9,
	0x95, 0x9d, 0x6d, 0x8d, 0x76, 0x9a, 0xa6, 0x41, 0xf2, 0xe4, 0x51, 0x94, 0xd6, 0xba, 0x69, 0xb4,
	0x0a, 0xe4, 0xf4, 0x7b, 0x02, 0x27, 0x37, 0xc8, 0x5d, 0x6b, 0x90, 0x66, 0x30, 0x90, 0x82, 0x91,
	0x9c, 0x14, 0xe3, 0x72, 0x20, 0x05, 0xa5, 0x30, 0x54, 0xbc, 0x41, 0x36, 0xf0, 0x88, 0xff, 0xa6,
	0xcf, 0x60, 0xb2, 0x46, 0x85, 0x95, 0xdd, 0x35, 0x2b, 0xbd, 0x61, 0x89, 0xa7, 0xa0, 0x83, 0x96,
	0x1e, 0xa1, 0x4f, 0x61, 0xbc, 0xe5, 0x06, 0x95, 0xab, 0xa4, 0x60, 0x43, 0x4f, 0x9f, 0x06, 0x60,
	0x21, 0x3a, 0xb2, 0xfe, 0x2c, 0x37, 0xa2, 0x92, 0xc2, 0xb2, 0x51, 0x9e, 0x74, 0xa4, 0x07, 0x16,
	0xc2, 0xd2, 0x17, 0x90, 0xdd, 0x85, 0x49, 0x2a, 0x8b, 0xde, 0x9e, 0x7a, 0xfb, 0x59, 0x44, 0x97,
	0xd8, 0x5d, 0xf1, 0x12, 0x32, 0x83, 0x77, 0x68, 0xfc, 0xb2, 0x7e, 0xbc, 0x13, 0xaf, 0x3a, 0x3f,
	0xa0, 0x1f, 0xba, 0x39, 0x2f, 0x61, 0x64, 0x1d, 0x37, 0x8e, 0x9d, 0xe6, 0xa4, 0x48, 0xca, 0x70,
	0xa0, 0x17, 0x90, 0xa0, 0x12, 0x6c, 0xec, 0xb1, 0xee, 0x93, 0xbe, 0x82, 0xd4, 0x3a, 0xc3, 0x95,
	0x60, 0x90, 0x93, 0x22, 0x9b, 0x67, 0xb3, 0x90, 0xd2, 0x6c, 0xe9, 0xd1, 0x32, 0xb2, 0xf4, 0x1d,
	0xec, 0xc7, 0xa8, 0xdc, 0x6e, 0x8b, 0x6c, 0x92, 0x93, 0x62, 0x32, 0xbf, 0xdc, 0xab, 0x3f, 0x2a,
	0xa7, 0x37, 0x7a, 0xbd, 0xbb, 0x45, 0xd3, 0x94, 0x93, 0xa8, 0xbc, 0xdd, 0x6d, 0x91, 0xce, 0x01,
	0xb8, 0x73, 0x46, 0xae, 0x5a, 0x87, 0x96, 0x9d, 0x79, 0x1b, 0xdd, 0xdb, 0xde, 0x1f, 0x98, 0xb2,
	0xa7, 0x9a, 0xfe, 0x20, 0x00, 0x37, 0x87, 0xa5, 0xff, 0xe8, 0xe5, 0x0a, 0x40, 0x70, 0xc7, 0x63,
	0x48, 0xa1, 0x9d, 0x71, 0x44, 0x16, 0x82, 0x16, 0x70, 0x71, 0x4c, 0x28, 0x8a, 0x42, 0x4f, 0xc7,
	0xe4, 0x42, 0x96, 0xfb, 0x82, 0x87, 0xbd, 0x82, 0xaf, 0x00, 0xac, 0x6e, 0x4d, 0x8d, 0x55, 0x6b,
	0x24, 0x1b, 0x85, 0xcb, 0x03, 0xf2, 0xc9, 0xc8, 0xff, 0x5a, 0xe7, 0x1b, 0x01, 0xb8, 0xd6, 0xca,
	0x49, 0xd5, 0xea, 0xd6, 0x1e, 0xab, 0x21, 0xfd, 0x6a, 0x1e, 0x43, 0xfa, 0x95, 0x6f, 0x5a, 0xb4,
	0x6c, 0x90, 0x27, 0x05, 0x29, 0xe3, 0x89, 0xbe, 0x86, 0x87, 0xf5, 0xc1, 0xfb, 0xfb, 0x3a, 0x0f,
	0x8e, 0xc4, 0xbf, 0xde, 0xc6, 0xf0, 0x2f, 0x6f, 0x63, 0xfa, 0x93, 0xc0, 0xf9, 0x75, 0xdf, 0x7a,
	0xdf, 0x13, 0x5e, 0xa5, 0xfe, 0x67, 0x7e, 0xfb, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x50, 0x57, 0xf2,
	0xc0, 0x0e, 0x04, 0x00, 0x00,
}
