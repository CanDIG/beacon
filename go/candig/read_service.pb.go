// Code generated by protoc-gen-go. DO NOT EDIT.
// source: candig/read_service.proto

package candig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google/api"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// This request maps to the body of `POST /readgroupsets/search` as JSON.
//
// TODO: Factor this out to a common API patterns section.
// - If searching by a resource ID, and that resource is not found, the method
//   will return a `404` HTTP status code (`NOT_FOUND`).
// - If searching by other attributes, e.g. `name`, and no matches are found, the
//   method will return a `200` HTTP status code (`OK`) with an empty result list.
type SearchReadGroupSetsRequest struct {
	// The dataset to search.
	DatasetId string `protobuf:"bytes,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	// Only return read group sets with this name (case-sensitive, exact match).
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	//  Specifying the id of a Biosample record will return only readgroups
	//  with the given biosampleId.
	BiosampleId string `protobuf:"bytes,3,opt,name=biosample_id,json=biosampleId,proto3" json:"biosample_id,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `next_page_token` from the previous response.
	PageToken            string   `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchReadGroupSetsRequest) Reset()         { *m = SearchReadGroupSetsRequest{} }
func (m *SearchReadGroupSetsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchReadGroupSetsRequest) ProtoMessage()    {}
func (*SearchReadGroupSetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff42d6df8fb16cd6, []int{0}
}

func (m *SearchReadGroupSetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReadGroupSetsRequest.Unmarshal(m, b)
}
func (m *SearchReadGroupSetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReadGroupSetsRequest.Marshal(b, m, deterministic)
}
func (m *SearchReadGroupSetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReadGroupSetsRequest.Merge(m, src)
}
func (m *SearchReadGroupSetsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchReadGroupSetsRequest.Size(m)
}
func (m *SearchReadGroupSetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReadGroupSetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReadGroupSetsRequest proto.InternalMessageInfo

func (m *SearchReadGroupSetsRequest) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *SearchReadGroupSetsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchReadGroupSetsRequest) GetBiosampleId() string {
	if m != nil {
		return m.BiosampleId
	}
	return ""
}

func (m *SearchReadGroupSetsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchReadGroupSetsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This is the response from `POST /readgroupsets/search` expressed as JSON.
type SearchReadGroupSetsResponse struct {
	// The list of matching read group sets.
	ReadGroupSets []*ReadGroupSet `protobuf:"bytes,1,rep,name=read_group_sets,json=readGroupSets,proto3" json:"read_group_sets,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchReadGroupSetsResponse) Reset()         { *m = SearchReadGroupSetsResponse{} }
func (m *SearchReadGroupSetsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchReadGroupSetsResponse) ProtoMessage()    {}
func (*SearchReadGroupSetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff42d6df8fb16cd6, []int{1}
}

func (m *SearchReadGroupSetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReadGroupSetsResponse.Unmarshal(m, b)
}
func (m *SearchReadGroupSetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReadGroupSetsResponse.Marshal(b, m, deterministic)
}
func (m *SearchReadGroupSetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReadGroupSetsResponse.Merge(m, src)
}
func (m *SearchReadGroupSetsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchReadGroupSetsResponse.Size(m)
}
func (m *SearchReadGroupSetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReadGroupSetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReadGroupSetsResponse proto.InternalMessageInfo

func (m *SearchReadGroupSetsResponse) GetReadGroupSets() []*ReadGroupSet {
	if m != nil {
		return m.ReadGroupSets
	}
	return nil
}

func (m *SearchReadGroupSetsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// This request maps to the URL `GET /readgroupsets/{read_group_set_id}`.
type GetReadGroupSetRequest struct {
	// The ID of the `ReadGroupSet` to be retrieved.
	ReadGroupSetId       string   `protobuf:"bytes,1,opt,name=read_group_set_id,json=readGroupSetId,proto3" json:"read_group_set_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReadGroupSetRequest) Reset()         { *m = GetReadGroupSetRequest{} }
func (m *GetReadGroupSetRequest) String() string { return proto.CompactTextString(m) }
func (*GetReadGroupSetRequest) ProtoMessage()    {}
func (*GetReadGroupSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff42d6df8fb16cd6, []int{2}
}

func (m *GetReadGroupSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReadGroupSetRequest.Unmarshal(m, b)
}
func (m *GetReadGroupSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReadGroupSetRequest.Marshal(b, m, deterministic)
}
func (m *GetReadGroupSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReadGroupSetRequest.Merge(m, src)
}
func (m *GetReadGroupSetRequest) XXX_Size() int {
	return xxx_messageInfo_GetReadGroupSetRequest.Size(m)
}
func (m *GetReadGroupSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReadGroupSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReadGroupSetRequest proto.InternalMessageInfo

func (m *GetReadGroupSetRequest) GetReadGroupSetId() string {
	if m != nil {
		return m.ReadGroupSetId
	}
	return ""
}

// ******************  /reads  *********************
// This request maps to the body of `POST /reads/search` as JSON.
//
// If a reference is specified, all queried `ReadGroup`s must be aligned
// to `ReferenceSet`s containing that same `Reference`. If no reference is
// specified, all `ReadGroup`s must be aligned to the same `ReferenceSet`.
type SearchReadsRequest struct {
	// The ReadGroups to search. At least one id must be specified.
	ReadGroupIds []string `protobuf:"bytes,1,rep,name=read_group_ids,json=readGroupIds,proto3" json:"read_group_ids,omitempty"`
	// The reference to query. Leaving blank returns results from all
	// references, including unmapped reads - this could be very large.
	ReferenceId string `protobuf:"bytes,2,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The start position (0-based) of this query.
	// If a reference is specified, this defaults to 0.
	// Genomic positions are non-negative integers less than reference length.
	// Requests spanning the join of circular genomes are represented as
	// two requests one on each side of the join (position 0).
	Start int64 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	// The end position (0-based, exclusive) of this query.
	// If a reference is specified, this defaults to the
	// reference's length.
	End int64 `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	// Specifies the maximum number of results to return in a single page.
	// If unspecified, a system default will be used.
	PageSize int32 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// To get the next page of results, set this parameter to the value of
	// `next_page_token` from the previous response.
	PageToken            string   `protobuf:"bytes,6,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchReadsRequest) Reset()         { *m = SearchReadsRequest{} }
func (m *SearchReadsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchReadsRequest) ProtoMessage()    {}
func (*SearchReadsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff42d6df8fb16cd6, []int{3}
}

func (m *SearchReadsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReadsRequest.Unmarshal(m, b)
}
func (m *SearchReadsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReadsRequest.Marshal(b, m, deterministic)
}
func (m *SearchReadsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReadsRequest.Merge(m, src)
}
func (m *SearchReadsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchReadsRequest.Size(m)
}
func (m *SearchReadsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReadsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReadsRequest proto.InternalMessageInfo

func (m *SearchReadsRequest) GetReadGroupIds() []string {
	if m != nil {
		return m.ReadGroupIds
	}
	return nil
}

func (m *SearchReadsRequest) GetReferenceId() string {
	if m != nil {
		return m.ReferenceId
	}
	return ""
}

func (m *SearchReadsRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *SearchReadsRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *SearchReadsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchReadsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// This is the response from `POST /reads/search` expressed as JSON.
type SearchReadsResponse struct {
	// The list of matching alignment messages, sorted by position.
	// Unmapped reads, which have no position, are returned last.
	Alignments []*ReadAlignment `protobuf:"bytes,1,rep,name=alignments,proto3" json:"alignments,omitempty"`
	// The continuation token, which is used to page through large result sets.
	// Provide this value in a subsequent request to return the next page of
	// results. This field will be empty if there aren't any additional results.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchReadsResponse) Reset()         { *m = SearchReadsResponse{} }
func (m *SearchReadsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchReadsResponse) ProtoMessage()    {}
func (*SearchReadsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff42d6df8fb16cd6, []int{4}
}

func (m *SearchReadsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchReadsResponse.Unmarshal(m, b)
}
func (m *SearchReadsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchReadsResponse.Marshal(b, m, deterministic)
}
func (m *SearchReadsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchReadsResponse.Merge(m, src)
}
func (m *SearchReadsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchReadsResponse.Size(m)
}
func (m *SearchReadsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchReadsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchReadsResponse proto.InternalMessageInfo

func (m *SearchReadsResponse) GetAlignments() []*ReadAlignment {
	if m != nil {
		return m.Alignments
	}
	return nil
}

func (m *SearchReadsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func init() {
	proto.RegisterType((*SearchReadGroupSetsRequest)(nil), "candig.SearchReadGroupSetsRequest")
	proto.RegisterType((*SearchReadGroupSetsResponse)(nil), "candig.SearchReadGroupSetsResponse")
	proto.RegisterType((*GetReadGroupSetRequest)(nil), "candig.GetReadGroupSetRequest")
	proto.RegisterType((*SearchReadsRequest)(nil), "candig.SearchReadsRequest")
	proto.RegisterType((*SearchReadsResponse)(nil), "candig.SearchReadsResponse")
}

func init() { proto.RegisterFile("candig/read_service.proto", fileDescriptor_ff42d6df8fb16cd6) }

var fileDescriptor_ff42d6df8fb16cd6 = []byte{
	// 530 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x41, 0x6e, 0x13, 0x31,
	0x14, 0xd5, 0x34, 0x4d, 0x44, 0x7e, 0xda, 0x06, 0x4c, 0x40, 0xe9, 0xa4, 0x40, 0x3a, 0x20, 0x48,
	0x41, 0x4a, 0x4a, 0x11, 0x12, 0x42, 0x6c, 0x10, 0x8b, 0x2a, 0x3b, 0x34, 0x61, 0x3f, 0x72, 0xe3,
	0xcf, 0x60, 0x91, 0xd8, 0xc3, 0xd8, 0xad, 0x50, 0x10, 0x1b, 0x58, 0x70, 0x00, 0xee, 0xc1, 0x1d,
	0x38, 0x03, 0x57, 0xe0, 0x18, 0x2c, 0x90, 0xed, 0xc9, 0xc4, 0x69, 0x87, 0x8a, 0xdd, 0xe4, 0x3f,
	0xfb, 0xbf, 0xff, 0xde, 0xfb, 0x0e, 0xec, 0x4e, 0xa9, 0x60, 0x3c, 0x1d, 0xe5, 0x48, 0x59, 0xa2,
	0x30, 0x3f, 0xe3, 0x53, 0x1c, 0x66, 0xb9, 0xd4, 0x92, 0x34, 0x1c, 0x14, 0x12, 0xef, 0x88, 0x72,
	0x58, 0xb8, 0x97, 0x4a, 0x99, 0xce, 0x70, 0x44, 0x33, 0x3e, 0xa2, 0x42, 0x48, 0x4d, 0x35, 0x97,
	0xa2, 0x40, 0xa3, 0x1f, 0x01, 0x84, 0x13, 0xa4, 0xf9, 0xf4, 0x5d, 0x8c, 0x94, 0x1d, 0xe7, 0xf2,
	0x34, 0x9b, 0xa0, 0x56, 0x31, 0x7e, 0x38, 0x45, 0xa5, 0xc9, 0x2d, 0x00, 0x46, 0x35, 0x55, 0xa8,
	0x13, 0xce, 0xba, 0x41, 0x3f, 0x18, 0x34, 0xe3, 0x66, 0x51, 0x19, 0x33, 0x42, 0x60, 0x53, 0xd0,
	0x39, 0x76, 0x37, 0x2c, 0x60, 0xbf, 0xc9, 0x3e, 0x6c, 0x9d, 0x70, 0xa9, 0xe8, 0x3c, 0x9b, 0xa1,
	0xb9, 0x54, 0xb3, 0x58, 0xab, 0xac, 0x8d, 0x19, 0xe9, 0x41, 0x33, 0xa3, 0x29, 0x26, 0x8a, 0x2f,
	0xb0, 0xbb, 0xd9, 0x0f, 0x06, 0xf5, 0xf8, 0x8a, 0x29, 0x4c, 0xf8, 0x02, 0x0d, 0xa5, 0x05, 0xb5,
	0x7c, 0x8f, 0xa2, 0x5b, 0x77, 0x94, 0xa6, 0xf2, 0xc6, 0x14, 0xa2, 0xaf, 0x01, 0xf4, 0x2a, 0x07,
	0x56, 0x99, 0x14, 0x0a, 0xc9, 0x0b, 0x68, 0x5b, 0x83, 0x52, 0x83, 0x24, 0x0a, 0xb5, 0xea, 0x06,
	0xfd, 0xda, 0xa0, 0x75, 0xd4, 0x19, 0x3a, 0x73, 0x86, 0xfe, 0xbd, 0x78, 0x3b, 0xf7, 0xbb, 0x90,
	0xfb, 0xd0, 0x16, 0xf8, 0x51, 0x27, 0xde, 0x04, 0x4e, 0xdb, 0xb6, 0x29, 0xbf, 0x2e, 0xa7, 0x78,
	0x05, 0x37, 0x8f, 0x51, 0xaf, 0x75, 0x2a, 0x1c, 0x3b, 0x80, 0x6b, 0xeb, 0xfc, 0x2b, 0xe3, 0x76,
	0x7c, 0xae, 0x31, 0x8b, 0x7e, 0x06, 0x40, 0x56, 0x52, 0x4a, 0xcf, 0xef, 0xc1, 0x8e, 0xd7, 0x81,
	0x33, 0x27, 0xa0, 0x19, 0x6f, 0x95, 0xd7, 0xc7, 0x4c, 0x19, 0x9b, 0x73, 0x7c, 0x8b, 0x39, 0x8a,
	0xa9, 0xb5, 0xd9, 0x8d, 0xd9, 0x2a, 0x6b, 0x63, 0x46, 0x3a, 0x50, 0x57, 0x9a, 0xe6, 0xda, 0x46,
	0x50, 0x8b, 0xdd, 0x0f, 0x72, 0x15, 0x6a, 0x28, 0x98, 0xb5, 0xbd, 0x16, 0x9b, 0xcf, 0xf5, 0x38,
	0xea, 0x97, 0xc6, 0xd1, 0x38, 0x1f, 0x87, 0x86, 0xeb, 0x6b, 0x12, 0x8a, 0x14, 0x9e, 0x02, 0xd0,
	0x19, 0x4f, 0xc5, 0x1c, 0x45, 0x19, 0xc0, 0x0d, 0x3f, 0x80, 0x97, 0x4b, 0x34, 0xf6, 0x0e, 0xfe,
	0xaf, 0xfd, 0x47, 0x7f, 0x36, 0xa0, 0x65, 0xba, 0x4c, 0xdc, 0x2b, 0x20, 0xdf, 0x02, 0x7f, 0x8c,
	0x55, 0x9c, 0xd1, 0x92, 0xf2, 0xdf, 0x2b, 0x1e, 0xde, 0xbd, 0xf4, 0x8c, 0xd3, 0x13, 0x3d, 0xf8,
	0xf2, 0xeb, 0xf7, 0xf7, 0x8d, 0xfd, 0x68, 0x6f, 0x74, 0x76, 0x38, 0x7c, 0x36, 0x3c, 0xb4, 0x2f,
	0xcc, 0x06, 0x64, 0x36, 0x6c, 0xa4, 0xec, 0xd5, 0xe7, 0xc1, 0x43, 0xb2, 0x80, 0xf6, 0xb9, 0xc5,
	0x20, 0xb7, 0x97, 0x04, 0xd5, 0x1b, 0x13, 0x56, 0x2e, 0x66, 0xf4, 0xd8, 0x32, 0x3e, 0x22, 0x07,
	0xd5, 0x8c, 0x9f, 0x2e, 0x2c, 0xd9, 0x67, 0x92, 0x42, 0xcb, 0xcb, 0x82, 0x84, 0x17, 0x85, 0x95,
	0xa2, 0x7b, 0x95, 0x58, 0x21, 0xf6, 0x8e, 0xa5, 0xde, 0x8d, 0x3a, 0x3e, 0xb5, 0x27, 0xf2, 0xa4,
	0x61, 0xff, 0x3b, 0x9e, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x71, 0x83, 0x5e, 0x66, 0x92, 0x04,
	0x00, 0x00,
}
